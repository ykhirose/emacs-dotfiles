;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1926 1943])
            ("org" include nil nil [1944 1958])
            ("org-macs" include nil nil [1959 1978])
            ("declare-function" code nil nil [1980 2105])
            ("declare-function" code nil nil [2106 2174])
            ("declare-function" code nil nil [2175 2253])
            ("declare-function" code nil nil [2254 2332])
            ("declare-function" code nil nil [2333 2411])
            ("declare-function" code nil nil [2412 2490])
            ("declare-function" code nil nil [2491 2569])
            ("declare-function" code nil nil [2570 2648])
            ("declare-function" code nil nil [2649 2717])
            ("declare-function" code nil nil [2718 2796])
            ("declare-function" code nil nil [2797 2875])
            ("declare-function" code nil nil [2876 2954])
            ("declare-function" code nil nil [2955 3023])
            ("declare-function" code nil nil [3024 3102])
            ("declare-function" code nil nil [3103 3181])
            ("declare-function" code nil nil [3182 3260])
            ("declare-function" code nil nil [3261 3327])
            ("declare-function" code nil nil [3329 3392])
            ("declare-function" code nil nil [3393 3494])
            ("declare-function" code nil nil [3495 3560])
            ("declare-function" code nil nil [3561 3639])
            ("declare-function" code nil nil [3640 3713])
            ("declare-function" code nil nil [3714 3801])
            ("declare-function" code nil nil [3802 3863])
            ("declare-function" code nil nil [3864 3931])
            ("declare-function" code nil nil [3932 4010])
            ("declare-function" code nil nil [4011 4065])
            ("declare-function" code nil nil [4066 4128])
            ("declare-function" code nil nil [4129 4195])
            ("calendar-mode-map" variable nil nil [4197 4223])
            ("org-clock-current-task" variable nil nil [4224 4255])
            ("org-current-tag-alist" variable nil nil [4256 4286])
            ("org-mobile-force-id-on-agenda-items" variable nil nil [4287 4331])
            ("org-habit-show-habits" variable nil nil [4332 4362])
            ("org-habit-show-habits-only-for-today" variable nil nil [4363 4408])
            ("org-habit-show-all-today" variable nil nil [4409 4442])
            ("org-agenda-buffer-name" variable (:default-value "*Org Agenda*") nil [4507 4553])
            ("org-agenda-overriding-header" variable nil nil [4554 4595])
            ("org-agenda-title-append" variable nil nil [4596 4632])
            ("with-no-warnings" code nil nil [4633 4666])
            ("with-no-warnings" code nil nil [4699 4731])
            ("original-date" variable nil nil [4765 4787])
            ("org-agenda-undo-list" variable nil nil [4839 4938])
            ("org-agenda-pending-undo-list" variable nil nil [4939 5056])
            ("org-agenda-confirm-kill" variable (:default-value 1) nil [5058 5456])
            ("org-agenda-compact-blocks" variable nil nil [5458 5700])
            ("org-agenda-block-separator" variable (:default-value 61) nil [5702 6173])
            ("org-agenda-export" customgroup (:user-visible-flag t) nil [6175 6314])
            ("org-agenda-with-colors" variable (:default-value t) nil [6316 6443])
            ("org-agenda-exporter-settings" variable nil nil [6445 6991])
            ("org-agenda-before-write-hook" variable (:default-value (quote (org-agenda-add-entry-text))) nil [6993 7288])
            ("org-agenda-add-entry-text-maxlines" variable nil nil [7290 7924])
            ("org-agenda-add-entry-text-descriptive-links" variable (:default-value t) nil [7926 8267])
            ("org-agenda-export-html-style" variable nil nil [8269 9627])
            ("org-agenda-persistent-filter" variable nil nil [9629 9772])
            ("org-agenda-custom-commands" customgroup (:user-visible-flag t) nil [9774 9921])
            ("org-sorting-choice" variable
               (:constant-flag t
                :default-value (quote (choice (const time-up) (const time-down) (const timestamp-up) (const timestamp-down) (const scheduled-up) (const scheduled-down) (const deadline-up) (const deadline-down) (const ts-up) (const ts-down) (const tsia-up) (const tsia-down) (const category-keep) (const category-up) (const category-down) (const tag-down) (const tag-up) (const priority-up) (const priority-down) (const todo-state-up) (const todo-state-down) (const effort-up) (const effort-down) (const habit-up) (const habit-down) (const alpha-up) (const alpha-down) (const user-defined-up) (const user-defined-down))))
                nil [9923 10614])
            ("defvaralias" code nil nil [10737 10806])
            ("defvaralias" code nil nil [10807 10862])
            ("org-agenda-entry-types" variable (:default-value (quote (:deadline :scheduled :timestamp :sexp))) nil [10864 12560])
            ("org-agenda-custom-commands-local-options" variable
               (:constant-flag t
                :default-value (\` (repeat :tag "Local settings for this command.  Remember to quote values" (choice :tag "Setting" (list :tag "Heading for this block" (const org-agenda-overriding-header) (string :tag "Headline")) (list :tag "Files to be searched" (const org-agenda-files) (list (const :format "" quote) (repeat (file)))) (list :tag "Sorting strategy" (const org-agenda-sorting-strategy) (list (const :format "" quote) (repeat (\, org-sorting-choice)))) (list :tag "Prefix format" (const org-agenda-prefix-format :value "  %-12:c%?-12t% s") (string)) (list :tag "Number of days in agenda" (const org-agenda-span) (list (const :format "" quote) (choice (const :tag "Day" day) (const :tag "Week" week) (const :tag "Fortnight" fortnight) (const :tag "Month" month) (const :tag "Year" year) (integer :tag "Custom")))) (list :tag "Fixed starting date" (const org-agenda-start-day) (string :value "2007-11-01")) (list :tag "Start on day of week" (const org-agenda-start-on-weekday) (choice :value 1 (const :tag "Today" nil) (integer :tag "Weekday No."))) (list :tag "Include data from diary" (const org-agenda-include-diary) (boolean)) (list :tag "Deadline Warning days" (const org-deadline-warning-days) (integer :value 1)) (list :tag "Category filter preset" (const org-agenda-category-filter-preset) (list (const :format "" quote) (repeat (string :tag "+category or -category")))) (list :tag "Tags filter preset" (const org-agenda-tag-filter-preset) (list (const :format "" quote) (repeat (string :tag "+tag or -tag")))) (list :tag "Effort filter preset" (const org-agenda-effort-filter-preset) (list (const :format "" quote) (repeat (string :tag "+=10 or -=10 or +<10 or ->10")))) (list :tag "Regexp filter preset" (const org-agenda-regexp-filter-preset) (list (const :format "" quote) (repeat (string :tag "+regexp or -regexp")))) (list :tag "Set daily/weekly entry types" (const org-agenda-entry-types) (list (const :format "" quote) (set :greedy t :value (\, org-agenda-entry-types) (const :deadline) (const :scheduled) (const :deadline*) (const :scheduled*) (const :timestamp) (const :sexp)))) (list :tag "Standard skipping condition" :value (org-agenda-skip-function (quote (org-agenda-skip-entry-if))) (const org-agenda-skip-function) (list (const :format "" quote) (list (choice :tag "Skipping range" (const :tag "Skip entry" org-agenda-skip-entry-if) (const :tag "Skip subtree" org-agenda-skip-subtree-if)) (repeat :inline t :tag "Conditions for skipping" (choice :tag "Condition type" (list :tag "Regexp matches" :inline t (const :format "" regexp) (regexp)) (list :tag "Regexp does not match" :inline t (const :format "" notregexp) (regexp)) (list :tag "TODO state is" :inline t (const todo) (choice (const :tag "Any not-done state" todo) (const :tag "Any done state" done) (const :tag "Any state" any) (list :tag "Keyword list" (const :format "" quote) (repeat (string :tag "Keyword"))))) (list :tag "TODO state is not" :inline t (const nottodo) (choice (const :tag "Any not-done state" todo) (const :tag "Any done state" done) (const :tag "Any state" any) (list :tag "Keyword list" (const :format "" quote) (repeat (string :tag "Keyword"))))) (const :tag "scheduled" scheduled) (const :tag "not scheduled" notscheduled) (const :tag "deadline" deadline) (const :tag "no deadline" notdeadline) (const :tag "timestamp" timestamp) (const :tag "no timestamp" nottimestamp)))))) (list :tag "Non-standard skipping condition" :value (org-agenda-skip-function) (const org-agenda-skip-function) (sexp :tag "Function or form (quoted!)")) (list :tag "Any variable" (variable :tag "Variable") (sexp :tag "Value (sexp)"))))))
                nil [12562 17062])
            ("org-agenda-custom-commands" variable (:default-value (quote (("n" "Agenda and all TODOs" ((agenda "") (alltodo "")))))) nil [17065 23181])
            ("org-agenda-query-register" variable (:default-value 111) nil [23183 23453])
            ("org-stuck-projects" variable (:default-value (quote ("+LEVEL=2/-DONE" ("TODO" "NEXT" "NEXTACTION") nil ""))) nil [23455 25412])
            ("org-agenda-skip" customgroup (:user-visible-flag t) nil [25414 25545])
            ("org-agenda-skip-function-global" variable nil nil [25547 26317])
            ("org-agenda-daily/weekly" customgroup (:user-visible-flag t) nil [26319 26459])
            ("org-agenda-todo-list" customgroup (:user-visible-flag t) nil [26460 26603])
            ("org-agenda-match-view" customgroup (:user-visible-flag t) nil [26604 26765])
            ("org-agenda-search-view" customgroup (:user-visible-flag t) nil [26766 26903])
            ("org-agenda-archives-mode" variable nil nil [26905 27240])
            ("org-agenda-restriction-lock-highlight-subtree" variable (:default-value t) nil [27242 27550])
            ("org-agenda-skip-comment-trees" variable (:default-value t) nil [27552 27763])
            ("org-agenda-todo-list-sublevels" variable (:default-value t) nil [27765 28067])
            ("org-agenda-todo-ignore-with-date" variable nil nil [28069 28630])
            ("org-agenda-todo-ignore-timestamp" variable nil nil [28632 30281])
            ("org-agenda-todo-ignore-scheduled" variable nil nil [30283 31649])
            ("org-agenda-todo-ignore-deadlines" variable nil nil [31651 33402])
            ("org-agenda-todo-ignore-time-comparison-use-seconds" variable nil nil [33404 34086])
            ("org-agenda-tags-todo-honor-ignore-options" variable nil nil [34088 34745])
            ("org-agenda-skip-scheduled-if-done" variable nil nil [34747 35170])
            ("org-agenda-skip-scheduled-if-deadline-is-shown" variable nil nil [35172 36140])
            ("org-agenda-skip-timestamp-if-deadline-is-shown" variable nil nil [36142 36764])
            ("org-agenda-skip-deadline-if-done" variable nil nil [36766 37237])
            ("org-agenda-skip-deadline-prewarning-if-scheduled" variable nil nil [37239 38378])
            ("org-agenda-skip-scheduled-delay-if-deadline" variable nil nil [38380 39165])
            ("org-agenda-skip-additional-timestamps-same-entry" variable nil nil [39167 39474])
            ("org-agenda-skip-timestamp-if-done" variable nil nil [39476 39676])
            ("org-agenda-dim-blocked-tasks" variable (:default-value t) nil [39678 40747])
            ("org-agenda-startup" customgroup (:user-visible-flag t) nil [40749 40898])
            ("org-agenda-menu-show-matcher" variable (:default-value t) nil [40900 41345])
            ("org-agenda-menu-two-columns" variable nil nil [41347 41605])
            ("org-agenda-finalize-hook" variable nil nil [41607 41980])
            ("org-agenda-mouse-1-follows-link" variable nil nil [41982 42232])
            ("org-agenda-start-with-follow-mode" variable nil nil [42234 42400])
            ("org-agenda-follow-indirect" variable nil nil [42402 42605])
            ("org-agenda-show-outline-path" variable (:default-value t) nil [42607 42763])
            ("org-agenda-start-with-entry-text-mode" variable nil nil [42765 42939])
            ("org-agenda-entry-text-maxlines" variable (:default-value 5) nil [42941 43260])
            ("org-agenda-entry-text-exclude-regexps" variable nil nil [43262 43546])
            ("org-agenda-entry-text-leaders" variable (:default-value "    > ") nil [43548 43743])
            ("org-agenda-entry-text-cleanup-hook" variable nil nil [43745 44181])
            ("org-agenda-include-inactive-timestamps" variable nil nil [44183 44312])
            ("org-agenda-windows" customgroup (:user-visible-flag t) nil [44314 44463])
            ("org-agenda-window-setup" variable (:default-value (quote reorganize-frame)) nil [44465 45302])
            ("org-agenda-window-frame-fractions" variable (:default-value (quote (0.5 . 0.75))) nil [45304 45678])
            ("org-agenda-restore-windows-after-quit" variable nil nil [45680 46133])
            ("org-agenda-span" variable (:default-value (quote week)) nil [46135 46561])
            ("org-agenda-start-on-weekday" variable (:default-value 1) nil [46563 46929])
            ("org-agenda-show-all-dates" variable (:default-value t) nil [46931 47154])
            ("org-agenda-format-date" variable (:default-value (quote org-agenda-format-date-aligned)) nil [47156 47641])
            ("org-agenda-format-date-aligned" function (:arguments ("date")) nil [47643 48416])
            ("org-agenda-time-leading-zero" variable nil nil [48418 48654])
            ("org-agenda-timegrid-use-ampm" variable nil nil [48656 48815])
            ("org-agenda-time-of-day-to-ampm" function (:arguments ("time")) nil [48817 49376])
            ("org-agenda-time-of-day-to-ampm-maybe" function (:arguments ("time")) nil [49378 49606])
            ("org-agenda-weekend-days" variable (:default-value (quote (6 0))) nil [49608 50035])
            ("org-agenda-move-date-from-past-immediately-to-today" variable (:default-value t) nil [50037 50468])
            ("org-agenda-include-diary" variable nil nil [50470 50702])
            ("org-agenda-include-deadlines" variable (:default-value t) nil [50704 50947])
            ("org-agenda-show-future-repeats" variable (:default-value t) nil [50949 51398])
            ("org-agenda-prefer-last-repeat" variable nil nil [51400 52421])
            ("org-scheduled-past-days" variable (:default-value 10000) nil [52423 52761])
            ("org-deadline-past-days" variable (:default-value 10000) nil [52763 53142])
            ("org-agenda-log-mode-items" variable (:default-value (quote (closed clock))) nil [53144 53779])
            ("org-agenda-clock-consistency-checks" variable (:default-value (quote (:max-duration "10:00" :min-duration 0 :max-gap "0:05" :gap-ok-around ("4:00") :default-face ((:background "DarkRed") (:foreground "white")) :overlap-face nil :gap-face nil :no-end-time-face nil :long-face nil :short-face nil))) nil [53781 55832])
            ("org-agenda-log-mode-add-notes" variable (:default-value t) nil [55834 56159])
            ("org-agenda-start-with-log-mode" variable nil nil [56161 56845])
            ("org-agenda-start-with-clockreport-mode" variable nil nil [56847 57057])
            ("org-agenda-clockreport-parameter-plist" variable (:default-value (quote (:link t :maxlevel 2))) nil [57059 57622])
            ("org-agenda-search-view-always-boolean" variable nil nil [57624 58878])
            ("defvaralias" code nil nil [58880 58976])
            ("org-agenda-search-view-force-full-words" variable nil nil [58978 59214])
            ("org-agenda-search-view-max-outline-level" variable nil nil [59216 59583])
            ("org-agenda-time-grid" customgroup (:user-visible-flag t) nil [59585 59727])
            ("org-agenda-search-headline-for-time" variable (:default-value t) nil [59729 60249])
            ("org-agenda-use-time-grid" variable (:default-value t) nil [60251 60692])
            ("org-agenda-time-grid" variable (:default-value (quote ((daily today require-timed) (800 1000 1200 1400 1600 1800 2000) "......" "----------------"))) nil [60694 62208])
            ("org-agenda-show-current-time-in-grid" variable (:default-value t) nil [62210 62384])
            ("org-agenda-current-time-string" variable (:default-value "now - - - - - - - - - - - - - - - - - - - - - - - - -") nil [62386 62609])
            ("org-agenda-sorting" customgroup (:user-visible-flag t) nil [62611 62743])
            ("org-agenda-sorting-strategy" variable (:default-value (quote ((agenda habit-down time-up priority-down category-keep) (todo priority-down category-keep) (tags priority-down category-keep) (search category-keep)))) nil [62745 66475])
            ("org-agenda-cmp-user-defined" variable nil nil [66477 66900])
            ("org-sort-agenda-notime-is-late" variable (:default-value t) nil [66902 67374])
            ("org-sort-agenda-noeffort-is-high" variable (:default-value t) nil [67376 67767])
            ("org-agenda-line-format" customgroup (:user-visible-flag t) nil [67769 67926])
            ("org-agenda-prefix-format" variable (:default-value (quote ((agenda . " %i %-12:c%?-12t% s") (todo . " %i %-12:c") (tags . " %i %-12:c") (search . " %i %-12:c")))) nil [67928 70993])
            ("org-prefix-format-compiled" variable nil nil [70995 71258])
            ("org-agenda-todo-keyword-format" variable (:default-value "%-1s") nil [71260 71521])
            ("org-agenda-diary-sexp-prefix" variable nil nil [71523 71892])
            ("org-agenda-timerange-leaders" variable (:default-value (quote ("" "(%d/%d): "))) nil [71894 72491])
            ("org-agenda-scheduled-leaders" variable (:default-value (quote ("Scheduled: " "Sched.%2dx: "))) nil [72493 73221])
            ("org-agenda-inactive-leader" variable (:default-value "[") nil [73223 73463])
            ("org-agenda-deadline-leaders" variable (:default-value (quote ("Deadline:  " "In %3d d.: " "%2d d. ago: "))) nil [73465 74095])
            ("org-agenda-remove-times-when-in-prefix" variable (:default-value t) nil [74097 74932])
            ("org-agenda-remove-timeranges-from-blocks" variable nil nil [74934 75153])
            ("org-agenda-default-appointment-duration" variable nil nil [75155 75519])
            ("org-agenda-show-inherited-tags" variable (:default-value t) nil [75521 76475])
            ("org-agenda-use-tag-inheritance" variable (:default-value (quote (todo search agenda))) nil [76477 77464])
            ("org-agenda-hide-tags-regexp" variable nil nil [77466 77865])
            ("org-agenda-remove-tags" variable nil nil [77867 78249])
            ("defvaralias" code nil nil [78251 78329])
            ("org-agenda-tags-column" variable (:default-value (quote auto)) nil [78331 78922])
            ("defvaralias" code nil nil [78924 78994])
            ("org-agenda-fontify-priorities" variable (:default-value (quote cookies)) nil [78996 80080])
            ("org-agenda-day-face-function" variable nil nil [80082 80449])
            ("org-agenda-category-icon-alist" variable nil nil [80451 81748])
            ("org-agenda-column-view" customgroup (:user-visible-flag t) nil [81750 81890])
            ("org-agenda-view-columns-initially" variable nil nil [81892 82136])
            ("org-agenda-columns-show-summaries" variable (:default-value t) nil [82138 82310])
            ("org-agenda-columns-compute-summary-properties" variable (:default-value t) nil [82312 82835])
            ("org-agenda-columns-add-appointments-to-effort-sum" variable nil nil [82837 83334])
            ("org-agenda-auto-exclude-function" variable nil nil [83336 83985])
            ("org-agenda-bulk-custom-functions" variable nil nil [83987 84488])
            ("org-agenda-with-point-at-orig-entry" function (:arguments ("string" "body")) nil [84490 85041])
            ("def-edebug-spec" code nil nil [85042 85107])
            ("org-add-agenda-custom-command" function (:arguments ("entry")) nil [85109 85511])
            ("org-agenda-mode-map" variable (:default-value (make-sparse-keymap)) nil [85545 85628])
            ("defvaralias" code nil nil [85629 85682])
            ("org-agenda-menu" variable nil nil [85684 85708])
            ("org-agenda-restrict" variable nil nil [85739 85771])
            ("org-agenda-follow-mode" variable nil nil [85802 85837])
            ("org-agenda-entry-text-mode" variable nil nil [85838 85877])
            ("org-agenda-clockreport-mode" variable nil nil [85878 85918])
            ("org-agenda-show-log" variable nil nil [85919 86080])
            ("org-agenda-redo-command" variable nil nil [86081 86117])
            ("org-agenda-query-string" variable nil nil [86118 86154])
            ("org-agenda-mode-hook" variable nil nil [86155 86294])
            ("org-agenda-type" variable nil nil [86295 86323])
            ("org-agenda-force-single-file" variable nil nil [86324 86365])
            ("org-agenda-bulk-marked-entries" variable nil nil [86366 86473])
            ("org-agenda-current-date" variable nil nil [86474 86552])
            ("org-agenda-sticky" variable nil nil [86591 86866])
            ("org-toggle-sticky-agenda" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [86885 87495])
            ("org-agenda-buffer" variable nil nil [87497 87572])
            ("org-agenda-last-prefix-arg" variable nil nil [87574 87613])
            ("org-agenda-this-buffer-name" variable nil nil [87614 87654])
            ("org-agenda-doing-sticky-redo" variable nil nil [87655 87696])
            ("org-agenda-this-buffer-is-sticky" variable nil nil [87697 87742])
            ("org-agenda-last-indirect-buffer" variable nil nil [87743 87851])
            ("org-agenda-local-vars" variable
               (:constant-flag t
                :default-value (quote (org-agenda-this-buffer-name org-agenda-undo-list org-agenda-pending-undo-list org-agenda-follow-mode org-agenda-entry-text-mode org-agenda-clockreport-mode org-agenda-show-log org-agenda-redo-command org-agenda-query-string org-agenda-type org-agenda-bulk-marked-entries org-agenda-undo-has-started-in org-agenda-info org-agenda-pre-window-conf org-agenda-columns-active org-agenda-tag-filter org-agenda-category-filter org-agenda-top-headline-filter org-agenda-regexp-filter org-agenda-effort-filter org-agenda-markers org-agenda-last-search-view-search-was-boolean org-agenda-last-indirect-buffer org-agenda-filtered-by-category org-agenda-filter-form org-agenda-cycle-counter org-agenda-last-prefix-arg)))
                nil [87853 88778])
            ("org-agenda-mode" function (:user-visible-flag t) nil [88780 91511])
            ("substitute-key-definition" code nil nil [91513 91600])
            ("org-defkey" code nil nil [91601 91661])
            ("org-defkey" code nil nil [91662 91722])
            ("org-defkey" code nil nil [91723 91788])
            ("org-defkey" code nil nil [91789 91849])
            ("org-defkey" code nil nil [91850 91912])
            ("org-defkey" code nil nil [91913 91989])
            ("org-defkey" code nil nil [91990 92065])
            ("org-defkey" code nil nil [92066 92131])
            ("org-defkey" code nil nil [92132 92199])
            ("org-defkey" code nil nil [92200 92269])
            ("org-defkey" code nil nil [92270 92341])
            ("org-defkey" code nil nil [92342 92415])
            ("org-defkey" code nil nil [92416 92488])
            ("org-defkey" code nil nil [92489 92556])
            ("org-defkey" code nil nil [92557 92628])
            ("org-defkey" code nil nil [92629 92696])
            ("org-defkey" code nil nil [92697 92760])
            ("org-defkey" code nil nil [92761 92830])
            ("org-defkey" code nil nil [92831 92887])
            ("org-defkey" code nil nil [92888 92963])
            ("org-defkey" code nil nil [92964 93042])
            ("org-defkey" code nil nil [93043 93129])
            ("org-defkey" code nil nil [93130 93197])
            ("org-defkey" code nil nil [93198 93265])
            ("org-defkey" code nil nil [93266 93329])
            ("org-defkey" code nil nil [93330 93395])
            ("org-defkey" code nil nil [93396 93470])
            ("org-defkey" code nil nil [93471 93544])
            ("org-defkey" code nil nil [93545 93611])
            ("org-defkey" code nil nil [93612 93693])
            ("org-defkey" code nil nil [93694 93779])
            ("org-defkey" code nil nil [93780 93860])
            ("org-defkey" code nil nil [93861 93926])
            ("org-defkey" code nil nil [93927 93991])
            ("org-defkey" code nil nil [93992 94052])
            ("org-defkey" code nil nil [94053 94113])
            ("org-defkey" code nil nil [94114 94203])
            ("org-defkey" code nil nil [94204 94268])
            ("org-defkey" code nil nil [94269 94333])
            ("org-defkey" code nil nil [94334 94400])
            ("org-defkey" code nil nil [94401 94466])
            ("org-defkey" code nil nil [94467 94531])
            ("org-defkey" code nil nil [94532 94597])
            ("org-defkey" code nil nil [94598 94663])
            ("org-defkey" code nil nil [94664 94728])
            ("org-defkey" code nil nil [94729 94793])
            ("org-defkey" code nil nil [94794 94868])
            ("org-defkey" code nil nil [94869 94944])
            ("org-defkey" code nil nil [94945 95025])
            ("org-defkey" code nil nil [95026 95107])
            ("org-defkey" code nil nil [95109 95169])
            ("org-defkey" code nil nil [95170 95234])
            ("org-defkey" code nil nil [95235 95299])
            ("let" code nil nil [95300 95428])
            ("org-defkey" code nil nil [95430 95490])
            ("org-defkey" code nil nil [95491 95556])
            ("org-defkey" code nil nil [95557 95621])
            ("org-defkey" code nil nil [95622 95679])
            ("org-defkey" code nil nil [95680 95747])
            ("org-defkey" code nil nil [95748 95809])
            ("org-defkey" code nil nil [95810 95875])
            ("org-defkey" code nil nil [95876 95941])
            ("org-defkey" code nil nil [95942 95995])
            ("org-defkey" code nil nil [95996 96053])
            ("org-defkey" code nil nil [96054 96113])
            ("org-defkey" code nil nil [96114 96181])
            ("org-defkey" code nil nil [96182 96268])
            ("org-defkey" code nil nil [96269 96338])
            ("org-defkey" code nil nil [96339 96392])
            ("org-defkey" code nil nil [96393 96446])
            ("org-defkey" code nil nil [96447 96500])
            ("org-defkey" code nil nil [96501 96562])
            ("org-defkey" code nil nil [96563 96632])
            ("org-defkey" code nil nil [96633 96695])
            ("org-defkey" code nil nil [96696 96754])
            ("org-defkey" code nil nil [96755 96813])
            ("org-defkey" code nil nil [96814 96876])
            ("org-defkey" code nil nil [96877 96935])
            ("org-defkey" code nil nil [96936 96998])
            ("substitute-key-definition" code nil nil [96999 97096])
            ("substitute-key-definition" code nil nil [97097 97202])
            ("org-defkey" code nil nil [97203 97258])
            ("org-defkey" code nil nil [97259 97329])
            ("org-defkey" code nil nil [97330 97404])
            ("org-defkey" code nil nil [97405 97466])
            ("org-defkey" code nil nil [97467 97524])
            ("org-defkey" code nil nil [97525 97585])
            ("org-defkey" code nil nil [97586 97648])
            ("org-defkey" code nil nil [97649 97710])
            ("org-defkey" code nil nil [97711 97774])
            ("org-defkey" code nil nil [97775 97838])
            ("org-defkey" code nil nil [97839 97896])
            ("org-defkey" code nil nil [97897 97954])
            ("org-defkey" code nil nil [97955 98023])
            ("org-defkey" code nil nil [98024 98081])
            ("org-defkey" code nil nil [98082 98151])
            ("org-defkey" code nil nil [98152 98210])
            ("org-defkey" code nil nil [98211 98283])
            ("org-defkey" code nil nil [98284 98345])
            ("org-defkey" code nil nil [98346 98409])
            ("org-defkey" code nil nil [98410 98469])
            ("org-defkey" code nil nil [98470 98530])
            ("org-defkey" code nil nil [98531 98593])
            ("org-defkey" code nil nil [98594 98663])
            ("org-defkey" code nil nil [98664 98737])
            ("org-defkey" code nil nil [98738 98813])
            ("org-defkey" code nil nil [98814 98893])
            ("org-defkey" code nil nil [98894 98948])
            ("org-defkey" code nil nil [98949 99005])
            ("org-defkey" code nil nil [99006 99073])
            ("org-defkey" code nil nil [99074 99154])
            ("org-defkey" code nil nil [99155 99244])
            ("org-defkey" code nil nil [99246 99315])
            ("org-defkey" code nil nil [99316 99390])
            ("org-defkey" code nil nil [99391 99463])
            ("org-defkey" code nil nil [99464 99541])
            ("org-defkey" code nil nil [99542 99604])
            ("org-defkey" code nil nil [99605 99670])
            ("org-defkey" code nil nil [99671 99736])
            ("org-defkey" code nil nil [99737 99803])
            ("org-defkey" code nil nil [99804 99872])
            ("org-defkey" code nil nil [99873 99940])
            ("org-defkey" code nil nil [99941 100012])
            ("org-defkey" code nil nil [100013 100070])
            ("org-defkey" code nil nil [100071 100131])
            ("define-key" code nil nil [100132 100203])
            ("org-defkey" code nil nil [100204 100272])
            ("org-defkey" code nil nil [100273 100341])
            ("org-defkey" code nil nil [100343 100408])
            ("org-defkey" code nil nil [100409 100474])
            ("define-key" code nil nil [100476 100560])
            ("define-key" code nil nil [100561 100647])
            ("when" code nil nil [100649 100748])
            ("easy-menu-define" code nil nil [100749 107864])
            ("org-agenda-allow-remote-undo" variable (:default-value t) nil [107883 107982])
            ("org-agenda-undo-has-started-in" variable nil nil [107983 108104])
            ("org-agenda-undo" function (:user-visible-flag t) nil [108106 109425])
            ("org-verify-change-for-undo" function (:arguments ("l1" "l2")) nil [109427 109671])
            ("org-agenda-restrict-begin" variable (:default-value (make-marker)) nil [109694 109742])
            ("org-agenda-restrict-end" variable (:default-value (make-marker)) nil [109743 109789])
            ("org-agenda-last-dispatch-buffer" variable nil nil [109790 109834])
            ("org-agenda-overriding-restriction" variable nil nil [109835 109881])
            ("org-agenda-custom-commands-contexts" variable nil nil [109883 111685])
            ("org-agenda-max-entries" variable nil nil [111687 112254])
            ("org-agenda-max-todos" variable nil nil [112256 112815])
            ("org-agenda-max-tags" variable nil nil [112817 113402])
            ("org-agenda-max-effort" variable nil nil [113404 114003])
            ("org-agenda-keep-restricted-file-list" variable nil nil [114005 114054])
            ("org-keys" variable nil nil [114055 114076])
            ("org-match" variable nil nil [114077 114099])
            ("org-agenda" function
               (:user-visible-flag t
                :arguments ("arg" "org-keys" "restriction"))
                nil [114115 121968])
            ("org-agenda-multi" variable nil nil [121970 121995])
            ("org-agenda-append-agenda" function (:user-visible-flag t) nil [121997 122479])
            ("org-agenda-normalize-custom-commands" function (:arguments ("cmds")) nil [122481 122770])
            ("org-agenda-get-restriction-and-command" function (:arguments ("prefix-descriptions")) nil [122772 129359])
            ("org-agenda-fit-window-to-buffer" function nil nil [129361 129859])
            ("org-cmd" variable nil nil [129861 129881])
            ("org-agenda-overriding-cmd" variable nil nil [129882 129920])
            ("org-agenda-overriding-arguments" variable nil nil [129921 129965])
            ("org-agenda-overriding-cmd-arguments" variable nil nil [129966 130014])
            ("org-agenda-run-series" function (:arguments ("name" "series")) nil [130015 132068])
            ("org-batch-agenda" function (:arguments ("cmd-key" "parameters")) nil [132085 132749])
            ("org-agenda-info" variable nil nil [132751 132779])
            ("org-batch-agenda-csv" function (:arguments ("cmd-key" "parameters")) nil [132796 135246])
            ("org-fix-agenda-info" function (:arguments ("props")) nil [135248 136692])
            ("org-agenda-export-csv-mapper" function (:arguments ("prop")) nil [136694 136944])
            ("org-store-agenda-views" function
               (:user-visible-flag t
                :arguments ("parameters"))
                nil [136961 137096])
            ("org-batch-store-agenda-views" function (:arguments ("parameters")) nil [137113 138404])
            ("org-agenda-current-span" variable nil nil [138406 138488])
            ("org-agenda-mark-header-line" function (:arguments ("pos")) nil [138527 138902])
            ("org-mobile-creating-agendas" variable nil nil [138904 138940])
            ("org-agenda-write-buffer-name" variable (:default-value "Agenda View") nil [138968 139019])
            ("org-agenda-write" function
               (:user-visible-flag t
                :arguments ("file" "open" "nosettings" "agenda-bufname"))
                nil [139020 143056])
            ("org-agenda-remove-marked-text" function (:arguments ("property" "value")) nil [143058 143426])
            ("org-agenda-add-entry-text" function nil nil [143428 144181])
            ("org-agenda-get-some-entry-text" function (:arguments ("marker" "n-lines" "indent" "keep")) nil [144183 147252])
            ("org-check-for-org-mode" function nil nil [147254 147464])
            ("org-agenda-multi" variable nil nil [147499 147528])
            ("org-agenda-pre-window-conf" variable nil nil [147551 147590])
            ("org-agenda-columns-active" variable nil nil [147591 147629])
            ("org-agenda-name" variable nil nil [147630 147658])
            ("org-agenda-tag-filter" variable nil nil [147659 147693])
            ("org-agenda-category-filter" variable nil nil [147694 147733])
            ("org-agenda-regexp-filter" variable nil nil [147734 147771])
            ("org-agenda-effort-filter" variable nil nil [147772 147809])
            ("org-agenda-top-headline-filter" variable nil nil [147810 147853])
            ("org-agenda-tag-filter-preset" variable nil nil [147854 148418])
            ("org-agenda-category-filter-preset" variable nil nil [148420 148998])
            ("org-agenda-regexp-filter-preset" variable nil nil [149000 149572])
            ("org-agenda-effort-filter-preset" variable nil nil [149574 150149])
            ("org-agenda-use-sticky-p" function nil nil [150151 150892])
            ("org-agenda-prepare-window" function (:arguments ("abuf" "filter-alist")) nil [150894 152374])
            ("org-agenda-prepare" function (:arguments ("name")) nil [152376 154978])
            ("org-agenda-overriding-columns-format" variable nil nil [154980 155025])
            ("org-agenda-finalize" function nil nil [155049 158330])
            ("org-agenda-mark-clocking-task" function nil nil [158332 159210])
            ("org-agenda-unmark-clocking-task" function nil nil [159212 159435])
            ("org-agenda-fontify-priorities" function (:user-visible-flag t) nil [159437 160699])
            ("org-depend-tag-blocked" variable nil nil [160701 160732])
            ("org-agenda-dim-blocked-tasks" function
               (:user-visible-flag t
                :arguments ("invisible"))
                nil [160734 161870])
            ("org-agenda--mark-blocked-entry" function (:arguments ("entry")) nil [161872 162975])
            ("org-agenda-skip-function" variable nil nil [162977 163709])
            ("org-agenda-skip" function nil nil [163711 164437])
            ("org-agenda-skip-eval" function (:arguments ("form")) nil [164439 164888])
            ("org-agenda-markers" variable nil nil [164890 164987])
            ("org-agenda-last-marker-time" variable (:default-value (float-time)) nil [164988 165082])
            ("org-agenda-new-marker" function (:arguments ("pos")) nil [165084 165528])
            ("org-agenda-reset-markers" function nil nil [165530 165684])
            ("org-agenda-save-markers-for-cut-and-paste" function (:arguments ("beg" "end")) nil [165686 166057])
            ("org-agenda-entry-text-show-here" function nil nil [166080 166733])
            ("org-agenda-entry-text-show" function (:user-visible-flag t) nil [166735 167038])
            ("org-agenda-entry-text-hide" function nil nil [167040 167301])
            ("org-agenda-get-day-face" function (:arguments ("date")) nil [167303 167664])
            ("org-agenda-show-log-scoped" variable nil nil [167666 167701])
            ("org-agenda-start-day" variable nil nil [167728 168067])
            ("org-starting-day" variable nil nil [168068 168097])
            ("org-arg-loc" variable nil nil [168136 168160])
            ("org-agenda-buffer-tmp-name" variable nil nil [168179 168218])
            ("org-agenda-list" function
               (:user-visible-flag t
                :arguments ("arg" "start-day" "span" "with-hour"))
                nil [168234 176183])
            ("org-agenda-ndays-to-span" function (:arguments ("n")) nil [176185 176378])
            ("org-agenda-span-to-ndays" function (:arguments ("span" "start-day")) nil [176380 176914])
            ("org-agenda-span-name" function (:arguments ("span")) nil [176916 177090])
            ("org-agenda-search-history" variable nil nil [177116 177154])
            ("org-search-syntax-table" variable nil nil [177156 177374])
            ("org-mode-syntax-table" variable nil nil [177376 177406])
            ("org-search-syntax-table" function nil nil [177421 177707])
            ("org-agenda-last-search-view-search-was-boolean" variable nil nil [177709 177768])
            ("org-search-view" function
               (:user-visible-flag t
                :arguments ("todo-only" "string" "edit-at"))
                nil [177785 189554])
            ("org-agenda-propertize-selected-todo-keywords" function (:arguments ("keywords")) nil [189578 189955])
            ("org-select-this-todo-keyword" variable nil nil [189957 189998])
            ("org-last-arg" variable nil nil [189999 190024])
            ("org-todo-list" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [190041 193391])
            ("org-tags-view" function
               (:user-visible-flag t
                :arguments ("todo-only" "match"))
                nil [193431 197006])
            ("org-agenda-skip-regexp" variable nil nil [197043 197280])
            ("org-agenda-overriding-header" variable nil nil [197282 197496])
            ("org-agenda-skip-entry-if" function (:arguments ("conditions")) nil [197498 197670])
            ("org-agenda-skip-subtree-if" function (:arguments ("conditions")) nil [197672 197846])
            ("org-agenda-skip-if" function (:arguments ("subtree" "conditions")) nil [197848 200948])
            ("org-agenda-skip-if-todo" function (:arguments ("args" "end")) nil [200950 202337])
            ("org-agenda-list-stuck-projects" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [202354 204463])
            ("org-disable-agenda-to-diary" variable nil nil [204488 204528])
            ("diary-list-entries-hook" variable nil nil [204565 204597])
            ("diary-time-regexp" variable nil nil [204598 204624])
            ("org-get-entries-from-diary" function (:arguments ("date")) nil [204625 206539])
            ("org-agenda-cleanup-fancy-diary-hook" variable nil nil [206541 206645])
            ("org-agenda-cleanup-fancy-diary" function nil nil [206647 207519])
            ("eval-after-load" code nil nil [207589 208076])
            ("org-modify-diary-entry-string" function (:arguments ("string")) nil [208078 208468])
            ("org-diary-default-entry" function nil nil [208470 208868])
            ("org-add-to-diary-list" function (:arguments ("args")) nil [208870 209022])
            ("org-diary-last-run-time" variable nil nil [209024 209060])
            ("org-diary" function (:arguments ("args")) nil [209077 211439])
            ("org-agenda--timestamp-to-absolute" function (:arguments ("args")) nil [211467 211837])
            ("org-agenda-get-day-entries" function (:arguments ("file" "date" "args")) nil [211839 214424])
            ("org-em" function (:arguments ("x" "y" "list")) nil [214426 214521])
            ("org-heading-keyword-regexp-format" variable nil nil [214523 214565])
            ("org-agenda-sorting-strategy-selected" variable nil nil [214586 214635])
            ("org-agenda-entry-get-agenda-timestamp" function (:arguments ("pom")) nil [214637 216024])
            ("org-agenda-get-todos" function nil nil [216026 218864])
            ("org-agenda-todo-custom-ignore-p" function (:arguments ("time" "n")) nil [218866 219294])
            ("org-agenda-check-for-timestamp-as-reason-to-ignore-todo-item" function (:arguments ("end")) nil [219311 222304])
            ("org-agenda-get-timestamps" function (:arguments ("deadlines")) nil [222306 227780])
            ("org-agenda-get-sexps" function nil nil [227782 229915])
            ("org-anniversary" function (:arguments ("year" "month" "day" "mark")) nil [230009 230241])
            ("org-cyclic" function (:arguments ("N" "year" "month" "day" "mark")) nil [230242 230463])
            ("org-block" function (:arguments ("Y1" "M1" "D1" "Y2" "M2" "D2" "mark")) nil [230464 230684])
            ("org-date" function (:arguments ("year" "month" "day" "mark")) nil [230685 230896])
            ("org-class" function (:arguments ("y1" "m1" "d1" "y2" "m2" "d2" "dayname" "skip-weeks")) nil [230933 232034])
            ("defalias" code nil nil [232036 232087])
            ("org-agenda-get-progress" function nil nil [232088 236237])
            ("org-agenda-show-clocking-issues" function (:user-visible-flag t) nil [236239 239330])
            ("org-agenda-check-clock-gap" function (:arguments ("t1" "t2" "ok-list")) nil [239332 240565])
            ("org-agenda-get-deadlines" function (:arguments ("with-hour")) nil [240567 246667])
            ("org-agenda-deadline-face" function (:arguments ("fraction")) nil [246669 246884])
            ("org-agenda-get-scheduled" function (:arguments ("deadlines" "with-hour")) nil [246886 254223])
            ("org-agenda-get-blocks" function nil nil [254225 257614])
            ("org-prefix-has-time" variable nil nil [257653 257799])
            ("org-prefix-has-tag" variable nil nil [257800 257945])
            ("org-prefix-has-effort" variable nil nil [257946 258094])
            ("org-prefix-has-breadcrumbs" variable nil nil [258095 258248])
            ("org-prefix-category-length" variable nil nil [258249 258366])
            ("org-prefix-category-max-length" variable nil nil [258367 258488])
            ("org-agenda-get-category-icon" function (:arguments ("category")) nil [258490 258827])
            ("org-agenda-format-item" function (:arguments ("extra" "txt" "level" "category" "tags" "dotime" "remove-re" "habitp")) nil [258829 265696])
            ("org-agenda-fix-displayed-tags" function (:arguments ("txt" "tags" "add-inherited" "hide-re")) nil [265698 266689])
            ("org-downcase-keep-props" function (:arguments ("s")) nil [266691 266848])
            ("org-agenda-sorting-strategy" variable nil nil [266850 266886])
            ("org-agenda-add-time-grid-maybe" function (:arguments ("list" "ndays" "todayp")) nil [266924 268622])
            ("org-compile-prefix-format" function (:arguments ("key")) nil [268624 271191])
            ("org-set-sorting-strategy" function (:arguments ("key")) nil [271193 271587])
            ("org-get-time-of-day" function (:arguments ("s" "string" "mod24")) nil [271589 272818])
            ("org-agenda-before-sorting-filter-function" variable nil nil [272820 273763])
            ("org-agenda-finalize-entries" function (:arguments ("list" "type")) nil [273765 275334])
            ("org-agenda-limit-entries" function (:arguments ("list" "prop" "limit" "fn")) nil [275336 275838])
            ("org-agenda-limit-interactively" function
               (:user-visible-flag t
                :arguments ("remove"))
                nil [275840 276880])
            ("org-agenda-highlight-todo" function (:arguments ("x")) nil [276882 278804])
            ("org-cmp-values" function (:arguments ("a" "b" "property")) nil [278806 279086])
            ("org-cmp-effort" function (:arguments ("a" "b")) nil [279088 279575])
            ("org-cmp-category" function (:arguments ("a" "b")) nil [279577 279881])
            ("org-cmp-todo-state" function (:arguments ("a" "b")) nil [279883 280764])
            ("org-cmp-alpha" function (:arguments ("a" "b")) nil [280766 281609])
            ("org-cmp-tag" function (:arguments ("a" "b")) nil [281611 281906])
            ("org-cmp-time" function (:arguments ("a" "b")) nil [281908 282203])
            ("org-cmp-ts" function (:arguments ("a" "b" "type")) nil [282205 282858])
            ("org-cmp-habit-p" function (:arguments ("a" "b")) nil [282860 283095])
            ("org-entries-lessp" function (:arguments ("a" "b")) nil [283097 285999])
            ("org-agenda-restriction-lock-overlay" variable (:default-value (make-overlay 1 1)) nil [286030 286167])
            ("overlay-put" code nil nil [286168 286258])
            ("overlay-put" code nil nil [286259 286374])
            ("delete-overlay" code nil nil [286375 286427])
            ("org-agenda-set-restriction-lock-from-agenda" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [286429 287089])
            ("org-agenda-set-restriction-lock" function
               (:user-visible-flag t
                :arguments ("type"))
                nil [287106 288745])
            ("org-agenda-remove-restriction-lock" function
               (:user-visible-flag t
                :arguments ("noupdate"))
                nil [288747 289314])
            ("org-agenda-maybe-redo" function nil nil [289316 289814])
            ("org-agenda-check-type" function (:arguments ("error" "types")) nil [289837 290245])
            ("org-agenda-Quit" function (:user-visible-flag t) nil [290247 290444])
            ("org-agenda-quit" function (:user-visible-flag t) nil [290446 290804])
            ("org-agenda--quit" function (:arguments ("bury")) nil [290806 292076])
            ("org-agenda-exit" function (:user-visible-flag t) nil [292078 292538])
            ("org-agenda-kill-all-agenda-buffers" function (:user-visible-flag t) nil [292540 292856])
            ("org-agenda-execute" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [292858 293128])
            ("org-agenda-redo" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [293130 296213])
            ("org-agenda-redo-all" function
               (:user-visible-flag t
                :arguments ("exhaustive"))
                nil [296215 296590])
            ("org-global-tags-completion-table" variable nil nil [296592 296637])
            ("org-agenda-filter-form" variable nil nil [296638 296673])
            ("org-agenda-filtered-by-category" variable nil nil [296674 296718])
            ("org-agenda-filter-by-category" function
               (:user-visible-flag t
                :arguments ("strip"))
                nil [296720 297522])
            ("org-find-top-headline" function (:arguments ("pos")) nil [297524 297962])
            ("org-agenda-filtered-by-top-headline" variable nil nil [297964 298012])
            ("org-agenda-filter-by-top-headline" function
               (:user-visible-flag t
                :arguments ("strip"))
                nil [298013 298595])
            ("org-agenda-regexp-filter" variable nil nil [298597 298634])
            ("org-agenda-filter-by-regexp" function
               (:user-visible-flag t
                :arguments ("strip"))
                nil [298635 299373])
            ("org-agenda-effort-filter" variable nil nil [299375 299412])
            ("org-agenda-filter-by-effort" function
               (:user-visible-flag t
                :arguments ("strip"))
                nil [299413 300995])
            ("org-agenda-filter-remove-all" function (:user-visible-flag t) nil [300997 301500])
            ("org-agenda-filter-by-tag" function
               (:user-visible-flag t
                :arguments ("arg" "char" "exclude"))
                nil [301502 304597])
            ("org-agenda-get-represented-tags" function nil nil [304599 304948])
            ("org-agenda-filter-make-matcher" function (:arguments ("filter" "type" "expand")) nil [304951 306592])
            ("org-agenda-filter-make-matcher-tag-exp" function (:arguments ("tags" "op")) nil [306594 307367])
            ("org-agenda-filter-effort-form" function (:arguments ("e")) nil [307369 307796])
            ("org-agenda-compare-effort" function (:arguments ("op" "value")) nil [307798 308258])
            ("org-agenda-filter-expand-tags" function (:arguments ("filter" "no-operator")) nil [308260 308854])
            ("org-agenda-filter-apply" function (:arguments ("filter" "type" "expand")) nil [308856 310084])
            ("org-agenda-filter-top-headline-apply" function (:arguments ("hl" "negative")) nil [310086 310730])
            ("org-agenda-filter-hide-line" function (:arguments ("type")) nil [310732 311016])
            ("org-agenda-remove-filter" function (:arguments ("type")) nil [311018 311627])
            ("org-agenda-filter-show-all-tag" function nil nil [311629 311705])
            ("org-agenda-filter-show-all-re" function nil nil [311706 311784])
            ("org-agenda-filter-show-all-effort" function nil nil [311785 311867])
            ("org-agenda-filter-show-all-cat" function nil nil [311868 311949])
            ("org-agenda-filter-show-all-top-filter" function nil nil [311950 312042])
            ("org-agenda-manipulate-query-add" function (:user-visible-flag t) nil [312044 312289])
            ("org-agenda-manipulate-query-subtract" function (:user-visible-flag t) nil [312290 312540])
            ("org-agenda-manipulate-query-add-re" function (:user-visible-flag t) nil [312541 312788])
            ("org-agenda-manipulate-query-subtract-re" function (:user-visible-flag t) nil [312789 313041])
            ("org-agenda-manipulate-query" function (:arguments ("char")) nil [313042 314022])
            ("org-add-to-string" function (:arguments ("var" "string")) nil [314024 314109])
            ("org-agenda-goto-date" function
               (:user-visible-flag t
                :arguments ("span"))
                nil [314111 315374])
            ("org-agenda-goto-today" function (:user-visible-flag t) nil [315376 316026])
            ("org-agenda-find-same-or-today-or-agenda" function (:arguments ("cnt")) nil [316028 316452])
            ("org-agenda-backward-block" function (:user-visible-flag t) nil [316454 316584])
            ("org-agenda-forward-block" function
               (:user-visible-flag t
                :arguments ("backward"))
                nil [316586 317630])
            ("org-agenda-later" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [317632 319188])
            ("org-agenda-earlier" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [319190 319379])
            ("org-agenda-view-mode-dispatch" function (:user-visible-flag t) nil [319381 320930])
            ("org-agenda-reset-view" function (:user-visible-flag t) nil [320932 321067])
            ("org-agenda-day-view" function
               (:user-visible-flag t
                :arguments ("day-of-month"))
                nil [321069 321289])
            ("org-agenda-week-view" function
               (:user-visible-flag t
                :arguments ("iso-week"))
                nil [321291 321753])
            ("org-agenda-fortnight-view" function
               (:user-visible-flag t
                :arguments ("iso-week"))
                nil [321755 322232])
            ("org-agenda-month-view" function
               (:user-visible-flag t
                :arguments ("month"))
                nil [322234 322670])
            ("org-agenda-year-view" function
               (:user-visible-flag t
                :arguments ("year"))
                nil [322672 323125])
            ("org-agenda-change-time-span" function (:arguments ("span" "n")) nil [323127 323966])
            ("org-agenda-compute-starting-span" function (:arguments ("sd" "span" "n")) nil [323968 325313])
            ("org-agenda-next-date-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [325315 325799])
            ("org-agenda-previous-date-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [325801 326117])
            ("org-hl" variable (:default-value (make-overlay 1 1)) nil [326147 326181])
            ("overlay-put" code nil nil [326182 326219])
            ("org-highlight" function (:arguments ("begin" "end" "buffer")) nil [326221 326371])
            ("org-unhighlight" function nil nil [326373 326451])
            ("org-unhighlight-once" function nil nil [326453 326637])
            ("org-agenda-pre-follow-window-conf" variable nil nil [326639 326685])
            ("org-agenda-follow-mode" function (:user-visible-flag t) nil [326686 327189])
            ("org-agenda-entry-text-mode" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [327191 328079])
            ("org-agenda-clockreport-mode" function (:user-visible-flag t) nil [328081 328423])
            ("org-agenda-log-mode" function
               (:user-visible-flag t
                :arguments ("special"))
                nil [328425 329132])
            ("org-agenda-archives-mode" function
               (:user-visible-flag t
                :arguments ("with-files"))
                nil [329134 329833])
            ("org-agenda-toggle-diary" function (:user-visible-flag t) nil [329835 330168])
            ("org-agenda-toggle-deadlines" function (:user-visible-flag t) nil [330170 330544])
            ("org-agenda-toggle-time-grid" function (:user-visible-flag t) nil [330546 330871])
            ("org-agenda-set-mode-name" function nil nil [330873 333533])
            ("org-agenda-update-agenda-type" function nil nil [333535 333771])
            ("org-agenda-next-line" function (:user-visible-flag t) nil [333773 333956])
            ("org-agenda-previous-line" function (:user-visible-flag t) nil [333958 334153])
            ("org-agenda-next-item" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [334155 334514])
            ("org-agenda-previous-item" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [334516 334869])
            ("org-agenda-do-context-action" function nil nil [334871 335294])
            ("org-agenda-show-tags" function (:user-visible-flag t) nil [335296 335581])
            ("org-agenda-goto" function
               (:user-visible-flag t
                :arguments ("highlight"))
                nil [335583 336325])
            ("org-agenda-after-show-hook" variable nil nil [336327 336482])
            ("org-agenda-kill" function (:user-visible-flag t) nil [336484 337832])
            ("org-archive-default-command" variable nil nil [337834 337870])
            ("org-agenda-archive-default" function (:user-visible-flag t) nil [337899 338105])
            ("org-agenda-archive-default-with-confirmation" function (:user-visible-flag t) nil [338107 338340])
            ("org-agenda-archive" function (:user-visible-flag t) nil [338342 338508])
            ("org-agenda-archive-to-archive-sibling" function (:user-visible-flag t) nil [338510 338677])
            ("org-agenda-archive-with" function
               (:user-visible-flag t
                :arguments ("cmd" "confirm"))
                nil [338679 339468])
            ("org-remove-subtree-entries-from-agenda" function (:arguments ("buf" "beg" "end")) nil [339470 340368])
            ("org-agenda-refile" function
               (:user-visible-flag t
                :arguments ("goto" "rfloc" "no-update"))
                nil [340370 341570])
            ("org-agenda-open-link" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [341572 343101])
            ("org-agenda-copy-local-variable" function (:arguments ("var")) nil [343103 343415])
            ("org-agenda-switch-to" function
               (:user-visible-flag t
                :arguments ("delete-other-windows"))
                nil [343417 344298])
            ("org-agenda-goto-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [344300 344464])
            ("org-agenda-show" function
               (:user-visible-flag t
                :arguments ("full-entry"))
                nil [344466 344808])
            ("org-agenda-show-window" variable nil nil [344810 344845])
            ("org-agenda-show-and-scroll-up" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [344846 345579])
            ("org-agenda-show-scroll-down" function (:user-visible-flag t) nil [345581 345873])
            ("org-agenda-show-1" function
               (:user-visible-flag t
                :arguments ("more"))
                nil [345875 347483])
            ("org-agenda-cycle-counter" variable nil nil [347485 347522])
            ("org-agenda-cycle-show" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [347523 348431])
            ("org-agenda-recenter" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [348433 348659])
            ("org-agenda-show-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [348661 348827])
            ("org-agenda-check-no-diary" function nil nil [348829 348994])
            ("org-agenda-error" function nil nil [348996 349137])
            ("org-agenda-tree-to-indirect-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [349139 350501])
            ("org-agenda-do-tree-to-indirect-buffer" function (:arguments ("arg")) nil [350503 350920])
            ("org-last-heading-marker" variable (:default-value (make-marker)) nil [350922 351074])
            ("org-agenda-todo-nextset" function (:user-visible-flag t) nil [351076 351195])
            ("org-agenda-todo-previousset" function (:user-visible-flag t) nil [351197 351328])
            ("org-agenda-todo" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [351330 352952])
            ("org-agenda-add-note" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [352954 353437])
            ("org-agenda-change-all-lines" function (:arguments ("newhead" "hdmarker" "fixface" "just-this")) nil [353439 356218])
            ("org-agenda-align-tags" function (:arguments ("line")) nil [356220 357445])
            ("org-agenda-priority-up" function (:user-visible-flag t) nil [357447 357586])
            ("org-agenda-priority-down" function (:user-visible-flag t) nil [357588 357731])
            ("org-agenda-priority" function
               (:user-visible-flag t
                :arguments ("force-direction"))
                nil [357733 358840])
            ("org-agenda-set-tags" function
               (:user-visible-flag t
                :arguments ("tag" "onoff"))
                nil [358901 359688])
            ("org-agenda-set-property" function (:user-visible-flag t) nil [359690 360170])
            ("org-agenda-set-effort" function (:user-visible-flag t) nil [360172 360761])
            ("org-agenda-toggle-archive-tag" function (:user-visible-flag t) nil [360763 361406])
            ("org-agenda-do-date-later" function (:arguments ("arg")) nil [361408 361956])
            ("org-agenda-do-date-earlier" function (:arguments ("arg")) nil [361958 362518])
            ("org-agenda-date-later" function
               (:user-visible-flag t
                :arguments ("arg" "what"))
                nil [362520 363944])
            ("org-agenda-date-earlier" function
               (:user-visible-flag t
                :arguments ("arg" "what"))
                nil [363946 364113])
            ("org-agenda-date-later-minutes" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [364115 364357])
            ("org-agenda-date-earlier-minutes" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [364359 364605])
            ("org-agenda-date-later-hours" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [364607 364753])
            ("org-agenda-date-earlier-hours" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [364755 364905])
            ("org-agenda-show-new-time" function (:arguments ("marker" "stamp" "prefix")) nil [364907 365609])
            ("org-agenda-date-prompt" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [365611 366455])
            ("org-agenda-schedule" function
               (:user-visible-flag t
                :arguments ("arg" "time"))
                nil [366457 367117])
            ("org-agenda-deadline" function
               (:user-visible-flag t
                :arguments ("arg" "time"))
                nil [367119 367698])
            ("org-agenda-clock-in" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [367700 368451])
            ("org-agenda-clock-out" function (:user-visible-flag t) nil [368453 369108])
            ("org-agenda-clock-cancel" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [369110 369378])
            ("org-agenda-clock-goto" function (:user-visible-flag t) nil [369380 370082])
            ("org-agenda-diary-entry-in-org-file" function nil nil [370084 371997])
            ("org-agenda-insert-diary-strategy" variable (:default-value (quote date-tree)) nil [371999 372520])
            ("org-agenda-insert-diary-extract-time" variable nil nil [372522 372701])
            ("org-agenda-bulk-mark-char" variable (:default-value ">") nil [372703 372858])
            ("org-agenda-add-entry-to-org-agenda-diary-file" function (:arguments ("type" "text" "d1" "d2")) nil [372860 375815])
            ("org-agenda-insert-diary-as-top-level" function (:arguments ("text")) nil [375817 376261])
            ("org-agenda-insert-diary-make-new-entry" function (:arguments ("text")) nil [376263 377139])
            ("org-agenda-diary-entry" function (:user-visible-flag t) nil [377141 379035])
            ("org-agenda-execute-calendar-command" function (:arguments ("cmd")) nil [379037 379880])
            ("org-agenda-phases-of-moon" function (:user-visible-flag t) nil [379882 380073])
            ("org-agenda-holidays" function (:user-visible-flag t) nil [380075 380251])
            ("calendar-longitude" variable nil nil [380253 380280])
            ("calendar-latitude" variable nil nil [380311 380337])
            ("calendar-location-name" variable nil nil [380369 380400])
            ("org-agenda-sunrise-sunset" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [380428 381010])
            ("org-agenda-goto-calendar" function (:user-visible-flag t) nil [381012 381504])
            ("org-calendar-goto-agenda" function (:user-visible-flag t) nil [381521 381991])
            ("org-agenda-convert-date" function nil nil [381993 383357])
            ("org-agenda-bulk-marked-p" function nil nil [383378 383551])
            ("org-agenda-bulk-mark" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [383553 384504])
            ("org-agenda-bulk-mark-all" function (:user-visible-flag t) nil [384506 384645])
            ("org-agenda-bulk-mark-regexp" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [384647 385366])
            ("org-agenda-bulk-unmark" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [385368 386149])
            ("org-agenda-bulk-toggle-all" function (:user-visible-flag t) nil [386151 386419])
            ("org-agenda-bulk-toggle" function (:user-visible-flag t) nil [386421 386608])
            ("org-agenda-bulk-remove-overlays" function
               (:user-visible-flag t
                :arguments ("beg" "end"))
                nil [386610 387084])
            ("org-agenda-bulk-unmark-all" function (:user-visible-flag t) nil [387086 387419])
            ("org-agenda-persistent-marks" variable nil nil [387421 387670])
            ("org-agenda-bulk-action" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [387672 394100])
            ("org-agenda-capture" function
               (:user-visible-flag t
                :arguments ("with-time"))
                nil [394102 394543])
            ("org-agenda-reapply-filters" function nil nil [394589 395150])
            ("org-agenda-drag-line-forward" function
               (:user-visible-flag t
                :arguments ("arg" "backward"))
                nil [395152 395983])
            ("org-agenda-drag-line-backward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [395985 396134])
            ("org-agenda-show-the-flagging-note" function (:user-visible-flag t) nil [396156 397385])
            ("org-agenda-remove-flag" function (:arguments ("marker")) nil [397387 397743])
            ("org-agenda-get-any-marker" function (:arguments ("pos")) nil [397745 397922])
            ("appt-time-msg-list" variable nil nil [397951 397978])
            ("org-agenda-to-appt" function
               (:user-visible-flag t
                :arguments ("refresh" "filter" "args"))
                nil [398016 402148])
            ("org-agenda-today-p" function (:arguments ("date")) nil [402150 402514])
            ("org-agenda-todo-yesterday" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [402516 402821])
            ("org-agenda" package nil nil [402823 402844]))          
      :file "org-agenda.el.gz"
      :pointmax 402874
      :fsize 98439
      :lastmodtime '(23728 55154 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("org-inhibit-highlight-removal" variable nil nil [2832 2874])
            ("defvar-local" code nil nil [2902 3006])
            ("cl-lib" include nil nil [3037 3054])
            ("gnus-sum" include nil nil [3075 3094])
            ("calendar" include nil nil [3097 3116])
            ("find-func" include nil nil [3117 3137])
            ("format-spec" include nil nil [3138 3160])
            ("or" code nil nil [3162 3557])
            ("org-macs" include nil nil [3559 3578])
            ("org-compat" include nil nil [3579 3600])
            ("org-outline-regexp" variable (:default-value "\\*+ ") nil [3975 4045])
            ("org-outline-regexp-bol" variable (:default-value "^\\*+ ") nil [4047 4232])
            ("org-heading-regexp" variable (:default-value "^\\(\\*+\\)\\(?: +\\(.*?\\)\\)?[ 	]*$") nil [4234 4420])
            ("declare-function" code nil nil [4422 4482])
            ("declare-function" code nil nil [4483 4554])
            ("declare-function" code nil nil [4555 4628])
            ("declare-function" code nil nil [4629 4691])
            ("declare-function" code nil nil [4692 4767])
            ("declare-function" code nil nil [4768 4856])
            ("declare-function" code nil nil [4857 4920])
            ("declare-function" code nil nil [4921 4992])
            ("declare-function" code nil nil [4993 5079])
            ("declare-function" code nil nil [5080 5147])
            ("declare-function" code nil nil [5148 5215])
            ("declare-function" code nil nil [5216 5309])
            ("declare-function" code nil nil [5310 5395])
            ("declare-function" code nil nil [5396 5489])
            ("declare-function" code nil nil [5490 5566])
            ("declare-function" code nil nil [5567 5637])
            ("declare-function" code nil nil [5638 5706])
            ("declare-function" code nil nil [5707 5768])
            ("declare-function" code nil nil [5769 5822])
            ("declare-function" code nil nil [5823 5882])
            ("declare-function" code nil nil [5883 5977])
            ("declare-function" code nil nil [5978 6034])
            ("declare-function" code nil nil [6035 6099])
            ("declare-function" code nil nil [6100 6172])
            ("declare-function" code nil nil [6173 6236])
            ("declare-function" code nil nil [6237 6309])
            ("declare-function" code nil nil [6310 6367])
            ("declare-function" code nil nil [6368 6434])
            ("declare-function" code nil nil [6435 6520])
            ("declare-function" code nil nil [6521 6580])
            ("declare-function" code nil nil [6581 6650])
            ("declare-function" code nil nil [6651 6745])
            ("declare-function" code nil nil [6746 6818])
            ("declare-function" code nil nil [6819 6901])
            ("declare-function" code nil nil [6902 6971])
            ("declare-function" code nil nil [6972 7031])
            ("declare-function" code nil nil [7032 7093])
            ("declare-function" code nil nil [7094 7146])
            ("declare-function" code nil nil [7147 7210])
            ("declare-function" code nil nil [7211 7274])
            ("declare-function" code nil nil [7275 7343])
            ("declare-function" code nil nil [7344 7415])
            ("declare-function" code nil nil [7416 7481])
            ("declare-function" code nil nil [7482 7531])
            ("declare-function" code nil nil [7532 7601])
            ("declare-function" code nil nil [7602 7675])
            ("declare-function" code nil nil [7676 7731])
            ("declare-function" code nil nil [7732 7807])
            ("declare-function" code nil nil [7808 7884])
            ("declare-function" code nil nil [7885 7946])
            ("declare-function" code nil nil [7947 8004])
            ("declare-function" code nil nil [8005 8072])
            ("declare-function" code nil nil [8073 8140])
            ("declare-function" code nil nil [8141 8208])
            ("declare-function" code nil nil [8209 8285])
            ("declare-function" code nil nil [8286 8348])
            ("declare-function" code nil nil [8349 8415])
            ("declare-function" code nil nil [8416 8468])
            ("declare-function" code nil nil [8469 8528])
            ("declare-function" code nil nil [8529 8605])
            ("declare-function" code nil nil [8606 8732])
            ("declare-function" code nil nil [8733 8791])
            ("declare-function" code nil nil [8792 8865])
            ("declare-function" code nil nil [8866 8930])
            ("declare-function" code nil nil [8931 8989])
            ("declare-function" code nil nil [8990 9043])
            ("declare-function" code nil nil [9044 9133])
            ("declare-function" code nil nil [9134 9222])
            ("ffap-url-regexp" variable nil nil [9224 9248])
            ("org-element-paragraph-separate" variable nil nil [9249 9288])
            ("org-uniquify" function (:arguments ("list")) nil [9290 9434])
            ("org-get-at-bol" function (:arguments ("property")) nil [9436 9575])
            ("org-trim" function (:arguments ("s" "keep-lead")) nil [9577 9956])
            ("org-babel-load-languages" variable nil nil [10021 10054])
            ("org-babel-do-load-languages" function (:arguments ("sym" "value")) nil [10071 10519])
            ("declare-function" code nil nil [10521 10607])
            ("org-babel-load-file" function
               (:user-visible-flag t
                :arguments ("file" "compile"))
                nil [10623 11829])
            ("org-babel-load-languages" variable (:default-value (quote ((emacs-lisp . t)))) nil [11831 14040])
            ("org-clone-delete-id" variable nil nil [14071 14339])
            ("org-check-version" code nil nil [14353 14372])
            ("org-version" function
               (:user-visible-flag t
                :arguments ("here" "full" "message"))
                nil [14389 15689])
            ("org-version" variable
               (:constant-flag t
                :default-value (org-version))
                nil [15691 15727])
            ("org-block-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+begin_?\\([^ 
]+\\)\\(\\([^
]+\\)\\)?
\\([^ ]+?\\)#\\+end_?\\1[ 	]*$")
                nil [15765 15925])
            ("org-dblock-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+\\(?:BEGIN\\|begin\\):[ 	]+\\(\\S-+\\)\\([ 	]+\\(.*\\)\\)?")
                nil [15927 16097])
            ("org-dblock-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+\\(?:END\\|end\\)\\([: 	
]\\|$\\)")
                nil [16099 16218])
            ("org-clock-string" variable
               (:constant-flag t
                :default-value "CLOCK:")
                nil [16245 16354])
            ("org-closed-string" variable (:default-value "CLOSED:") nil [16356 16467])
            ("org-deadline-string" variable (:default-value "DEADLINE:") nil [16469 16735])
            ("org-scheduled-string" variable (:default-value "SCHEDULED:") nil [16737 17011])
            ("org-ds-keyword-length" variable
               (:constant-flag t
                :default-value (+ 2 (apply (function max) (mapcar (function length) (list org-deadline-string org-scheduled-string org-clock-string org-closed-string)))))
                nil [17013 17248])
            ("org-planning-line-re" variable
               (:constant-flag t
                :default-value (concat "^[ 	]*" (regexp-opt (list org-closed-string org-deadline-string org-scheduled-string) t)))
                nil [17250 17464])
            ("org-clock-line-re" variable
               (:constant-flag t
                :default-value (concat "^[ 	]*" org-clock-string))
                nil [17466 17568])
            ("org-deadline-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-deadline-string))
                nil [17570 17669])
            ("org-deadline-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-deadline-string " *<\\([^>]+\\)>"))
                nil [17671 17822])
            ("org-deadline-time-hour-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-deadline-string " *<\\([^>]+[0-9]\\{1,2\\}:[0-9]\\{2\\}[0-9-+:hdwmy 	.]*\\)>"))
                nil [17824 18037])
            ("org-deadline-line-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<\\(" org-deadline-string "\\).*"))
                nil [18039 18181])
            ("org-scheduled-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-scheduled-string))
                nil [18183 18285])
            ("org-scheduled-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-scheduled-string " *<\\([^>]+\\)>"))
                nil [18287 18441])
            ("org-scheduled-time-hour-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-scheduled-string " *<\\([^>]+[0-9]\\{1,2\\}:[0-9]\\{2\\}[0-9-+:hdwmy 	.]*\\)>"))
                nil [18443 18659])
            ("org-closed-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-closed-string " *\\[\\([^]]+\\)\\]"))
                nil [18661 18810])
            ("org-keyword-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" (regexp-opt (list org-scheduled-string org-deadline-string org-closed-string org-clock-string) t) " *[[<]\\([^]>]+\\)[]>]"))
                nil [18812 19068])
            ("org-keyword-time-not-clock-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" (regexp-opt (list org-scheduled-string org-deadline-string org-closed-string) t) " *[[<]\\([^]>]+\\)[]>]"))
                nil [19070 19315])
            ("org-maybe-keyword-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<" (regexp-opt (list org-scheduled-string org-deadline-string org-closed-string org-clock-string) t) "\\)?" " *\\([[<][0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^]
>]*?[]>]" "\\|" "<%%([^
>]*>\\)"))
                nil [19317 19658])
            ("org-all-time-keywords" variable
               (:constant-flag t
                :default-value (mapcar (lambda (w) (substring w 0 -1)) (list org-scheduled-string org-deadline-string org-clock-string org-closed-string)))
                nil [19660 19850])
            ("org-drawer-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*:\\(\\(?:\\w\\|[-_]\\)+\\):[ 	]*$")
                nil [19865 20030])
            ("org-property-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:PROPERTIES:[ 	]*$")
                nil [20032 20162])
            ("org-property-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:END:[ 	]*$")
                nil [20164 20284])
            ("org-clock-drawer-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:CLOCK:[ 	]*$")
                nil [20286 20412])
            ("org-clock-drawer-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:END:[ 	]*$")
                nil [20414 20535])
            ("org-property-drawer-re" variable
               (:constant-flag t
                :default-value (concat "^[ 	]*:PROPERTIES:[ 	]*
" "\\(?:[ 	]*:\\S-+:\\(?: .*\\)?[ 	]*
\\)*?" "[ 	]*:END:[ 	]*$"))
                nil [20537 20723])
            ("org-clock-drawer-re" variable
               (:constant-flag t
                :default-value (concat "\\(" org-clock-drawer-start-re "\\)[^ ]*?\\(" org-clock-drawer-end-re "\\)
?"))
                nil [20725 20888])
            ("org-heading-keyword-regexp-format" variable
               (:constant-flag t
                :default-value "^\\(\\*+\\)\\(?: +%s\\)\\(?: +\\(.*?\\)\\)?[ 	]*$")
                nil [20905 21255])
            ("org-heading-keyword-maybe-regexp-format" variable
               (:constant-flag t
                :default-value "^\\(\\*+\\)\\(?: +%s\\)?\\(?: +\\(.*?\\)\\)?[ 	]*$")
                nil [21257 21604])
            ("org-archive-tag" variable
               (:constant-flag t
                :default-value "ARCHIVE")
                nil [21606 21797])
            ("org-comment-string" variable
               (:constant-flag t
                :default-value "COMMENT")
                nil [21819 22022])
            ("org-latex-regexps" variable
               (:constant-flag t
                :default-value (quote (("begin" "^[ 	]*\\(\\\\begin{\\([a-zA-Z0-9\\*]+\\)[^ ]+?\\\\end{\\2}\\)" 1 t) ("$1" "\\([^$]\\|^\\)\\(\\$[^ 	
,;.$]\\$\\)\\(\\s.\\|\\s-\\|\\s(\\|\\s)\\|\\s\"\\| \\|'\\|$\\)" 2 nil) ("$" "\\([^$]\\|^\\)\\(\\(\\$\\([^ 	
,;.$][^$
]*?\\(
[^$
]*?\\)\\{0,2\\}[^ 	
,.$]\\)\\$\\)\\)\\(\\s.\\|\\s-\\|\\s(\\|\\s)\\|\\s\"\\| \\|'\\|$\\)" 2 nil) ("\\(" "\\\\([^ ]*?\\\\)" 0 nil) ("\\[" "\\\\\\[[^ ]*?\\\\\\]" 0 nil) ("$$" "\\$\\$[^ ]*?\\$\\$" 0 nil))))
                nil [22065 22858])
            ("org-effort-property" variable
               (:constant-flag t
                :default-value "Effort")
                nil [22880 23060])
            ("org-table-any-line-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*\\(|\\|\\+-[-+]\\)")
                nil [23074 23182])
            ("org-table-line-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|")
                nil [23184 23262])
            ("org-table-dataline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|[^-]")
                nil [23264 23350])
            ("org-table-hline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|-")
                nil [23352 23433])
            ("org-table1-hline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*\\+-[-+]")
                nil [23435 23524])
            ("org-table-any-border-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*[^|+ 	]")
                nil [23526 23688])
            ("org-TBLFM-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+TBLFM: ")
                nil [23690 23765])
            ("org-ts-regexp" variable
               (:constant-flag t
                :default-value "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^
>]*?\\)>")
                nil [23783 23921])
            ("org-ts-regexp-inactive" variable
               (:constant-flag t
                :default-value "\\[\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^
>]*?\\)\\]")
                nil [23923 24085])
            ("org-ts-regexp-both" variable
               (:constant-flag t
                :default-value "[[<]\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^]
>]*?\\)[]>]")
                nil [24087 24237])
            ("org-ts-regexp0" variable
               (:constant-flag t
                :default-value "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\)\\( +[^]+0-9>
 -]+\\)?\\( +\\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)")
                nil [24239 24589])
            ("org-ts-regexp1" variable
               (:constant-flag t
                :default-value "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\) *\\([^]+0-9>
 -]*\\)\\( \\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)")
                nil [24591 24811])
            ("org-ts-regexp2" variable
               (:constant-flag t
                :default-value (concat "<" org-ts-regexp1 "[^>
]\\{0,16\\}>"))
                nil [24813 24944])
            ("org-ts-regexp3" variable
               (:constant-flag t
                :default-value (concat "[[<]" org-ts-regexp1 "[^]>
]\\{0,16\\}[]>]"))
                nil [24946 25096])
            ("org-tr-regexp" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp "--?-?" org-ts-regexp))
                nil [25098 25219])
            ("org-tr-regexp-both" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp-both "--?-?" org-ts-regexp-both))
                nil [25221 25359])
            ("org-tsr-regexp" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp "\\(--?-?" org-ts-regexp "\\)?"))
                nil [25361 25512])
            ("org-tsr-regexp-both" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp-both "\\(--?-?" org-ts-regexp-both "\\)?"))
                nil [25514 25730])
            ("org-repeat-re" variable
               (:constant-flag t
                :default-value "<[0-9]\\{4\\}-[0-9][0-9]-[0-9][0-9] [^>
]*?\\([.+]?\\+[0-9]+[hdwmy]\\(/[0-9]+[hdwmy]\\)?\\)")
                nil [25732 25963])
            ("org-time-stamp-formats" variable
               (:constant-flag t
                :default-value (quote ("<%Y-%m-%d %a>" . "<%Y-%m-%d %a %H:%M>")))
                nil [25965 26110])
            ("org" customgroup (:user-visible-flag t) nil [26140 26259])
            ("org-mode-hook" variable nil nil [26261 26380])
            ("org-load-hook" variable nil nil [26382 26490])
            ("org-log-buffer-setup-hook" variable nil nil [26492 26636])
            ("org-modules" variable nil nil [26638 26658])
            ("org-modules-loaded" variable nil nil [26676 26749])
            ("org-load-modules-maybe" function (:arguments ("force")) nil [26751 27065])
            ("org-set-modules" function (:arguments ("var" "value")) nil [27067 27292])
            ("org-modules" variable (:default-value (quote (org-w3m org-bbdb org-bibtex org-docview org-gnus org-info org-irc org-mhe org-rmail))) nil [27294 32693])
            ("org-export-registered-backends" variable nil nil [32695 32734])
            ("declare-function" code nil nil [32749 32826])
            ("declare-function" code nil nil [32827 32886])
            ("org-export-backends" variable (:default-value (quote (ascii html icalendar latex odt))) nil [32887 37127])
            ("eval-after-load" code nil nil [37129 37357])
            ("org-support-shift-select" variable nil nil [37359 39485])
            ("org-loop-over-headlines-in-active-region" variable nil nil [39487 40576])
            ("org-startup" customgroup (:user-visible-flag t) nil [40578 40683])
            ("org-startup-folded" variable (:default-value t) nil [40685 41436])
            ("org-startup-truncated" variable (:default-value t) nil [41438 42208])
            ("org-startup-indented" variable nil nil [42210 42586])
            ("org-use-sub-superscripts" variable (:default-value t) nil [42588 44020])
            ("org-startup-with-beamer-mode" variable nil nil [44022 44310])
            ("org-startup-align-all-tables" variable nil nil [44312 44756])
            ("org-startup-with-inline-images" variable nil nil [44758 45092])
            ("org-startup-with-latex-preview" variable nil nil [45094 45468])
            ("org-insert-mode-line-in-empty-file" variable nil nil [45470 45938])
            ("org-replace-disputed-keys" variable nil nil [45940 46666])
            ("org-use-extra-keys" variable nil nil [46668 46953])
            ("defvaralias" code nil nil [46955 47015])
            ("org-disputed-keys" variable (:default-value (quote (([(shift up)] . [(meta p)]) ([(shift down)] . [(meta n)]) ([(shift left)] . [(meta -)]) ([(shift right)] . [(meta +)]) ([(control shift right)] . [(meta shift +)]) ([(control shift left)] . [(meta shift -)])))) nil [47017 47701])
            ("org-key" function (:arguments ("key")) nil [47703 48060])
            ("org-defkey" function (:arguments ("keymap" "key" "def")) nil [48062 48202])
            ("org-ellipsis" variable nil nil [48204 48711])
            ("org-display-table" variable nil nil [48713 48814])
            ("org-keywords" customgroup (:user-visible-flag t) nil [48816 48905])
            ("org-closed-keep-when-no-todo" variable nil nil [48907 49133])
            ("org-structure" customgroup (:user-visible-flag t) nil [49135 49259])
            ("org-reveal-location" customgroup (:user-visible-flag t) nil [49261 49409])
            ("org-show-context-detail" variable (:default-value (quote ((agenda . local) (bookmark-jump . lineage) (isearch . lineage) (default . ancestors)))) nil [49411 52266])
            ("org-indirect-buffer-display" variable (:default-value (quote other-window)) nil [52268 53162])
            ("org-use-speed-commands" variable nil nil [53164 53752])
            ("org-speed-commands-user" variable nil nil [53754 54715])
            ("org-bookmark-names-plist" variable (:default-value (quote (:last-capture "org-capture-last-stored" :last-refile "org-refile-last-stored" :last-capture-marker "org-capture-last-stored-marker"))) nil [54717 55275])
            ("org-cycle" customgroup (:user-visible-flag t) nil [55277 55399])
            ("org-cycle-skip-children-state-if-no-children" variable (:default-value t) nil [55401 55566])
            ("org-cycle-max-level" variable nil nil [55568 56224])
            ("org-hide-block-startup" variable nil nil [56226 56475])
            ("org-cycle-global-at-bob" variable nil nil [56477 57075])
            ("org-cycle-level-after-item/entry-creation" variable (:default-value t) nil [57077 57796])
            ("org-cycle-emulate-tab" variable (:default-value t) nil [57798 58504])
            ("org-cycle-separator-lines" variable (:default-value 2) nil [58506 59268])
            ("put" code nil nil [59269 59332])
            ("org-pre-cycle-hook" variable nil nil [59334 59803])
            ("org-cycle-hook" variable (:default-value (quote (org-cycle-hide-archived-subtrees org-cycle-hide-drawers org-cycle-show-empty-lines org-optimize-window-after-visibility-change))) nil [59805 60486])
            ("org-edit-structure" customgroup (:user-visible-flag t) nil [60488 60627])
            ("org-odd-levels-only" variable nil nil [60629 61223])
            ("org-adapt-indentation" variable (:default-value t) nil [61225 62307])
            ("org-special-ctrl-a/e" variable nil nil [62309 63929])
            ("defvaralias" code nil nil [63930 63985])
            ("org-special-ctrl-k" variable nil nil [63987 64506])
            ("org-ctrl-k-protect-subtree" variable nil nil [64508 65121])
            ("org-special-ctrl-o" variable (:default-value t) nil [65123 65255])
            ("org-catch-invisible-edits" variable nil nil [65257 66422])
            ("org-yank-folded-subtrees" variable (:default-value t) nil [66424 66846])
            ("org-yank-adjusted-subtrees" variable nil nil [66848 67096])
            ("org-M-RET-may-split-line" variable (:default-value (quote ((default . t)))) nil [67098 67873])
            ("org-insert-heading-respect-content" variable nil nil [67876 68280])
            ("org-blank-before-new-entry" variable (:default-value (quote ((heading . auto) (plain-list-item . auto)))) nil [68282 69009])
            ("org-insert-heading-hook" variable nil nil [69011 69143])
            ("org-enable-fixed-width-editor" variable (:default-value t) nil [69145 69419])
            ("org-goto-auto-isearch" variable (:default-value t) nil [69421 69873])
            ("org-sparse-trees" customgroup (:user-visible-flag t) nil [69875 70005])
            ("org-highlight-sparse-tree-matches" variable (:default-value t) nil [70007 70265])
            ("org-remove-highlights-with-change" variable (:default-value t) nil [70267 70736])
            ("org-occur-case-fold-search" variable (:default-value t) nil [70738 71150])
            ("org-occur-hook" variable (:default-value (quote (org-first-headline-recenter))) nil [71152 71406])
            ("org-imenu-and-speedbar" customgroup (:user-visible-flag t) nil [71408 71556])
            ("org-imenu-depth" variable (:default-value 2) nil [71558 71733])
            ("org-table" customgroup (:user-visible-flag t) nil [71735 71835])
            ("org-self-insert-cluster-for-undo" variable nil nil [71837 72172])
            ("org-table-tab-recognizes-table.el" variable (:default-value t) nil [72174 72434])
            ("org-link" customgroup (:user-visible-flag t) nil [72436 72533])
            ("defvar-local" code nil nil [72535 72695])
            ("org-link-parameters" variable (:default-value (quote (("doi" :follow org--open-doi-link) ("elisp" :follow org--open-elisp-link) ("file" :complete org-file-complete-link) ("ftp" :follow (lambda (path) (browse-url (concat "ftp:" path)))) ("help" :follow org--open-help-link) ("http" :follow (lambda (path) (browse-url (concat "http:" path)))) ("https" :follow (lambda (path) (browse-url (concat "https:" path)))) ("mailto" :follow (lambda (path) (browse-url (concat "mailto:" path)))) ("news" :follow (lambda (path) (browse-url (concat "news:" path)))) ("shell" :follow org--open-shell-link)))) nil [72697 74725])
            ("org-link-get-parameter" function (:arguments ("type" "key")) nil [74727 74912])
            ("org-link-set-parameters" function (:arguments ("type" "parameters")) nil [74914 75293])
            ("org-link-types" function nil nil [75295 75396])
            ("org-link-abbrev-alist" variable nil nil [75398 76617])
            ("org-descriptive-links" variable (:default-value t) nil [76619 77074])
            ("org-link-file-path-type" variable (:default-value (quote adaptive)) nil [77076 77701])
            ("defvaralias" code nil nil [77703 77757])
            ("org-highlight-links" variable (:default-value (quote (bracket angle plain radio tag date footnote))) nil [77758 79161])
            ("org-make-link-description-function" variable nil nil [79163 79523])
            ("org-link-store" customgroup (:user-visible-flag t) nil [79525 79647])
            ("org-url-hexify-p" variable (:default-value t) nil [79649 79790])
            ("org-email-link-description-format" variable (:default-value "Email %c: %.30s") nil [79792 80593])
            ("org-from-is-user-regexp" variable (:default-value (let (r1 r2) (when (and user-mail-address (not (string= user-mail-address ""))) (setq r1 (concat "\\<" (regexp-quote user-mail-address) "\\>"))) (when (and user-full-name (not (string= user-full-name ""))) (setq r2 (concat "\\<" (regexp-quote user-full-name) "\\>"))) (if (and r1 r2) (concat r1 "\\|" r2) (or r1 r2)))) nil [80595 81155])
            ("org-context-in-file-links" variable (:default-value t) nil [81157 81838])
            ("org-keep-stored-link-after-insertion" variable nil nil [81840 82443])
            ("org-link-follow" customgroup (:user-visible-flag t) nil [82445 82571])
            ("org-link-translation-function" variable nil nil [82573 83281])
            ("org-follow-link-hook" variable nil nil [83283 83412])
            ("org-tab-follows-link" variable nil nil [83414 83674])
            ("org-return-follows-link" variable nil nil [83676 83866])
            ("org-mouse-1-follows-link" variable (:default-value (if (boundp (quote mouse-1-click-follows-link)) mouse-1-click-follows-link t)) nil [83868 84421])
            ("org-mark-ring-length" variable (:default-value 4) nil [84423 84623])
            ("org-link-search-must-match-exact-headline" variable (:default-value (quote query-to-create)) nil [84625 85266])
            ("org-link-frame-setup" variable (:default-value (quote ((vm . vm-visit-folder-other-frame) (vm-imap . vm-visit-imap-folder-other-frame) (gnus . org-gnus-no-new-news) (file . find-file-other-window) (wl . wl-other-frame)))) nil [85268 86841])
            ("org-display-internal-link-with-indirect-buffer" variable nil nil [86843 87434])
            ("org-open-non-existing-files" variable nil nil [87436 87805])
            ("org-open-directory-means-index-dot-org" variable nil nil [87807 88075])
            ("org-confirm-shell-link-function" variable (:default-value (quote yes-or-no-p)) nil [88077 88786])
            ("put" code nil nil [88787 88904])
            ("org-confirm-shell-link-not-regexp" variable nil nil [88906 89065])
            ("org-confirm-elisp-link-function" variable (:default-value (quote yes-or-no-p)) nil [89067 89801])
            ("put" code nil nil [89802 89919])
            ("org-confirm-elisp-link-not-regexp" variable nil nil [89921 90080])
            ("org-file-apps-defaults-gnu" variable
               (:constant-flag t
                :default-value (quote ((remote . emacs) (system . mailcap) (t . mailcap))))
                nil [90082 90264])
            ("org-file-apps-defaults-macosx" variable
               (:constant-flag t
                :default-value (quote ((remote . emacs) (system . "open %s") ("ps.gz" . "gv %s") ("eps.gz" . "gv %s") ("dvi" . "xdvi %s") ("fig" . "xfig %s") (t . "open %s"))))
                nil [90266 90680])
            ("org-file-apps-defaults-windowsnt" variable
               (:constant-flag t
                :default-value (list (quote (remote . emacs)) (cons (quote system) (lambda (file _path) (with-no-warnings (w32-shell-execute "open" file)))) (cons t (lambda (file _path) (with-no-warnings (w32-shell-execute "open" file))))))
                nil [90682 91050])
            ("org-file-apps" variable (:default-value (quote ((auto-mode . emacs) ("\\.mm\\'" . default) ("\\.x?html?\\'" . default) ("\\.pdf\\'" . default)))) nil [91052 95976])
            ("org-doi-server-url" variable (:default-value "http://dx.doi.org/") nil [95978 96120])
            ("org-refile" customgroup (:user-visible-flag t) nil [96122 96234])
            ("org-directory" variable (:default-value "~/org") nil [96236 96823])
            ("org-default-notes-file" variable (:default-value (convert-standard-filename "~/.notes")) nil [96825 97087])
            ("org-goto-interface" variable (:default-value (quote outline)) nil [97089 97762])
            ("org-goto-max-level" variable (:default-value 5) nil [97764 97906])
            ("org-reverse-note-order" variable nil nil [97908 98391])
            ("org-log-refile" variable nil nil [98393 99204])
            ("org-refile-targets" variable nil nil [99206 101530])
            ("org-refile-target-verify-function" variable nil nil [101532 102218])
            ("org-refile-use-cache" variable nil nil [102220 102849])
            ("org-refile-use-outline-path" variable nil nil [102851 103557])
            ("org-outline-path-complete-in-steps" variable (:default-value t) nil [103559 104152])
            ("org-refile-allow-creating-parent-nodes" variable nil nil [104154 104875])
            ("org-refile-active-region-within-subtree" variable nil nil [104877 105281])
            ("org-todo" customgroup (:user-visible-flag t) nil [105283 105385])
            ("org-progress" customgroup (:user-visible-flag t) nil [105387 105508])
            ("org-todo-interpretation-widgets" variable (:default-value (quote ((:tag "Sequence (cycling hits every state)" sequence) (:tag "Type     (cycling directly to DONE)" type)))) nil [105510 105787])
            ("org-todo-keywords" variable (:default-value (quote ((sequence "TODO" "DONE")))) nil [105789 108603])
            ("defvar-local" code nil nil [108605 108694])
            ("org-todo-keywords-for-agenda" variable nil nil [108695 108736])
            ("org-done-keywords-for-agenda" variable nil nil [108737 108778])
            ("org-todo-keyword-alist-for-agenda" variable nil nil [108779 108825])
            ("org-tag-alist-for-agenda" variable nil nil [108826 108908])
            ("org-tag-groups-alist-for-agenda" variable nil nil [108909 109013])
            ("defvar-local" code nil nil [109014 109053])
            ("org-agenda-contributing-files" variable nil nil [109054 109096])
            ("defvar-local" code nil nil [109097 109300])
            ("defvar-local" code nil nil [109301 109341])
            ("defvar-local" code nil nil [109342 109378])
            ("defvar-local" code nil nil [109379 109412])
            ("defvar-local" code nil nil [109413 109445])
            ("defvar-local" code nil nil [109446 109484])
            ("defvar-local" code nil nil [109485 109522])
            ("defvar-local" code nil nil [109523 109560])
            ("defvar-local" code nil nil [109561 109600])
            ("org-todo-interpretation" variable (:default-value (quote sequence)) nil [109602 109997])
            ("org-use-fast-todo-selection" variable (:default-value t) nil [109999 110982])
            ("org-provide-todo-statistics" variable (:default-value t) nil [110984 111976])
            ("org-hierarchical-todo-statistics" variable (:default-value t) nil [111978 112365])
            ("org-after-todo-state-change-hook" variable nil nil [112367 112614])
            ("org-blocker-hook" variable nil nil [112616 112964])
            ("org-trigger-hook" variable nil nil [112966 113566])
            ("org-enforce-todo-dependencies" variable nil nil [113568 114200])
            ("org-enforce-todo-checkbox-dependencies" variable nil nil [114202 114961])
            ("org-treat-insert-todo-heading-as-state-change" variable nil nil [114963 115326])
            ("org-treat-S-cursor-todo-selection-as-state-change" variable (:default-value t) nil [115328 115657])
            ("org-todo-state-tags-triggers" variable nil nil [115659 116375])
            ("org-log-done" variable nil nil [116377 117102])
            ("cond" code nil nil [117143 117282])
            ("org-log-reschedule" variable nil nil [117284 117911])
            ("org-log-redeadline" variable nil nil [117913 118655])
            ("org-log-note-clock-out" variable nil nil [118657 118990])
            ("org-log-done-with-time" variable (:default-value t) nil [118992 119178])
            ("org-log-note-headings" variable (:default-value (quote ((done . "CLOSING NOTE %t") (state . "State %-12s from %-12S %t") (note . "Note taken on %t") (reschedule . "Rescheduled from %S on %t") (delschedule . "Not scheduled, was %S on %t") (redeadline . "New deadline from %S on %t") (deldeadline . "Removed deadline, was %S on %t") (refile . "Refiled on %t") (clock-out . "")))) nil [119180 121075])
            ("unless" code nil nil [121077 121166])
            ("org-log-into-drawer" variable nil nil [121168 122203])
            ("defvaralias" code nil nil [122205 122272])
            ("org-log-into-drawer" function nil nil [122274 122769])
            ("org-log-state-notes-insert-after-drawers" variable nil nil [122771 123232])
            ("org-log-states-order-reversed" variable (:default-value t) nil [123234 123602])
            ("org-todo-repeat-to-state" variable nil nil [123604 124041])
            ("org-log-repeat" variable (:default-value (quote time)) nil [124043 125089])
            ("org-priorities" customgroup (:user-visible-flag t) nil [125092 125192])
            ("org-enable-priority-commands" variable (:default-value t) nil [125194 125416])
            ("org-highest-priority" variable (:default-value 65) nil [125418 125628])
            ("org-lowest-priority" variable (:default-value 67) nil [125630 125838])
            ("org-default-priority" variable (:default-value 66) nil [125840 126519])
            ("org-priority-start-cycle-with-default" variable (:default-value t) nil [126521 126850])
            ("org-get-priority-function" variable nil nil [126852 127353])
            ("org-time" customgroup (:user-visible-flag t) nil [127355 127472])
            ("org-time-stamp-rounding-minutes" variable (:default-value (quote (0 5))) nil [127474 128533])
            ("when" code nil nil [128585 128754])
            ("org-display-custom-times" variable nil nil [128756 129081])
            ("make-variable-buffer-local" code nil nil [129082 129136])
            ("org-time-stamp-custom-formats" variable (:default-value (quote ("<%m/%d/%y %a>" . "<%m/%d/%y %a %H:%M>"))) nil [129138 129620])
            ("org-time-stamp-format" function (:arguments ("long" "inactive")) nil [129622 129872])
            ("org-deadline-warning-days" variable (:default-value 14) nil [129874 130332])
            ("org-scheduled-delay-days" variable nil nil [130334 130888])
            ("org-read-date-prefer-future" variable (:default-value t) nil [130890 131971])
            ("org-agenda-jump-prefer-future" variable (:default-value (quote org-read-date-prefer-future)) nil [131973 132517])
            ("org-read-date-force-compatible-dates" variable (:default-value t) nil [132519 133935])
            ("org-read-date-display-live" variable (:default-value t) nil [133937 134138])
            ("org-read-date-popup-calendar" variable (:default-value t) nil [134140 134475])
            ("defvaralias" code nil nil [134476 134557])
            ("org-extend-today-until" variable nil nil [134559 135298])
            ("org-use-effective-time" variable nil nil [135300 135635])
            ("org-use-last-clock-out-time-as-effective-time" variable nil nil [135637 135965])
            ("org-edit-timestamp-down-means-later" variable nil nil [135967 136149])
            ("org-calendar-follow-timestamp-change" variable (:default-value t) nil [136151 136405])
            ("org-tags" customgroup (:user-visible-flag t) nil [136407 136503])
            ("org-tag-alist" variable nil nil [136505 137762])
            ("org-tag-persistent-alist" variable nil nil [137764 138993])
            ("org-complete-tags-always-offer-all-agenda-tags" variable nil nil [138995 139514])
            ("org-file-tags" variable nil nil [139516 139749])
            ("org-use-fast-tag-selection" variable (:default-value (quote auto)) nil [139751 140410])
            ("org-fast-tag-selection-single-key" variable nil nil [140412 140895])
            ("org-fast-tag-selection-include-todo" variable nil nil [140897 141082])
            ("org-tags-column" variable (:default-value -77) nil [141084 141491])
            ("org-auto-align-tags" variable (:default-value t) nil [141493 141824])
            ("org-use-tag-inheritance" variable (:default-value t) nil [141826 142811])
            ("org-tags-exclude-from-inheritance" variable nil nil [142813 143144])
            ("org-tag-inherit-p" function (:arguments ("tag")) nil [143146 143595])
            ("org-tags-match-list-sublevels" variable (:default-value t) nil [143597 144580])
            ("org-tags-sort-function" variable nil nil [144582 144884])
            ("org-tags-history" variable nil nil [144886 144957])
            ("org-last-tags-completion-table" variable nil nil [144958 145046])
            ("org-after-tags-change-hook" variable nil nil [145047 145146])
            ("org-properties" customgroup (:user-visible-flag t) nil [145148 145262])
            ("org-property-format" variable (:default-value "%-10s %s") nil [145264 145592])
            ("org-properties-postprocess-alist" variable nil nil [145594 146563])
            ("org-use-property-inheritance" variable nil nil [146565 147871])
            ("org-property-inherit-p" function (:arguments ("property")) nil [147873 148343])
            ("org-columns-default-format" variable (:default-value "%25ITEM %TODO %3PRIORITY %TAGS") nil [148345 148618])
            ("org-columns-ellipses" variable (:default-value "..") nil [148620 149128])
            ("org-global-properties-fixed" variable
               (:constant-flag t
                :default-value (quote (("VISIBILITY_ALL" . "folded children content all") ("CLOCK_MODELINE_TOTAL_ALL" . "current today repeat all auto"))))
                nil [149130 149703])
            ("org-global-properties" variable nil nil [149705 150242])
            ("defvar-local" code nil nil [150244 150431])
            ("org-agenda" customgroup (:user-visible-flag t) nil [150433 150541])
            ("defvar-local" code nil nil [150543 150875])
            ("put" code nil nil [150876 150958])
            ("org-agenda-files" variable nil nil [150960 151743])
            ("org-agenda-file-regexp" variable (:default-value "\\`[^.].*\\.org\\'") nil [151745 152080])
            ("org-agenda-text-search-extra-files" variable nil nil [152082 152906])
            ("defvaralias" code nil nil [152908 152995])
            ("org-agenda-skip-unavailable-files" variable nil nil [152997 153222])
            ("org-calendar-to-agenda-key" variable (:default-value [99]) nil [153224 153565])
            ("org-calendar-insert-diary-entry-key" variable (:default-value [105]) nil [153567 154091])
            ("org-agenda-diary-file" variable (:default-value (quote diary-file)) nil [154093 154569])
            ("eval-after-load" code nil nil [154571 154919])
            ("org-latex" customgroup (:user-visible-flag t) nil [154921 155030])
            ("org-format-latex-options" variable (:default-value (quote (:foreground default :background default :scale 1.0 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers ("begin" "$1" "$" "$$" "\\(" "\\[")))) nil [155032 156481])
            ("org-format-latex-signal-error" variable (:default-value t) nil [156483 156695])
            ("org-latex-to-mathml-jar-file" variable nil nil [156697 157078])
            ("org-latex-to-mathml-convert-command" variable nil nil [157080 157873])
            ("org-preview-latex-default-process" variable (:default-value (quote dvipng)) nil [157875 158190])
            ("org-preview-latex-process-alist" variable (:default-value (quote ((dvipng :programs ("latex" "dvipng") :description "dvi > png" :message "you need to install the programs: latex and dvipng." :image-input-type "dvi" :image-output-type "png" :image-size-adjust (1.0 . 1.0) :latex-compiler ("latex -interaction nonstopmode -output-directory %o %f") :image-converter ("dvipng -fg %F -bg %B -D %D -T tight -o %O %f")) (dvisvgm :programs ("latex" "dvisvgm") :description "dvi > svg" :message "you need to install the programs: latex and dvisvgm." :use-xcolor t :image-input-type "dvi" :image-output-type "svg" :image-size-adjust (1.7 . 1.5) :latex-compiler ("latex -interaction nonstopmode -output-directory %o %f") :image-converter ("dvisvgm %f -n -b min -c %S -o %O")) (imagemagick :programs ("latex" "convert") :description "pdf > png" :message "you need to install the programs: latex and imagemagick." :use-xcolor t :image-input-type "pdf" :image-output-type "png" :image-size-adjust (1.0 . 1.0) :latex-compiler ("pdflatex -interaction nonstopmode -output-directory %o %f") :image-converter ("convert -density %D -trim -antialias %f -quality 100 %O"))))) nil [158192 162677])
            ("org-preview-latex-image-directory" variable (:default-value "ltximg/") nil [162679 163012])
            ("org-format-latex-mathml-available-p" function nil nil [163014 163515])
            ("org-format-latex-header" variable (:default-value "\\documentclass{article}
\\usepackage[usenames]{color}
[PACKAGES]
[DEFAULT-PACKAGES]
\\pagestyle{empty}             % do not remove
% The settings below are copied from fullpage.sty
\\setlength{\\textwidth}{\\paperwidth}
\\addtolength{\\textwidth}{-3cm}
\\setlength{\\oddsidemargin}{1.5cm}
\\addtolength{\\oddsidemargin}{-2.54cm}
\\setlength{\\evensidemargin}{\\oddsidemargin}
\\setlength{\\textheight}{\\paperheight}
\\addtolength{\\textheight}{-\\headheight}
\\addtolength{\\textheight}{-\\headsep}
\\addtolength{\\textheight}{-\\footskip}
\\addtolength{\\textheight}{-3cm}
\\setlength{\\topmargin}{1.5cm}
\\addtolength{\\topmargin}{-2.54cm}") nil [163517 164579])
            ("org-set-packages-alist" function (:arguments ("var" "val")) nil [164581 164821])
            ("org-get-packages-alist" function (:arguments ("var")) nil [164823 165057])
            ("org-latex-default-packages-alist" variable (:default-value (quote (("AUTO" "inputenc" t ("pdflatex")) ("T1" "fontenc" t ("pdflatex")) ("" "graphicx" t) ("" "grffile" t) ("" "longtable" nil) ("" "wrapfig" nil) ("" "rotating" nil) ("normalem" "ulem" t) ("" "amsmath" t) ("" "textcomp" t) ("" "amssymb" t) ("" "capt-of" nil) ("" "hyperref" nil)))) nil [165059 167584])
            ("org-latex-packages-alist" variable nil nil [167586 168608])
            ("org-appearance" customgroup (:user-visible-flag t) nil [168610 168715])
            ("org-level-color-stars-only" variable nil nil [168717 169008])
            ("org-hide-leading-stars" variable nil nil [169010 169595])
            ("org-hidden-keywords" variable nil nil [169597 170039])
            ("org-custom-properties" variable nil nil [170041 170374])
            ("org-fontify-done-headline" variable nil nil [170376 170717])
            ("org-fontify-emphasized-text" variable (:default-value t) nil [170719 170935])
            ("org-fontify-whole-heading-line" variable nil nil [170937 171154])
            ("org-highlight-latex-and-related" variable nil nil [171156 171815])
            ("org-hide-emphasis-markers" variable nil nil [171817 171971])
            ("org-hide-macro-markers" variable nil nil [171973 172126])
            ("org-pretty-entities" variable nil nil [172128 172324])
            ("org-pretty-entities-include-sub-superscripts" variable (:default-value t) nil [172326 172523])
            ("org-emph-re" variable nil nil [172525 173094])
            ("org-verbatim-re" variable nil nil [173096 173175])
            ("org-emphasis-regexp-components" variable nil nil [173177 173216])
            ("org-emphasis-alist" variable nil nil [173238 173265])
            ("org-set-emph-re" function (:arguments ("var" "val")) nil [173287 174014])
            ("org-emphasis-regexp-components" variable (:default-value (quote ("- 	('\"{" "- 	.,:!?;'\")}\\[" " 	
" "." 1))) nil [174202 175188])
            ("org-emphasis-alist" variable (:default-value (quote (("*" bold) ("/" italic) ("_" underline) ("=" org-verbatim verbatim) ("~" org-code verbatim) ("+" (:strike-through t))))) nil [175190 175995])
            ("org-protecting-blocks" variable (:default-value (quote ("src" "example" "export"))) nil [175997 176170])
            ("mark-active" variable nil nil [176265 176285])
            ("declare-function" code nil nil [176307 176379])
            ("declare-function" code nil nil [176380 176436])
            ("declare-function" code nil nil [176437 176492])
            ("declare-function" code nil nil [176493 176545])
            ("declare-function" code nil nil [176546 176608])
            ("declare-function" code nil nil [176609 176669])
            ("declare-function" code nil nil [176670 176728])
            ("declare-function" code nil nil [176729 176776])
            ("declare-function" code nil nil [176777 176871])
            ("declare-function" code nil nil [176872 177005])
            ("declare-function" code nil nil [177006 177120])
            ("declare-function" code nil nil [177121 177237])
            ("declare-function" code nil nil [177238 177306])
            ("declare-function" code nil nil [177307 177439])
            ("declare-function" code nil nil [177440 177496])
            ("declare-function" code nil nil [177497 177566])
            ("declare-function" code nil nil [177567 177658])
            ("declare-function" code nil nil [177659 177739])
            ("declare-function" code nil nil [177740 177790])
            ("declare-function" code nil nil [177791 177862])
            ("declare-function" code nil nil [177863 177939])
            ("declare-function" code nil nil [177940 178003])
            ("declare-function" code nil nil [178004 178072])
            ("declare-function" code nil nil [178073 178135])
            ("declare-function" code nil nil [178136 178199])
            ("declare-function" code nil nil [178200 178270])
            ("declare-function" code nil nil [178271 178337])
            ("declare-function" code nil nil [178338 178396])
            ("declare-function" code nil nil [178397 178468])
            ("align-mode-rules-list" variable nil nil [178470 178500])
            ("calc-embedded-close-formula" variable nil nil [178501 178537])
            ("calc-embedded-open-formula" variable nil nil [178538 178573])
            ("calc-embedded-open-mode" variable nil nil [178574 178606])
            ("font-lock-unfontify-region-function" variable nil nil [178607 178651])
            ("iswitchb-temp-buflist" variable nil nil [178652 178682])
            ("org-agenda-tags-todo-honor-ignore-options" variable nil nil [178683 178733])
            ("remember-data-file" variable nil nil [178734 178761])
            ("texmathp-why" variable nil nil [178762 178783])
            ("turn-on-orgtbl" function nil nil [178800 178909])
            ("org-at-table-p" function (:arguments ("table-type")) nil [178911 179324])
            ("org-at-table.el-p" function nil nil [179326 179593])
            ("org-at-table-hline-p" function nil nil [179595 179757])
            ("org-table-map-tables" function (:arguments ("function" "quietly")) nil [179759 180528])
            ("declare-function" code nil nil [180530 180611])
            ("declare-function" code nil nil [180612 180672])
            ("declare-function" code nil nil [180673 180776])
            ("org-at-TBLFM-p" function (:arguments ("pos")) nil [180778 181069])
            ("org-clock-start-time" variable nil nil [181071 181100])
            ("org-clock-marker" variable (:default-value (make-marker)) nil [181101 181180])
            ("org-clock-hd-marker" variable (:default-value (make-marker)) nil [181181 181290])
            ("org-clock-heading" variable nil nil [181291 181364])
            ("org-clock-is-active" function nil nil [181365 181525])
            ("org-check-running-clock" function nil nil [181527 181940])
            ("org-clocktable-try-shift" function (:arguments ("dir" "n")) nil [181942 182155])
            ("org-clock-persistence-insinuate" function nil nil [182172 182367])
            ("org-archive" customgroup (:user-visible-flag t) nil [182369 182486])
            ("org-archive-location" variable (:default-value "%s_archive::") nil [182488 184897])
            ("org-agenda-skip-archived-trees" variable (:default-value t) nil [184899 185295])
            ("org-columns-skip-archived-trees" variable (:default-value t) nil [185297 185473])
            ("org-cycle-open-archived-trees" variable nil nil [185475 185840])
            ("org-sparse-tree-open-archived-trees" variable nil nil [185842 186128])
            ("org-sparse-tree-default-date-type" variable nil nil [186130 186960])
            ("org-cycle-hide-archived-subtrees" function (:arguments ("state")) nil [186962 187712])
            ("org-force-cycle-archived" function (:user-visible-flag t) nil [187714 187920])
            ("org-hide-archived-subtrees" function (:arguments ("beg" "end")) nil [187922 188417])
            ("declare-function" code nil nil [188419 188473])
            ("declare-function" code nil nil [188474 188537])
            ("org-flag-subtree" function (:arguments ("flag")) nil [188538 188731])
            ("defalias" code nil nil [188733 188796])
            ("declare-function" code nil nil [188827 188899])
            ("declare-function" code nil nil [188900 188963])
            ("declare-function" code nil nil [188985 189030])
            ("declare-function" code nil nil [189031 189080])
            ("declare-function" code nil nil [189081 189130])
            ("org-id-track-globally" variable nil nil [189131 189161])
            ("defvar-local" code nil nil [189233 189436])
            ("defvar-local" code nil nil [189438 189665])
            ("defvar-local" code nil nil [189667 189884])
            ("defvar-local" code nil nil [189886 190118])
            ("defvar-local" code nil nil [190120 190458])
            ("defvar-local" code nil nil [190460 190732])
            ("defvar-local" code nil nil [190734 190894])
            ("org-plain-time-of-day-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\(--?" "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\)?"))
                nil [190896 191428])
            ("org-plain-time-extension-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\+\\([0-9]+\\)\\(:\\([0-5][0-9]\\)\\)?"))
                nil [191430 191878])
            ("org-stamp-time-of-day-regexp" variable
               (:constant-flag t
                :default-value (concat "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} +\\sw+ +\\)" "\\([012][0-9]:[0-5][0-9]\\(-\\([012][0-9]:[0-5][0-9]\\)\\)?[^
>]*?\\)>" "\\(--?" "<\\1\\([012][0-9]:[0-5][0-9]\\)>\\)?"))
                nil [191880 192427])
            ("org-startup-options" variable
               (:constant-flag t
                :default-value (quote (("fold" org-startup-folded t) ("overview" org-startup-folded t) ("nofold" org-startup-folded nil) ("showall" org-startup-folded nil) ("showeverything" org-startup-folded showeverything) ("content" org-startup-folded content) ("indent" org-startup-indented t) ("noindent" org-startup-indented nil) ("hidestars" org-hide-leading-stars t) ("showstars" org-hide-leading-stars nil) ("odd" org-odd-levels-only t) ("oddeven" org-odd-levels-only nil) ("align" org-startup-align-all-tables t) ("noalign" org-startup-align-all-tables nil) ("inlineimages" org-startup-with-inline-images t) ("noinlineimages" org-startup-with-inline-images nil) ("latexpreview" org-startup-with-latex-preview t) ("nolatexpreview" org-startup-with-latex-preview nil) ("customtime" org-display-custom-times t) ("logdone" org-log-done time) ("lognotedone" org-log-done note) ("nologdone" org-log-done nil) ("lognoteclock-out" org-log-note-clock-out t) ("nolognoteclock-out" org-log-note-clock-out nil) ("logrepeat" org-log-repeat state) ("lognoterepeat" org-log-repeat note) ("logdrawer" org-log-into-drawer t) ("nologdrawer" org-log-into-drawer nil) ("logstatesreversed" org-log-states-order-reversed t) ("nologstatesreversed" org-log-states-order-reversed nil) ("nologrepeat" org-log-repeat nil) ("logreschedule" org-log-reschedule time) ("lognotereschedule" org-log-reschedule note) ("nologreschedule" org-log-reschedule nil) ("logredeadline" org-log-redeadline time) ("lognoteredeadline" org-log-redeadline note) ("nologredeadline" org-log-redeadline nil) ("logrefile" org-log-refile time) ("lognoterefile" org-log-refile note) ("nologrefile" org-log-refile nil) ("fninline" org-footnote-define-inline t) ("nofninline" org-footnote-define-inline nil) ("fnlocal" org-footnote-section nil) ("fnauto" org-footnote-auto-label t) ("fnprompt" org-footnote-auto-label nil) ("fnconfirm" org-footnote-auto-label confirm) ("fnplain" org-footnote-auto-label plain) ("fnadjust" org-footnote-auto-adjust t) ("nofnadjust" org-footnote-auto-adjust nil) ("constcgs" constants-unit-system cgs) ("constSI" constants-unit-system SI) ("noptag" org-tag-persistent-alist nil) ("hideblocks" org-hide-block-startup t) ("nohideblocks" org-hide-block-startup nil) ("beamer" org-startup-with-beamer-mode t) ("entitiespretty" org-pretty-entities t) ("entitiesplain" org-pretty-entities nil))))
                nil [192429 195350])
            ("org-group-tags" variable (:default-value t) nil [195352 195546])
            ("org-inhibit-startup" variable nil nil [195548 195580])
            ("org-toggle-tags-groups" function (:user-visible-flag t) nil [195617 196100])
            ("org-tag-add-to-alist" function (:arguments ("alist1" "alist2")) nil [196102 196466])
            ("org-set-regexps-and-options" function (:arguments ("tags-only")) nil [196468 202890])
            ("org--setup-collect-keywords" function (:arguments ("regexp" "files" "alist")) nil [202892 207169])
            ("org-tag-string-to-alist" function (:arguments ("s")) nil [207171 208521])
            ("org-tag-alist-to-string" function (:arguments ("alist" "skip-key")) nil [208523 209342])
            ("org-tag-alist-to-groups" function (:arguments ("alist")) nil [209344 210210])
            ("org--file-cache" variable (:default-value (make-hash-table :test (function equal))) nil [210212 210395])
            ("org-reset-file-cache" function nil nil [210397 210520])
            ("org-file-url-p" function (:arguments ("file")) nil [210522 210639])
            ("org-file-contents" function (:arguments ("file" "noerror" "nocache")) nil [210641 212176])
            ("org-extract-log-state-settings" function (:arguments ("x")) nil [212178 212706])
            ("org-remove-keyword-keys" function (:arguments ("list")) nil [212708 212928])
            ("org-assign-fast-keys" function (:arguments ("alist")) nil [212930 213575])
            ("org-window-configuration" variable nil nil [213620 213717])
            ("org-selected-window" variable nil nil [213718 213810])
            ("org-finish-function" variable nil nil [213811 213950])
            ("org-last-state" variable nil nil [213951 213974])
            ("org-entities" variable nil nil [214039 214060])
            ("org-struct-menu" variable nil nil [214095 214119])
            ("org-org-menu" variable nil nil [214120 214141])
            ("org-tbl-menu" variable nil nil [214142 214163])
            ("org-table-may-need-update" variable (:default-value t) nil [214271 214449])
            ("org-before-change-function" function (:arguments ("_beg" "_end")) nil [214450 214595])
            ("org-mode-map" variable nil nil [214596 214617])
            ("org-inhibit-startup-visibility-stuff" variable nil nil [214618 214667])
            ("org-agenda-keep-modes" variable nil nil [214696 214730])
            ("org-inhibit-logging" variable nil nil [214764 214796])
            ("org-inhibit-blocking" variable nil nil [214832 214865])
            ("org-table-buffer-is-an" variable nil nil [214900 214935])
            ("bidi-paragraph-direction" variable nil nil [214937 214970])
            ("buffer-face-mode-face" variable nil nil [214971 215001])
            ("outline" include nil nil [215003 215021])
            ("time-date" include nil nil [215047 215067])
            ("unless" code nil nil [215068 215142])
            ("easymenu" include nil nil [215143 215162])
            ("easy-menu-add" function (:prototype-flag t) nil [215163 215199])
            ("overlay" include nil nil [215200 215218])
            ("org-entities" include nil nil [215295 215318])
            ("org-faces" include nil nil [215396 215416])
            ("org-list" include nil nil [215417 215436])
            ("org-pcomplete" include nil nil [215437 215461])
            ("org-src" include nil nil [215462 215480])
            ("org-footnote" include nil nil [215481 215504])
            ("org-macro" include nil nil [215505 215525])
            ("ob" include nil nil [215536 215549])
            ("define-derived-mode" code nil nil [215566 221455])
            ("add-to-list" code nil nil [221507 221723])
            ("org-mode-transpose-word-syntax-table" variable (:default-value (let ((st (make-syntax-table text-mode-syntax-table))) (dolist (c org-emphasis-alist st) (modify-syntax-entry (string-to-char (car c)) "w p" st)))) nil [221725 221929])
            ("when" code nil nil [221931 222053])
            ("org-find-invisible-foreground" function nil nil [222055 222536])
            ("org-current-time" function (:arguments ("rounding-minutes" "past")) nil [222538 223259])
            ("org-today" function nil nil [223261 223440])
            ("org-mouse-map" variable (:default-value (make-sparse-keymap)) nil [223490 223533])
            ("org-defkey" code nil nil [223534 223589])
            ("org-defkey" code nil nil [223590 223650])
            ("when" code nil nil [223651 223737])
            ("when" code nil nil [223738 223876])
            ("font-lock" include nil nil [223878 223898])
            ("org-non-link-chars" variable
               (:constant-flag t
                :default-value "]	
<>")
                nil [223900 223941])
            ("org-link-types-re" variable nil nil [223942 224033])
            ("org-link-re-with-space" variable nil nil [224034 224138])
            ("org-link-re-with-space2" variable nil nil [224139 224244])
            ("org-link-re-with-space3" variable nil nil [224245 224354])
            ("org-angle-link-re" variable nil nil [224355 224445])
            ("org-plain-link-re" variable nil nil [224446 224516])
            ("org-bracket-link-regexp" variable nil nil [224517 224592])
            ("org-bracket-link-analytic-regexp" variable nil nil [224593 224780])
            ("org-bracket-link-analytic-regexp++" variable nil nil [224781 224908])
            ("org-any-link-re" variable nil nil [224909 224979])
            ("org-match-sexp-depth" variable
               (:constant-flag t
                :default-value 3)
                nil [224981 225073])
            ("org-create-multibrace-regexp" function (:arguments ("left" "right" "n")) nil [225075 225876])
            ("org-match-substring-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\S-\\)\\([_^]\\)\\(" "\\(?:" (org-create-multibrace-regexp "{" "}" org-match-sexp-depth) "\\)" "\\|" "\\(?:" (org-create-multibrace-regexp "(" ")" org-match-sexp-depth) "\\)" "\\|" "\\(?:\\*\\|[+-]?[[:alnum:].,\\]*[[:alnum:]]\\)\\)"))
                nil [225878 226241])
            ("org-match-substring-with-braces-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\S-\\)\\([_^]\\)" "\\(" (org-create-multibrace-regexp "{" "}" org-match-sexp-depth) "\\)"))
                nil [226243 226479])
            ("org-make-link-regexps" function nil nil [226481 228042])
            ("org-make-link-regexps" code nil nil [228044 228067])
            ("org-emph-face" variable nil nil [228069 228095])
            ("org-do-emphasis-faces" function (:arguments ("limit")) nil [228097 229961])
            ("org-emphasize" function
               (:user-visible-flag t
                :arguments ("char"))
                nil [229963 231645])
            ("org-nonsticky-props" variable
               (:constant-flag t
                :default-value (quote (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)))
                nil [231647 231770])
            ("org-rear-nonsticky-at" function (:arguments ("pos")) nil [231772 231890])
            ("org-activate-links" function (:arguments ("limit")) nil [231892 234567])
            ("org-activate-code" function (:arguments ("limit")) nil [234569 234860])
            ("org-src-fontify-natively" variable (:default-value t) nil [234862 235092])
            ("org-allow-promoting-top-level-subtree" variable nil nil [235094 235330])
            ("org-fontify-meta-lines-and-blocks" function (:arguments ("limit")) nil [235332 235569])
            ("org-fontify-meta-lines-and-blocks-1" function (:arguments ("limit")) nil [235571 239811])
            ("org-fontify-drawers" function (:arguments ("limit")) nil [239813 240122])
            ("org-fontify-macros" function (:arguments ("limit")) nil [240124 240800])
            ("org-activate-footnote-links" function (:arguments ("limit")) nil [240802 241546])
            ("org-activate-dates" function (:arguments ("limit")) nil [241548 242242])
            ("defvar-local" code nil nil [242244 242346])
            ("org-target-regexp" variable
               (:constant-flag t
                :default-value (let ((border "[^<>
 	]")) (format "<<\\(%s\\|%s[^<>
]*%s\\)>>" border border border)))
                nil [242348 242536])
            ("org-radio-target-regexp" variable
               (:constant-flag t
                :default-value (format "<%s>" org-target-regexp))
                nil [242538 242654])
            ("org-any-target-regexp" variable
               (:constant-flag t
                :default-value (format "%s\\|%s" org-radio-target-regexp org-target-regexp))
                nil [242656 242795])
            ("org-activate-target-links" function (:arguments ("limit")) nil [242797 243310])
            ("org-update-radio-target-regexp" function (:user-visible-flag t) nil [243312 244909])
            ("org-hide-wide-columns" function (:arguments ("limit")) nil [244911 245206])
            ("org-latex-and-related-regexp" variable nil nil [245208 245326])
            ("org-compute-latex-and-related-regexp" function nil nil [245328 246313])
            ("org-do-latex-and-related" function (:arguments ("limit")) nil [246315 247298])
            ("org-restart-font-lock" function nil nil [247300 247490])
            ("org-activate-tags" function (:arguments ("limit")) nil [247492 247857])
            ("org-outline-level" function nil nil [247859 248325])
            ("org-font-lock-keywords" variable nil nil [248327 248362])
            ("org-re-property" function (:arguments ("property" "literal" "allow-null" "value")) nil [248364 249308])
            ("org-property-re" variable
               (:constant-flag t
                :default-value (org-re-property "\\S-+" (quote literal) t))
                nil [249310 249673])
            ("org-font-lock-hook" variable nil nil [249675 249762])
            ("org-font-lock-extra-keywords" variable nil nil [249764 249805])
            ("org-font-lock-set-keywords-hook" variable nil nil [249828 250158])
            ("org-font-lock-hook" function (:arguments ("limit")) nil [250160 250286])
            ("org-set-font-lock-defaults" function nil nil [250288 254310])
            ("org-toggle-pretty-entities" function (:user-visible-flag t) nil [254312 254755])
            ("defvar-local" code nil nil [254757 254855])
            ("org-toggle-custom-properties-visibility" function (:user-visible-flag t) nil [254857 256099])
            ("org-fontify-entities" function (:arguments ("limit")) nil [256101 256985])
            ("org-fontify-like-in-org-mode" function (:arguments ("s" "odd-levels")) nil [256987 257236])
            ("org-m" variable nil nil [257238 257256])
            ("org-l" variable nil nil [257257 257275])
            ("org-f" variable nil nil [257276 257294])
            ("org-get-level-face" function (:arguments ("n")) nil [257295 257823])
            ("org-face-from-face-or-color" function (:arguments ("context" "inherit" "face-or-color")) nil [257825 258172])
            ("org-get-todo-face" function (:arguments ("kwd")) nil [258174 258530])
            ("org-get-priority-face" function (:arguments ("priority")) nil [258532 258763])
            ("org-get-tag-face" function (:arguments ("tag")) nil [258765 259039])
            ("org-font-lock-add-priority-faces" function (:arguments ("limit")) nil [259041 259363])
            ("org-font-lock-add-tag-faces" function (:arguments ("limit")) nil [259365 259714])
            ("org-unfontify-region" function (:arguments ("beg" "end" "_maybe_loudly")) nil [259716 260286])
            ("org-script-display" variable
               (:constant-flag t
                :default-value (quote (((raise -0.3) (height 0.7)) ((raise 0.3) (height 0.7)) ((raise -0.5)) ((raise 0.5)))))
                nil [260288 260482])
            ("org-remove-font-lock-display-properties" function (:arguments ("beg" "end")) nil [260484 260970])
            ("org-raise-scripts" function (:arguments ("limit")) nil [260972 262440])
            ("defvar-local" code nil nil [262520 262562])
            ("put" code nil nil [262563 262606])
            ("defvar-local" code nil nil [262607 262650])
            ("put" code nil nil [262651 262695])
            ("org-inlinetask-min-level" variable nil nil [262697 262730])
            ("org-unlogged-message" function (:arguments ("args")) nil [262732 262901])
            ("org-cycle" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [262918 269285])
            ("org-cycle-internal-global" function nil nil [269287 270666])
            ("org-called-with-limited-levels" variable nil nil [270668 270775])
            ("org-invisible-p" function (:arguments ("pos")) nil [270777 270955])
            ("org-cycle-internal-local" function nil nil [270957 275206])
            ("org-global-cycle" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [275223 275898])
            ("org-set-startup-visibility" function nil nil [275900 276499])
            ("org-set-visibility-according-to-property" function
               (:user-visible-flag t
                :arguments ("no-cleanup"))
                nil [276501 277498])
            ("org-overview" function (:user-visible-flag t) nil [277681 278285])
            ("org-content" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [278287 278923])
            ("org-optimize-window-after-visibility-change" function (:arguments ("state")) nil [278925 279410])
            ("org-remove-empty-overlays-at" function (:arguments ("pos")) nil [279412 279718])
            ("org-clean-visibility-after-subtree-move" function nil nil [279720 280712])
            ("org-cycle-show-empty-lines" function (:arguments ("state")) nil [280714 282353])
            ("org-show-empty-lines-in-parent" function nil nil [282355 282600])
            ("org-files-list" function nil nil [282602 283066])
            ("org-entry-beginning-position" function nil nil [283068 283217])
            ("org-entry-end-position" function nil nil [283219 283355])
            ("org-cycle-hide-drawers" function (:arguments ("state" "exceptions")) nil [283357 284511])
            ("org-flag-drawer" function (:arguments ("flag" "element")) nil [284513 285445])
            ("org-subtree-end-visible-p" function nil nil [285447 285609])
            ("org-first-headline-recenter" function nil nil [285611 285934])
            ("org-outline-overlay-data" function (:arguments ("use-markers")) nil [285973 286694])
            ("org-set-outline-overlay-data" function (:arguments ("data")) nil [286696 286963])
            ("defvar-local" code nil nil [286988 287058])
            ("org-block-map" function (:arguments ("function" "start" "end")) nil [287060 287565])
            ("org-hide-block-toggle-all" function nil nil [287567 287707])
            ("org-hide-block-all" function (:user-visible-flag t) nil [287709 287867])
            ("org-show-block-all" function (:user-visible-flag t) nil [287869 288046])
            ("org-hide-block-toggle-maybe" function (:user-visible-flag t) nil [288048 288312])
            ("org-hide-block-toggle" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [288314 290481])
            ("add-hook" code nil nil [290527 290647])
            ("org-goto-window-configuration" variable nil nil [290663 290705])
            ("org-goto-marker" variable nil nil [290706 290734])
            ("org-goto-map" variable nil nil [290735 290756])
            ("org-goto-map" function nil nil [290757 292331])
            ("org-goto-help" variable
               (:constant-flag t
                :default-value "Browse buffer copy, to find location or copy text.%s
RET=jump to location             C-g=quit and return to previous location
[Up]/[Down]=next/prev headline   TAB=cycle visibility   [/] org-occur")
                nil [292333 292559])
            ("org-goto-start-pos" variable nil nil [292561 292588])
            ("org-goto" function
               (:user-visible-flag t
                :arguments ("alternative-interface"))
                nil [292621 294404])
            ("org-goto-selected-point" variable nil nil [294406 294442])
            ("org-goto-exit-command" variable nil nil [294474 294508])
            ("org-goto-local-auto-isearch-map" variable nil nil [294540 294580])
            ("org-get-location" function (:arguments ("_buf" "help")) nil [294598 296246])
            ("org-goto-local-auto-isearch-map" variable (:default-value (make-sparse-keymap)) nil [296248 296309])
            ("set-keymap-parent" code nil nil [296310 296378])
            ("if" code nil nil [296438 296840])
            ("org-goto-local-search-headings" function (:arguments ("string" "bound" "noerror")) nil [296842 297356])
            ("org-goto-local-auto-isearch" function (:user-visible-flag t) nil [297358 297649])
            ("org-goto-ret" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [297651 297860])
            ("org-goto-left" function (:user-visible-flag t) nil [297862 298147])
            ("org-goto-right" function (:user-visible-flag t) nil [298149 298413])
            ("org-goto-quit" function (:user-visible-flag t) nil [298415 298594])
            ("org-indirect-dedicated-frame" variable nil nil [298637 298738])
            ("org-last-indirect-buffer" variable nil nil [298739 298776])
            ("org-tree-to-indirect-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [298778 301453])
            ("org-get-indirect-buffer" function (:arguments ("buffer" "heading")) nil [301455 301934])
            ("org-set-frame-title" function (:arguments ("title")) nil [301936 302102])
            ("org--line-empty-p" function (:arguments ("n")) nil [302153 302425])
            ("org-previous-line-empty-p" function nil nil [302427 302577])
            ("org-next-line-empty-p" function nil nil [302579 302725])
            ("org--blank-before-heading-p" function (:arguments ("parent")) nil [302727 303568])
            ("org-insert-heading" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok" "top"))
                nil [303570 307474])
            ("org-N-empty-lines-before-current" function (:arguments ("n")) nil [307476 307912])
            ("org-get-heading" function (:arguments ("no-tags" "no-todo" "no-priority" "no-comment")) nil [307914 308855])
            ("orgstruct-mode" variable nil nil [308857 308880])
            ("org-heading-components" function nil nil [308900 309889])
            ("org-get-entry" function nil nil [309891 310080])
            ("org-edit-headline" function
               (:user-visible-flag t
                :arguments ("heading"))
                nil [310082 310723])
            ("org-insert-heading-after-current" function (:user-visible-flag t) nil [310725 310951])
            ("org-insert-heading-respect-content" function
               (:user-visible-flag t
                :arguments ("invisible-ok"))
                nil [310953 311148])
            ("org-insert-todo-heading-respect-content" function
               (:user-visible-flag t
                :arguments ("force-state"))
                nil [311150 311358])
            ("org-insert-todo-heading" function
               (:user-visible-flag t
                :arguments ("arg" "force-heading"))
                nil [311360 312712])
            ("org-insert-subheading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [312714 312981])
            ("org-insert-todo-subheading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [312983 313290])
            ("org-after-demote-entry-hook" variable nil nil [313320 313528])
            ("org-after-promote-entry-hook" variable nil nil [313530 313741])
            ("org-promote-subtree" function (:user-visible-flag t) nil [313743 313957])
            ("org-demote-subtree" function (:user-visible-flag t) nil [313959 314182])
            ("org-do-promote" function (:user-visible-flag t) nil [314184 314531])
            ("org-do-demote" function (:user-visible-flag t) nil [314533 314876])
            ("org-fix-position-after-promote" function nil nil [314878 315299])
            ("org-current-level" function nil nil [315301 315702])
            ("org-get-previous-line-level" function nil nil [315704 316059])
            ("org-reduced-level" function (:arguments ("l")) nil [316061 316279])
            ("org-level-increment" function nil nil [316281 316495])
            ("org-get-valid-level" function (:arguments ("level" "change")) nil [316497 317119])
            ("org-promote" function nil nil [317121 317983])
            ("org-demote" function nil nil [317985 318602])
            ("org-cycle-level" function (:user-visible-flag t) nil [318604 320120])
            ("org-map-tree" function (:arguments ("fun")) nil [320122 320445])
            ("org-map-region" function (:arguments ("fun" "beg" "end")) nil [320447 320858])
            ("org-fixup-indentation" function (:arguments ("diff")) nil [320860 324857])
            ("org-convert-to-odd-levels" function (:user-visible-flag t) nil [324859 325436])
            ("org-convert-to-oddeven-levels" function (:user-visible-flag t) nil [325438 326427])
            ("org-tr-level" function (:arguments ("n")) nil [326429 326523])
            ("org-move-subtree-up" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [326584 326774])
            ("org-move-subtree-down" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [326776 329511])
            ("org-subtree-clip" variable nil nil [329513 329733])
            ("org-subtree-clip-folded" variable nil nil [329735 329861])
            ("org-cut-subtree" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [329863 330116])
            ("org-copy-subtree" function
               (:user-visible-flag t
                :arguments ("n" "cut" "force-store-markers" "nosubtrees"))
                nil [330118 331730])
            ("org-paste-subtree" function
               (:user-visible-flag t
                :arguments ("level" "tree" "for-yank" "remove"))
                nil [331732 335953])
            ("org-kill-is-subtree-p" function (:arguments ("txt")) nil [335955 336963])
            ("org-markers-to-move" variable nil nil [336965 337154])
            ("org-save-markers-in-region" function (:arguments ("beg" "end")) nil [337156 337799])
            ("org-check-and-save-marker" function (:arguments ("marker" "beg" "end")) nil [337801 338137])
            ("org-reinstall-markers-in-region" function (:arguments ("beg")) nil [338139 338361])
            ("org-narrow-to-subtree" function (:user-visible-flag t) nil [338363 338714])
            ("org-narrow-to-block" function (:user-visible-flag t) nil [338716 339014])
            ("org-clone-subtree-with-time-shift" function
               (:user-visible-flag t
                :arguments ("n" "shift"))
                nil [339016 343308])
            ("org-sort" function
               (:user-visible-flag t
                :arguments ("with-case"))
                nil [343331 343666])
            ("org-sort-remove-invisible" function (:arguments ("s")) nil [343668 344064])
            ("org-priority-regexp" variable nil nil [344066 344094])
            ("org-after-sorting-entries-or-items-hook" variable nil nil [344124 344443])
            ("org-sort-entries" function
               (:user-visible-flag t
                :arguments ("with-case" "sorting-type" "getkey-func" "compare-func" "property" "interactive?"))
                nil [344445 353106])
            ("orgstruct-heading-prefix-regexp" variable nil nil [354089 354299])
            ("orgstruct-setup-hook" variable nil nil [354384 354549])
            ("orgstruct-initialized" variable nil nil [354551 354585])
            ("org-local-vars" variable nil nil [354587 354672])
            ("define-minor-mode" code nil nil [354689 355287])
            ("turn-on-orgstruct" function nil nil [355304 355399])
            ("defvar-local" code nil nil [355401 355496])
            ("defvar-local" code nil nil [355497 355527])
            ("orgstruct++-mode" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [355528 356665])
            ("turn-on-orgstruct++" function nil nil [356682 356783])
            ("orgstruct-error" function (:user-visible-flag t) nil [356785 357021])
            ("orgstruct-setup" function nil nil [357023 359038])
            ("orgstruct-make-binding" function (:arguments ("fun" "key" "disable-when-heading-prefix")) nil [359040 361908])
            ("org-contextualize-keys" function (:arguments ("alist" "contexts")) nil [361910 363377])
            ("org-contextualize-validate-key" function (:arguments ("key" "contexts")) nil [363379 364293])
            ("org-context-p" function (:arguments ("contexts")) nil [364295 364840])
            ("org-run-like-in-org-mode" function (:arguments ("cmd")) nil [364857 365494])
            ("org-get-category" function (:arguments ("pos" "force-refresh")) nil [365496 365846])
            ("org-refresh-properties" function (:arguments ("dprop" "tprop")) nil [365872 366867])
            ("org-refresh-property" function (:arguments ("tprop" "p" "inherit")) nil [366869 367610])
            ("org-refresh-category-properties" function nil nil [367612 369096])
            ("org-refresh-stats-properties" function nil nil [369098 369769])
            ("org-refresh-effort-properties" function nil nil [369771 369965])
            ("org-link-expand-abbrev" function (:arguments ("link")) nil [370008 370811])
            ("org-insert-link-history" variable nil nil [370846 370948])
            ("org-stored-links" variable nil nil [370950 371032])
            ("org-store-link-plist" variable nil nil [371034 371147])
            ("org-store-link-functions" function nil nil [371149 372356])
            ("org-agenda-buffer-name" variable nil nil [372358 372389])
            ("org-id-link-to-org-use-id" variable nil nil [372417 372451])
            ("org-store-link" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [372491 381290])
            ("org-store-link-props" function (:arguments ("plist")) nil [381292 382501])
            ("org-add-link-props" function (:arguments ("plist")) nil [382503 382762])
            ("org-email-link-description" function (:arguments ("fmt")) nil [382764 383880])
            ("org-make-org-heading-search-string" function (:arguments ("string")) nil [383882 384675])
            ("org-link-escape-chars" variable
               (:constant-flag t
                :default-value (quote (32 91 93 37)))
                nil [384677 384878])
            ("org-make-link-string" function (:arguments ("link" "description")) nil [384880 385790])
            ("org-link-escape" function (:arguments ("text" "table" "merge")) nil [385792 386611])
            ("org-link-unescape" function (:arguments ("str")) nil [386613 386935])
            ("org-link-unescape-compound" function (:arguments ("hex")) nil [386937 388012])
            ("org-link-unescape-single-byte-sequence" function (:arguments ("hex")) nil [388014 388244])
            ("org-xor" function (:arguments ("a" "b")) nil [388246 388304])
            ("org-fixup-message-id-for-http" function (:arguments ("s")) nil [388306 388791])
            ("org-link-prettify" function (:arguments ("link")) nil [388793 389120])
            ("org-insert-link-global" function (:user-visible-flag t) nil [389137 389368])
            ("org-insert-all-links" function
               (:user-visible-flag t
                :arguments ("arg" "pre" "post"))
                nil [389370 390162])
            ("org-insert-last-stored-link" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [390164 390317])
            ("org-link-fontify-links-to-this-file" function nil nil [390319 391079])
            ("org--links-history" variable nil nil [391081 391112])
            ("org-insert-link" function
               (:user-visible-flag t
                :arguments ("complete-file" "link-location" "default-description"))
                nil [391113 399305])
            ("org-link-try-special-completion" function (:arguments ("type")) nil [399307 399585])
            ("org-file-complete-link" function (:arguments ("arg")) nil [399587 400276])
            ("org-completing-read" function (:arguments ("args")) nil [400278 400774])
            ("org-link-search-failed" variable nil nil [400806 400841])
            ("org-open-link-functions" variable nil nil [400843 401656])
            ("org-next-link" function
               (:user-visible-flag t
                :arguments ("search-backward"))
                nil [401658 402579])
            ("org-previous-link" function (:user-visible-flag t) nil [402581 402736])
            ("org-translate-link" function (:arguments ("s")) nil [402738 402953])
            ("org-translate-link-from-planner" function (:arguments ("type" "path")) nil [402955 403896])
            ("org-find-file-at-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [403898 404044])
            ("org-open-at-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [404046 404335])
            ("org-window-config-before-follow-link" variable nil nil [404337 404493])
            ("org-open-at-point-global" function (:user-visible-flag t) nil [404510 405114])
            ("org-open-link-from-string" function
               (:user-visible-flag t
                :arguments ("s" "arg" "reference-buffer"))
                nil [405131 405664])
            ("org-open-at-point-functions" variable nil nil [405666 405915])
            ("org-link-search-inhibit-query" variable nil nil [405917 405959])
            ("clean-buffer-list-kill-buffer-names" variable nil nil [405960 406004])
            ("org--open-doi-link" function (:arguments ("path")) nil [406029 406204])
            ("org--open-elisp-link" function (:arguments ("path")) nil [406206 406809])
            ("org--open-help-link" function (:arguments ("path")) nil [406811 407129])
            ("org--open-shell-link" function (:arguments ("path")) nil [407131 407887])
            ("org-open-at-point" function
               (:user-visible-flag t
                :arguments ("arg" "reference-buffer"))
                nil [407889 414555])
            ("org-offer-links-in-entry" function (:arguments ("buffer" "marker" "nth" "zero")) nil [414557 416714])
            ("org-open-file-with-system" function (:arguments ("path")) nil [416844 416973])
            ("org-open-file-with-emacs" function (:arguments ("path")) nil [416974 417075])
            ("org-create-file-search-functions" variable nil nil [417095 418182])
            ("org-execute-file-search-functions" variable nil nil [418184 419236])
            ("org-search-radio-target" function (:arguments ("target")) nil [419238 419939])
            ("org-link-search" function (:arguments ("s" "avoid-pos" "stealth")) nil [419941 426451])
            ("org-get-buffer-for-internal-link" function (:arguments ("buffer")) nil [426453 427103])
            ("org-do-occur" function (:arguments ("regexp" "cleanup")) nil [427105 427828])
            ("org-mark-ring" variable nil nil [427865 427945])
            ("org-mark-ring-last-goto" variable nil nil [427946 428034])
            ("setq" code nil nil [428062 428114])
            ("dotimes" code nil nil [428143 428214])
            ("setcdr" code nil nil [428215 428287])
            ("org-mark-ring-push" function
               (:user-visible-flag t
                :arguments ("pos" "buffer"))
                nil [428289 428748])
            ("org-mark-ring-goto" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [428750 429493])
            ("org-add-angle-brackets" function (:arguments ("s")) nil [429495 429662])
            ("org-agenda-buffer-tmp-name" variable nil nil [429694 429729])
            ("org-agenda-start-on-weekday" variable nil nil [429730 429766])
            ("org-follow-timestamp-link" function nil nil [429767 430602])
            ("declare-function" code nil nil [430630 430704])
            ("declare-function" code nil nil [430705 430766])
            ("declare-function" code nil nil [430767 430854])
            ("org-wait" variable nil nil [430855 430876])
            ("org-open-file" function (:arguments ("path" "in-emacs" "line" "search")) nil [430877 437081])
            ("org-file-apps-entry-match-against-dlink-p" function (:arguments ("entry")) nil [437083 437747])
            ("org-default-apps" function nil nil [437749 438017])
            ("org-apps-regexp-alist" function (:arguments ("list" "add-auto-mode")) nil [438019 438674])
            ("ange-ftp-name-format" variable nil nil [438676 438705])
            ("org-file-remote-p" function (:arguments ("file")) nil [438706 439225])
            ("org-get-org-file" function nil nil [439243 439514])
            ("org-notes-order-reversed-p" function nil nil [439516 439914])
            ("org-refile-target-table" variable nil nil [439916 440009])
            ("org-agenda-new-buffers" variable nil nil [440011 440089])
            ("org-refile-cache" variable nil nil [440091 440150])
            ("org-refile-markers" variable nil nil [440152 440238])
            ("org-refile-marker" function (:arguments ("pos")) nil [440240 440473])
            ("org-refile-cache-clear" function nil nil [440475 440724])
            ("org-refile-cache-check-set" function (:arguments ("set")) nil [440726 441153])
            ("org-refile-cache-put" function (:arguments ("set" "identifiers")) nil [441155 441447])
            ("org-refile-cache-get" function (:arguments ("identifiers")) nil [441449 441822])
            ("org-outline-path-cache" variable nil nil [441824 442111])
            ("org-refile-get-targets" function (:arguments ("default-buffer")) nil [442113 445819])
            ("org--get-outline-path-1" function (:arguments ("use-cache")) nil [445821 447011])
            ("org-get-outline-path" function (:arguments ("with-self" "use-cache")) nil [447013 447976])
            ("org-format-outline-path" function (:arguments ("path" "width" "prefix" "separator")) nil [447978 449107])
            ("org-display-outline-path" function
               (:user-visible-flag t
                :arguments ("file" "current" "separator" "just-return-string"))
                nil [449109 450187])
            ("org-refile-history" variable nil nil [450189 450257])
            ("org-after-refile-insert-hook" variable nil nil [450259 450460])
            ("org-capture-last-stored-marker" variable nil nil [450462 450501])
            ("org-refile-keep" variable nil nil [450502 450590])
            ("org-copy" function (:user-visible-flag t) nil [450592 450735])
            ("org-refile" function
               (:user-visible-flag t
                :arguments ("arg" "default-buffer" "rfloc" "msg"))
                nil [450737 457223])
            ("org-refile-goto-last-stored" function (:user-visible-flag t) nil [457225 457458])
            ("org-refile--get-location" function (:arguments ("refloc" "tbl")) nil [457460 457826])
            ("org-refile-get-location" function (:arguments ("prompt" "default-buffer" "new-nodes")) nil [457828 460520])
            ("declare-function" code nil nil [460522 460571])
            ("org-refile-check-position" function (:arguments ("refile-pointer")) nil [460572 461320])
            ("org-refile-new-child" function (:arguments ("parent-target" "child")) nil [461322 462147])
            ("org-olpath-completing-read" function (:arguments ("prompt" "collection" "args")) nil [462149 462872])
            ("org-find-dblock" function (:arguments ("name")) nil [462895 463314])
            ("org-create-dblock" function (:arguments ("plist")) nil [463316 463906])
            ("org-prepare-dblock" function nil nil [463908 464846])
            ("org-map-dblocks" function (:arguments ("command")) nil [464848 465445])
            ("org-dblock-update" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [465447 465783])
            ("org-update-dblock" function (:user-visible-flag t) nil [465785 466818])
            ("org-beginning-of-dblock" function nil nil [466820 467254])
            ("org-update-all-dblocks" function (:user-visible-flag t) nil [467256 467464])
            ("declare-function" code nil nil [467484 467543])
            ("org-get-export-keywords" function nil nil [467544 468139])
            ("org-options-keywords" variable
               (:constant-flag t
                :default-value (quote ("ARCHIVE:" "AUTHOR:" "BIND:" "CATEGORY:" "COLUMNS:" "CREATOR:" "DATE:" "DESCRIPTION:" "DRAWERS:" "EMAIL:" "EXCLUDE_TAGS:" "FILETAGS:" "INCLUDE:" "INDEX:" "KEYWORDS:" "LANGUAGE:" "MACRO:" "OPTIONS:" "PROPERTY:" "PRIORITIES:" "SELECT_TAGS:" "SEQ_TODO:" "SETUPFILE:" "STARTUP:" "TAGS:" "TITLE:" "TODO:" "TYP_TODO:" "SELECT_TAGS:" "EXCLUDE_TAGS:")))
                nil [468141 468536])
            ("org-structure-template-alist" variable (:default-value (quote (("s" "#+BEGIN_SRC ?

#+END_SRC") ("e" "#+BEGIN_EXAMPLE
?
#+END_EXAMPLE") ("q" "#+BEGIN_QUOTE
?
#+END_QUOTE") ("v" "#+BEGIN_VERSE
?
#+END_VERSE") ("V" "#+BEGIN_VERBATIM
?
#+END_VERBATIM") ("c" "#+BEGIN_CENTER
?
#+END_CENTER") ("C" "#+BEGIN_COMMENT
?
#+END_COMMENT") ("l" "#+BEGIN_EXPORT latex
?
#+END_EXPORT") ("L" "#+LaTeX: ") ("h" "#+BEGIN_EXPORT html
?
#+END_EXPORT") ("H" "#+HTML: ") ("a" "#+BEGIN_EXPORT ascii
?
#+END_EXPORT") ("A" "#+ASCII: ") ("i" "#+INDEX: ?") ("I" "#+INCLUDE: %file ?")))) nil [468538 469937])
            ("org-try-structure-completion" function nil nil [469939 470443])
            ("org-complete-expand-structure-template" function (:arguments ("start" "cell")) nil [470445 471223])
            ("org-toggle-comment" function (:user-visible-flag t) nil [471256 471872])
            ("org-last-todo-state-is-todo" variable nil nil [471874 472066])
            ("org-setting-tags" variable nil nil [472068 472097])
            ("org-todo-setup-filter-hook" variable nil nil [472121 472312])
            ("org-todo-get-default-hook" variable nil nil [472314 472525])
            ("org-agenda-headline-snapshot-before-repeat" variable nil nil [472527 472578])
            ("org-current-effective-time" function nil nil [472580 473029])
            ("org-todo-yesterday" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [473031 473401])
            ("org-block-entry-blocking" variable nil nil [473403 473489])
            ("org-cancel-repeater" function (:user-visible-flag t) nil [473491 474028])
            ("org-state" variable nil nil [474030 474048])
            ("org-blocked-by-checkboxes" variable nil nil [474049 474083])
            ("org-todo" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [474084 484140])
            ("org-block-todo-from-children-or-siblings-or-parent" function (:arguments ("change-plist")) nil [484142 487092])
            ("org-track-ordered-property-with-tag" variable nil nil [487127 487968])
            ("org-toggle-ordered-property" function (:user-visible-flag t) nil [487970 488670])
            ("org-block-todo-from-checkboxes" function (:arguments ("change-plist")) nil [488672 489926])
            ("org-entry-blocked-p" function nil nil [489943 490292])
            ("org-update-statistics-cookies" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [490294 491718])
            ("org-entry-property-inherited-from" variable nil nil [491720 491762])
            ("org-update-parent-todo-statistics" function nil nil [491780 495537])
            ("org-after-todo-statistics-hook" variable nil nil [495539 496270])
            ("org-todo-statistics-hook" variable nil nil [496272 496509])
            ("org-todo-trigger-tag-changes" function (:arguments ("state")) nil [496511 497176])
            ("org-local-logging" function (:arguments ("value")) nil [497178 497761])
            ("org-get-todo-sequence-head" function (:arguments ("kwd")) nil [497763 498331])
            ("org-fast-todo-selection" function nil nil [498333 500371])
            ("org-entry-is-todo-p" function nil nil [500373 500457])
            ("org-entry-is-done-p" function nil nil [500459 500539])
            ("org-get-todo-state" function nil nil [500541 500779])
            ("org-at-date-range-p" function
               (:user-visible-flag t
                :arguments ("inactive-ok"))
                nil [500781 501559])
            ("org-get-repeat" function (:arguments ("timestamp")) nil [501561 502332])
            ("org-last-changed-timestamp" variable nil nil [502334 502369])
            ("org-last-inserted-timestamp" variable nil nil [502370 502406])
            ("org-log-post-message" variable nil nil [502407 502436])
            ("org-log-note-purpose" variable nil nil [502437 502466])
            ("org-log-note-how" variable nil nil [502467 502496])
            ("org-log-note-extra" variable nil nil [502497 502524])
            ("org-auto-repeat-maybe" function (:arguments ("done-word")) nil [502525 507236])
            ("org-show-todo-tree" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [507238 508253])
            ("org--deadline-or-schedule" function (:arguments ("arg" "type" "time")) nil [508255 511211])
            ("org-deadline" function
               (:user-visible-flag t
                :arguments ("arg" "time"))
                nil [511213 512028])
            ("org-schedule" function
               (:user-visible-flag t
                :arguments ("arg" "time"))
                nil [512030 512848])
            ("org-get-scheduled-time" function (:arguments ("pom" "inherit")) nil [512850 513172])
            ("org-get-deadline-time" function (:arguments ("pom" "inherit")) nil [513174 513488])
            ("org-remove-timestamp-with-keyword" function (:arguments ("keyword")) nil [513490 514157])
            ("org-time-was-given" variable nil nil [514159 514186])
            ("org-end-time-was-given" variable nil nil [514218 514249])
            ("org-at-planning-p" function nil nil [514282 514799])
            ("org-add-planning-info" function (:arguments ("what" "time" "remove")) nil [514801 518384])
            ("org-log-note-marker" variable (:default-value (make-marker)) nil [518386 518495])
            ("org-log-note-purpose" variable nil nil [518496 518529])
            ("org-log-note-state" variable nil nil [518530 518561])
            ("org-log-note-previous-state" variable nil nil [518562 518602])
            ("org-log-note-extra" variable nil nil [518603 518634])
            ("org-log-note-window-configuration" variable nil nil [518635 518681])
            ("org-log-note-return-to" variable (:default-value (make-marker)) nil [518682 518727])
            ("org-log-note-effective-time" variable nil nil [518728 518887])
            ("org-log-post-message" variable nil nil [518889 519013])
            ("org-add-note" function (:user-visible-flag t) nil [519015 519179])
            ("org-log-beginning" function (:arguments ("create")) nil [519181 520672])
            ("org-add-log-setup" function (:arguments ("purpose" "state" "prev-state" "how" "extra")) nil [520674 521309])
            ("org-skip-over-state-notes" function nil nil [521311 522082])
            ("org-add-log-note" function (:arguments ("_purpose")) nil [522084 523714])
            ("org-note-abort" variable nil nil [523716 523743])
            ("org-store-log-note" function nil nil [523765 527477])
            ("org-remove-empty-drawer-at" function (:arguments ("pos")) nil [527479 528095])
            ("org-ts-type" variable nil nil [528097 528121])
            ("org-sparse-tree" function
               (:user-visible-flag t
                :arguments ("arg" "type"))
                nil [528122 530496])
            ("defvar-local" code nil nil [530498 530582])
            ("defvar-local" code nil nil [530583 531142])
            ("org-occur" function
               (:user-visible-flag t
                :arguments ("regexp" "keep-previous" "callback"))
                nil [531144 533103])
            ("org-occur-next-match" function (:arguments ("n" "_reset")) nil [533105 533943])
            ("org-show-context" function (:arguments ("key")) nil [533945 534354])
            ("org-show-set-visibility" function (:arguments ("detail")) nil [534356 535644])
            ("org-reveal-start-hook" variable nil nil [535646 535722])
            ("org-reveal" function
               (:user-visible-flag t
                :arguments ("siblings"))
                nil [535724 536569])
            ("org-highlight-new-match" function (:arguments ("beg" "end")) nil [536571 536850])
            ("org-remove-occur-highlights" function
               (:user-visible-flag t
                :arguments ("_beg" "_end" "noremove"))
                nil [536852 537378])
            ("org-priority-regexp" variable (:default-value ".*?\\(\\[#\\([A-Z0-9]\\)\\] ?\\)") nil [537397 537516])
            ("org-remove-priority-next-time" variable nil nil [537518 537560])
            ("org-priority-up" function (:user-visible-flag t) nil [537562 537672])
            ("org-priority-down" function (:user-visible-flag t) nil [537674 537788])
            ("org-priority" function
               (:user-visible-flag t
                :arguments ("action" "_show"))
                nil [537790 540745])
            ("org-show-priority" function (:user-visible-flag t) nil [540747 541268])
            ("org-get-priority" function (:arguments ("s")) nil [541270 541634])
            ("org-agenda-archives-mode" variable nil nil [541647 541680])
            ("org-map-continue-from" variable nil nil [541681 541840])
            ("org-scanner-tags" variable nil nil [541842 541931])
            ("org-trust-scanner-tags" variable nil nil [541933 542511])
            ("org--matcher-tags-todo-only" variable nil nil [542513 542553])
            ("org-scan-tags" function (:arguments ("action" "matcher" "todo-only" "start-level")) nil [542555 548699])
            ("org-remove-uninherited-tags" function (:arguments ("tags")) nil [548701 549366])
            ("org-match-sparse-tree" function
               (:user-visible-flag t
                :arguments ("todo-only" "match"))
                nil [549368 550023])
            ("defalias" code nil nil [550025 550080])
            ("org-cached-props" variable nil nil [550082 550111])
            ("org-cached-entry-get" function (:arguments ("pom" "property")) nil [550112 550756])
            ("org-global-tags-completion-table" function (:arguments ("files")) nil [550758 551363])
            ("org-make-tags-matcher" function (:arguments ("match")) nil [551365 557063])
            ("org-tags-expand" function (:arguments ("match" "single-as-list" "downcased" "tags-already-expanded")) nil [557065 562083])
            ("org-op-to-function" function (:arguments ("op" "stringp")) nil [562085 562629])
            ("org<>" function (:arguments ("a" "b")) nil [562631 562664])
            ("org-string<=" function (:arguments ("a" "b")) nil [562665 562724])
            ("org-string>=" function (:arguments ("a" "b")) nil [562725 562771])
            ("org-string>" function (:arguments ("a" "b")) nil [562772 562844])
            ("org-string<>" function (:arguments ("a" "b")) nil [562845 562891])
            ("org-time=" function (:arguments ("a" "b")) nil [562892 562985])
            ("org-time<" function (:arguments ("a" "b")) nil [562986 563079])
            ("org-time<=" function (:arguments ("a" "b")) nil [563080 563173])
            ("org-time>" function (:arguments ("a" "b")) nil [563174 563267])
            ("org-time>=" function (:arguments ("a" "b")) nil [563268 563361])
            ("org-time<>" function (:arguments ("a" "b")) nil [563362 563455])
            ("org-2ft" function (:arguments ("s")) nil [563456 563821])
            ("org-time-today" function nil nil [563823 564073])
            ("org-matcher-time" function (:arguments ("s")) nil [564075 564658])
            ("org-match-any-p" function (:arguments ("re" "list")) nil [564660 564811])
            ("org-add-colon-after-tag-completion" variable nil nil [564813 564860])
            ("org-tags-overlay" variable (:default-value (make-overlay 1 1)) nil [564890 564934])
            ("delete-overlay" code nil nil [564935 564968])
            ("org-get-local-tags-at" function (:arguments ("pos")) nil [564970 565102])
            ("org-get-local-tags" function nil nil [565104 565220])
            ("org-get-tags-at" function
               (:user-visible-flag t
                :arguments ("pos" "local"))
                nil [565222 566703])
            ("org-add-prop-inherited" function (:arguments ("s")) nil [566705 566797])
            ("org-toggle-tag" function (:arguments ("tag" "onoff")) nil [566799 567807])
            ("org--align-tags-here" function (:arguments ("to-col")) nil [567809 568513])
            ("org-set-tags-command" function
               (:user-visible-flag t
                :arguments ("arg" "just-align"))
                nil [568515 568920])
            ("org-set-tags-to" function
               (:user-visible-flag t
                :arguments ("data"))
                nil [568922 569873])
            ("org-align-all-tags" function (:user-visible-flag t) nil [569875 570124])
            ("org-indent-indentation-per-level" variable nil nil [570126 570167])
            ("org-set-tags" function
               (:user-visible-flag t
                :arguments ("arg" "just-align"))
                nil [570168 574167])
            ("org-change-tag-in-region" function
               (:user-visible-flag t
                :arguments ("beg" "end" "tag" "off"))
                nil [574169 575702])
            ("org-tags-completion-function" function (:arguments ("string" "_predicate" "flag")) nil [575704 576519])
            ("org-fast-tag-insert" function (:arguments ("kwd" "tags" "face" "end")) nil [576521 576777])
            ("org-fast-tag-show-exit" function (:arguments ("flag")) nil [576779 577120])
            ("org-set-current-tags-overlay" function (:arguments ("current" "prefix")) nil [577122 577424])
            ("org-last-tag-selection-key" variable nil nil [577426 577465])
            ("org-fast-tag-selection" function (:arguments ("current" "inherited" "table" "todo-table")) nil [577466 584535])
            ("org-get-tags-string" function nil nil [584537 584834])
            ("org-get-tags" function nil nil [584836 584966])
            ("org-get-buffer-tags" function nil nil [584968 585433])
            ("org-agenda-skip-comment-trees" variable nil nil [585457 585495])
            ("org-agenda-skip-function" variable nil nil [585496 585529])
            ("org-map-entries" function (:arguments ("func" "match" "scope" "skip")) nil [585530 591024])
            ("org-special-properties" variable
               (:constant-flag t
                :default-value (quote ("ALLTAGS" "BLOCKED" "CLOCKSUM" "CLOCKSUM_T" "CLOSED" "DEADLINE" "FILE" "ITEM" "PRIORITY" "SCHEDULED" "TAGS" "TIMESTAMP" "TIMESTAMP_IA" "TODO")))
                nil [591046 591365])
            ("org-default-properties" variable
               (:constant-flag t
                :default-value (quote ("ARCHIVE" "CATEGORY" "SUMMARY" "DESCRIPTION" "CUSTOM_ID" "LOCATION" "LOGGING" "COLUMNS" "VISIBILITY" "TABLE_EXPORT_FORMAT" "TABLE_EXPORT_FILE" "EXPORT_OPTIONS" "EXPORT_TEXT" "EXPORT_FILE_NAME" "EXPORT_TITLE" "EXPORT_AUTHOR" "EXPORT_DATE" "UNNUMBERED" "ORDERED" "NOBLOCKING" "COOKIE_DATA" "LOG_INTO_DRAWER" "REPEAT_TO_STATE" "CLOCK_MODELINE_TOTAL" "STYLE" "HTML_CONTAINER_CLASS")))
                nil [591367 591943])
            ("org--valid-property-p" function (:arguments ("property")) nil [591945 592120])
            ("org--update-property-plist" function (:arguments ("key" "val" "props")) nil [592122 592534])
            ("org-get-property-block" function (:arguments ("beg" "force")) nil [592536 593598])
            ("org-at-property-p" function nil nil [593600 593985])
            ("org-property-action" function (:user-visible-flag t) nil [593987 594489])
            ("org-inc-effort" function (:user-visible-flag t) nil [594491 594626])
            ("org-clock-effort" variable nil nil [594628 594653])
            ("org-clock-current-task" variable nil nil [594687 594718])
            ("org-set-effort" function
               (:user-visible-flag t
                :arguments ("value" "increment"))
                nil [594746 596606])
            ("org-entry-properties" function (:arguments ("pom" "which")) nil [596608 604593])
            ("org--property-local-values" function (:arguments ("property" "literal-nil")) nil [604595 605575])
            ("org--property-global-value" function (:arguments ("property" "literal-nil")) nil [605577 606072])
            ("org-entry-get" function (:arguments ("pom" "property" "inherit" "literal-nil")) nil [606074 607556])
            ("org-property-or-variable-value" function (:arguments ("var" "inherit")) nil [607558 607919])
            ("org-entry-delete" function (:arguments ("pom" "property")) nil [607921 608720])
            ("org-entry-add-to-multivalued-property" function (:arguments ("pom" "property" "value")) nil [608866 609296])
            ("org-entry-remove-from-multivalued-property" function (:arguments ("pom" "property" "value")) nil [609298 609725])
            ("org-entry-member-in-multivalued-property" function (:arguments ("pom" "property" "value")) nil [609727 610036])
            ("org-entry-get-multivalued-property" function (:arguments ("pom" "property")) nil [610038 610288])
            ("org-entry-put-multivalued-property" function (:arguments ("pom" "property" "values")) nil [610290 610704])
            ("org-entry-protect-space" function (:arguments ("s")) nil [610706 610934])
            ("org-entry-restore-space" function (:arguments ("s")) nil [610936 611164])
            ("org-entry-property-inherited-from" variable (:default-value (make-marker)) nil [611166 611561])
            ("org-entry-get-with-inheritance" function (:arguments ("property" "literal-nil")) nil [611563 612754])
            ("org-property-changed-functions" variable nil nil [612756 612949])
            ("org-entry-put" function (:arguments ("pom" "property" "value")) nil [612951 616006])
            ("org-buffer-property-keys" function (:arguments ("specials" "defaults" "columns" "ignore-malformed")) nil [616008 618783])
            ("org-property-values" function (:arguments ("key")) nil [618785 619120])
            ("org-insert-property-drawer" function nil nil [619122 619909])
            ("org-insert-drawer" function
               (:user-visible-flag t
                :arguments ("arg" "drawer"))
                nil [619911 621965])
            ("org-property-set-functions-alist" variable nil nil [621967 622202])
            ("org-set-property-function" function (:arguments ("property")) nil [622204 622462])
            ("org-read-property-value" function (:arguments ("property")) nil [622464 623124])
            ("org-last-set-property" variable nil nil [623126 623160])
            ("org-last-set-property-value" variable nil nil [623161 623201])
            ("org-read-property-name" function nil nil [623202 623623])
            ("org-set-property-and-value" function
               (:user-visible-flag t
                :arguments ("use-last"))
                nil [623625 624254])
            ("org-set-property" function
               (:user-visible-flag t
                :arguments ("property" "value"))
                nil [624256 625545])
            ("org-find-property" function (:arguments ("property" "value")) nil [625547 626319])
            ("org-delete-property" function
               (:user-visible-flag t
                :arguments ("property"))
                nil [626321 626914])
            ("org-delete-property-globally" function
               (:user-visible-flag t
                :arguments ("property"))
                nil [626916 627552])
            ("org-columns-current-fmt-compiled" variable nil nil [627554 627595])
            ("org-compute-property-at-point" function (:user-visible-flag t) nil [627625 628175])
            ("org-property-allowed-value-functions" variable nil nil [628177 628637])
            ("org-property-get-allowed-values" function (:arguments ("pom" "property" "table")) nil [628639 629861])
            ("org-property-previous-allowed-value" function
               (:user-visible-flag t
                :arguments ("_previous"))
                nil [629863 630038])
            ("org-property-next-allowed-value" function
               (:user-visible-flag t
                :arguments ("previous"))
                nil [630040 631443])
            ("org-find-olp" function (:arguments ("path" "this-buffer")) nil [631445 633079])
            ("org-find-exact-headline-in-buffer" function (:arguments ("heading" "buffer" "pos-only")) nil [633081 633796])
            ("org-find-exact-heading-in-directory" function (:arguments ("heading" "dir")) nil [633798 634507])
            ("org-find-entry-with-id" function
               (:user-visible-flag t
                :arguments ("ident"))
                nil [634509 635103])
            ("org-last-changed-timestamp" variable nil nil [635122 635161])
            ("org-last-inserted-timestamp" variable nil nil [635162 635265])
            ("org-time-stamp" function
               (:user-visible-flag t
                :arguments ("arg" "inactive"))
                nil [635267 637927])
            ("org-get-compact-tod" function (:arguments ("s")) nil [638008 638642])
            ("org-time-stamp-inactive" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [638644 639378])
            ("org-date-ovl" variable (:default-value (make-overlay 1 1)) nil [639380 639420])
            ("overlay-put" code nil nil [639421 639472])
            ("delete-overlay" code nil nil [639473 639502])
            ("org-ans1" variable nil nil [639504 639521])
            ("org-ans2" variable nil nil [639553 639570])
            ("org-plain-time-of-day-regexp" variable nil nil [639603 639640])
            ("org-overriding-default-time" variable nil nil [639658 639698])
            ("org-read-date-overlay" variable nil nil [639720 639754])
            ("org-dcst" variable nil nil [639755 639776])
            ("org-read-date-history" variable nil nil [639798 639832])
            ("org-read-date-final-answer" variable nil nil [639833 639872])
            ("org-read-date-analyze-futurep" variable nil nil [639873 639915])
            ("org-read-date-analyze-forced-year" variable nil nil [639916 639962])
            ("org-read-date-inactive" variable nil nil [639963 639994])
            ("org-read-date-minibuffer-local-map" variable (:default-value (let* ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (org-defkey map (kbd ".") (lambda nil (interactive) (if (looking-back "^[^:]+: " (let ((inhibit-field-text-motion t)) (line-beginning-position))) (org-eval-in-calendar (quote (calendar-goto-today))) (insert ".")))) (org-defkey map (kbd "C-.") (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-goto-today))))) (org-defkey map [(meta shift left)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-month 1))))) (org-defkey map [(meta shift right)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-month 1))))) (org-defkey map [(meta shift up)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-year 1))))) (org-defkey map [(meta shift down)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-year 1))))) (org-defkey map [27 (shift left)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-month 1))))) (org-defkey map [27 (shift right)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-month 1))))) (org-defkey map [27 (shift up)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-year 1))))) (org-defkey map [27 (shift down)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-year 1))))) (org-defkey map [(shift up)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-week 1))))) (org-defkey map [(shift down)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-week 1))))) (org-defkey map [(shift left)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-day 1))))) (org-defkey map [(shift right)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-day 1))))) (org-defkey map "!" (lambda nil (interactive) (org-eval-in-calendar (quote (diary-view-entries))) (message ""))) (org-defkey map ">" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-left 1))))) (org-defkey map "<" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-right 1))))) (org-defkey map "" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-left-three-months 1))))) (org-defkey map "\366" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-right-three-months 1))))) map)) nil [639996 643193])
            ("org-def" variable nil nil [643195 643211])
            ("org-defdecode" variable nil nil [643212 643234])
            ("org-with-time" variable nil nil [643235 643257])
            ("calendar-setup" variable nil nil [643259 643282])
            ("org-read-date" function (:arguments ("with-time" "to-time" "from-string" "prompt" "default-time" "default-input" "inactive")) nil [643307 649940])
            ("org-read-date-display" function nil nil [649942 651408])
            ("org-read-date-analyze" function (:arguments ("ans" "def" "defdecode")) nil [651410 660513])
            ("parse-time-weekdays" variable nil nil [660515 660543])
            ("org-read-date-get-relative" function (:arguments ("s" "today" "default")) nil [660544 662084])
            ("org-order-calendar-date-args" function (:arguments ("arg1" "arg2" "arg3")) nil [662086 662551])
            ("org-eval-in-calendar" function (:arguments ("form" "keepdate")) nil [662553 663235])
            ("org-calendar-select" function (:user-visible-flag t) nil [663237 663692])
            ("org-insert-time-stamp" function (:arguments ("time" "with-hm" "inactive" "pre" "post" "extra")) nil [663694 664929])
            ("org-toggle-time-stamp-overlays" function (:user-visible-flag t) nil [664931 665685])
            ("org-display-custom-time" function (:arguments ("beg" "end")) nil [665687 666456])
            ("org-fix-decoded-time" function (:arguments ("time")) nil [666458 666659])
            ("org-time-stamp-to-now" function (:arguments ("timestamp-string" "seconds")) nil [666661 667005])
            ("org-deadline-close-p" function (:arguments ("timestamp-string" "ndays")) nil [667007 667287])
            ("org-get-wdays" function (:arguments ("ts" "delay" "zero-delay")) nil [667289 668237])
            ("org-calendar-select-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [668239 668729])
            ("org-check-deadlines" function
               (:user-visible-flag t
                :arguments ("ndays"))
                nil [668731 669594])
            ("org-re-timestamp" function (:arguments ("type")) nil [669596 670392])
            ("org-check-before-date" function
               (:user-visible-flag t
                :arguments ("d"))
                nil [670394 671087])
            ("org-check-after-date" function
               (:user-visible-flag t
                :arguments ("d"))
                nil [671089 671781])
            ("org-check-dates-range" function
               (:user-visible-flag t
                :arguments ("start-date" "end-date"))
                nil [671783 672688])
            ("org-evaluate-time-range" function
               (:user-visible-flag t
                :arguments ("to-buffer"))
                nil [672690 674988])
            ("org-make-tdiff-string" function (:arguments ("y" "d" "h" "m")) nil [674990 675496])
            ("org-time-string-to-time" function (:arguments ("s")) nil [675498 675634])
            ("org-time-string-to-seconds" function (:arguments ("s")) nil [675636 675776])
            ("org-define-error" code nil nil [675778 675850])
            ("org-time-string-to-absolute" function (:arguments ("s" "daynr" "prefer" "buffer" "pos")) nil [675852 677104])
            ("org-days-to-iso-week" function (:arguments ("days")) nil [677106 677236])
            ("org-small-year-to-year" function (:arguments ("year")) nil [677238 677772])
            ("org-time-from-absolute" function (:arguments ("d")) nil [677774 678045])
            ("org-agenda-current-date" variable nil nil [678047 678079])
            ("org-calendar-holiday" function nil nil [678080 678295])
            ("org-diary-sexp-entry" function (:arguments ("sexp" "entry" "d")) nil [678297 679073])
            ("org-diary-to-ical-string" function (:arguments ("frombuf")) nil [679075 679865])
            ("org-closest-date" function (:arguments ("start" "current" "prefer")) nil [679867 683213])
            ("org-date-to-gregorian" function (:arguments ("d")) nil [683215 683570])
            ("org-parse-time-string" function (:arguments ("s" "nodefault")) nil [683572 684631])
            ("org-timestamp-up" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [684633 684955])
            ("org-timestamp-down" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [684957 685285])
            ("org-timestamp-up-day" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [685287 685599])
            ("org-timestamp-down-day" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [685601 685921])
            ("org-at-timestamp-p" function (:arguments ("extended")) nil [685923 688432])
            ("org-toggle-timestamp-type" function (:user-visible-flag t) nil [688434 688954])
            ("org-at-clock-log-p" function nil nil [688956 689152])
            ("org-clock-history" variable nil nil [689154 689180])
            ("org-clock-adjust-closest" variable nil nil [689227 689264])
            ("org-timestamp-change" function (:arguments ("n" "what" "updown" "suppress-tmp-delay")) nil [689300 695368])
            ("org-modify-ts-extra" function (:arguments ("s" "pos" "n" "dm")) nil [695370 696892])
            ("org-recenter-calendar" function (:arguments ("d")) nil [696894 697200])
            ("org-goto-calendar" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [697202 697891])
            ("org-get-date-from-calendar" function nil nil [697893 698086])
            ("org-date-from-calendar" function (:user-visible-flag t) nil [698088 698510])
            ("org-effort-durations" variable (:default-value (\` (("min" . 1) ("h" . 60) ("d" \, (* 60 8)) ("w" \, (* 60 8 5)) ("m" \, (* 60 8 5 4)) ("y" \, (* 60 8 5 40))))) nil [698512 699205])
            ("org-image-actual-width" variable (:default-value t) nil [699207 700115])
            ("org-agenda-inhibit-startup" variable nil nil [700117 700424])
            ("org-agenda-ignore-properties" variable nil nil [700426 701037])
            ("org-save-all-org-buffers" function (:user-visible-flag t) nil [701051 701354])
            ("org-revert-all-org-buffers" function (:user-visible-flag t) nil [701356 702342])
            ("org-switchb" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [702378 702894])
            ("org-buffer-list" function (:arguments ("predicate" "exclude-tmp")) nil [702896 704130])
            ("org-agenda-files" function (:arguments ("unrestricted" "archives")) nil [704132 705260])
            ("org-agenda-file-p" function (:arguments ("file")) nil [705262 705586])
            ("org-edit-agenda-file-list" function (:user-visible-flag t) nil [705588 706510])
            ("org-store-new-agenda-file-list" function (:arguments ("list")) nil [706512 707173])
            ("org-read-agenda-file-list" function (:arguments ("pair-with-expansion")) nil [707175 707893])
            ("org-cycle-agenda-files" function (:user-visible-flag t) nil [707910 708541])
            ("org-agenda-file-to-front" function
               (:user-visible-flag t
                :arguments ("to-end"))
                nil [708543 709567])
            ("org-remove-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [709569 710469])
            ("org-file-menu-entry" function (:arguments ("file")) nil [710471 710546])
            ("org-check-agenda-file" function (:arguments ("file")) nil [710548 710945])
            ("org-get-agenda-file-buffer" function (:arguments ("file")) nil [710947 711359])
            ("org-release-buffers" function (:arguments ("blist")) nil [711361 711832])
            ("org-agenda-prepare-buffers" function
               (:user-visible-flag t
                :arguments ("files"))
                nil [711834 714592])
            ("org-cdlatex-mode-map" variable (:default-value (make-sparse-keymap)) nil [714621 714716])
            ("org-defkey" code nil nil [714718 714785])
            ("org-defkey" code nil nil [714786 714853])
            ("org-defkey" code nil nil [714854 714912])
            ("org-defkey" code nil nil [714913 714975])
            ("org-defkey" code nil nil [714976 715049])
            ("org-cdlatex-texmathp-advice-is-done" variable nil nil [715051 715171])
            ("define-minor-mode" code nil nil [715173 716379])
            ("turn-on-org-cdlatex" function nil nil [716381 716482])
            ("org-try-cdlatex-tab" function nil nil [716484 717276])
            ("org-cdlatex-underscore-caret" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [717278 717654])
            ("org-cdlatex-math-modify" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [717656 718019])
            ("org-cdlatex-environment-indent" function
               (:user-visible-flag t
                :arguments ("environment" "item"))
                nil [718021 720039])
            ("org-inside-LaTeX-fragment-p" function nil nil [720065 721989])
            ("org-inside-latex-macro-p" function nil nil [721991 722191])
            ("org--format-latex-make-overlay" function (:arguments ("beg" "end" "image" "imagetype")) nil [722193 722809])
            ("org--list-latex-overlays" function (:arguments ("beg" "end")) nil [722811 723131])
            ("org-remove-latex-fragment-image-overlays" function (:arguments ("beg" "end")) nil [723133 723540])
            ("org-toggle-latex-fragment" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [723542 726218])
            ("org-format-latex" function (:arguments ("prefix" "beg" "end" "dir" "overlays" "msg" "forbuffer" "processing-type")) nil [726220 730803])
            ("org-create-math-formula" function
               (:user-visible-flag t
                :arguments ("latex-frag" "mathml-file"))
                nil [730805 733273])
            ("org-format-latex-as-mathml" function (:arguments ("latex-frag" "latex-frag-type" "prefix" "dir")) nil [733275 734410])
            ("org--get-display-dpi" function nil nil [734412 734748])
            ("org-create-formula-image" function (:arguments ("string" "tofile" "options" "buffer" "processing-type")) nil [734750 738982])
            ("org-splice-latex-header" function (:arguments ("tpl" "def-pkg" "pkg" "snippets-p" "extra")) nil [738984 740804])
            ("org-latex-packages-to-string" function (:arguments ("pkg" "snippets-p" "newline")) nil [740806 741330])
            ("org-dvipng-color" function (:arguments ("attr")) nil [741332 741475])
            ("org-dvipng-color-format" function (:arguments ("color-name")) nil [741477 741672])
            ("org-latex-color" function (:arguments ("attr")) nil [741674 741818])
            ("org-latex-color-format" function (:arguments ("color-name")) nil [741820 741999])
            ("org-normalize-color" function (:arguments ("value")) nil [742001 742136])
            ("defvar-local" code nil nil [742159 742203])
            ("org-toggle-inline-images" function
               (:user-visible-flag t
                :arguments ("include-linked"))
                nil [742205 742810])
            ("org-redisplay-inline-images" function (:user-visible-flag t) nil [742812 743042])
            ("org-display-inline-images" function
               (:user-visible-flag t
                :arguments ("include-linked" "refresh" "beg" "end"))
                nil [743044 747014])
            ("org-display-inline-remove-overlay" function (:arguments ("ov" "after" "_beg" "_end" "_len")) nil [747016 747303])
            ("org-remove-inline-images" function (:user-visible-flag t) nil [747305 747484])
            ("org-remap" function (:arguments ("map" "commands")) nil [747505 747794])
            ("define-key" code nil nil [747880 747952])
            ("define-key" code nil nil [747953 748025])
            ("define-key" code nil nil [748026 748120])
            ("define-key" code nil nil [748121 748217])
            ("define-key" code nil nil [748218 748307])
            ("define-key" code nil nil [748308 748378])
            ("define-key" code nil nil [748379 748447])
            ("define-key" code nil nil [748448 748520])
            ("define-key" code nil nil [748521 748611])
            ("define-key" code nil nil [748612 748710])
            ("define-key" code nil nil [748711 748777])
            ("org-defkey" code nil nil [750453 750510])
            ("org-defkey" code nil nil [750538 750587])
            ("org-defkey" code nil nil [750588 750637])
            ("org-defkey" code nil nil [750638 750705])
            ("org-defkey" code nil nil [750706 750751])
            ("org-defkey" code nil nil [750809 750865])
            ("org-defkey" code nil nil [750866 750922])
            ("define-key" code nil nil [750923 750972])
            ("org-defkey" code nil nil [750974 751039])
            ("org-defkey" code nil nil [751040 751112])
            ("org-defkey" code nil nil [751113 751170])
            ("org-defkey" code nil nil [751202 751256])
            ("org-defkey" code nil nil [751257 751312])
            ("org-defkey" code nil nil [751313 751365])
            ("org-defkey" code nil nil [751366 751420])
            ("org-defkey" code nil nil [751422 751506])
            ("org-defkey" code nil nil [751507 751590])
            ("org-defkey" code nil nil [751591 751657])
            ("org-defkey" code nil nil [751658 751725])
            ("org-defkey" code nil nil [751726 751790])
            ("org-defkey" code nil nil [751791 751857])
            ("org-defkey" code nil nil [751859 751919])
            ("org-defkey" code nil nil [751920 751982])
            ("org-defkey" code nil nil [751983 752045])
            ("org-defkey" code nil nil [752046 752109])
            ("org-defkey" code nil nil [752111 752183])
            ("org-defkey" code nil nil [752184 752255])
            ("org-defkey" code nil nil [752256 752322])
            ("org-defkey" code nil nil [752323 752394])
            ("define-key" code nil nil [752410 752470])
            ("dolist" code nil nil [752471 752560])
            ("when" code nil nil [752693 754472])
            ("org-remap" code nil nil [754496 754656])
            ("org-defkey" code nil nil [754657 754709])
            ("org-defkey" code nil nil [754711 754765])
            ("org-defkey" code nil nil [754794 754842])
            ("if" code nil nil [754843 754983])
            ("if" code nil nil [754984 755120])
            ("if" code nil nil [755121 755261])
            ("org-defkey" code nil nil [755262 755321])
            ("org-defkey" code nil nil [755322 755379])
            ("org-defkey" code nil nil [755380 755438])
            ("org-defkey" code nil nil [755439 755491])
            ("org-defkey" code nil nil [755492 755546])
            ("org-defkey" code nil nil [755547 755615])
            ("org-defkey" code nil nil [755616 755685])
            ("org-defkey" code nil nil [755686 755738])
            ("org-defkey" code nil nil [755739 755795])
            ("org-defkey" code nil nil [755796 755853])
            ("org-defkey" code nil nil [755854 755915])
            ("org-defkey" code nil nil [755916 755985])
            ("org-defkey" code nil nil [755986 756042])
            ("org-defkey" code nil nil [756043 756104])
            ("org-defkey" code nil nil [756105 756174])
            ("org-defkey" code nil nil [756175 756241])
            ("org-defkey" code nil nil [756242 756303])
            ("org-defkey" code nil nil [756304 756350])
            ("org-defkey" code nil nil [756351 756397])
            ("org-defkey" code nil nil [756398 756456])
            ("org-defkey" code nil nil [756457 756507])
            ("org-defkey" code nil nil [756508 756558])
            ("org-defkey" code nil nil [756559 756615])
            ("org-defkey" code nil nil [756616 756664])
            ("org-defkey" code nil nil [756665 756711])
            ("org-defkey" code nil nil [756712 756765])
            ("org-defkey" code nil nil [756790 756849])
            ("org-defkey" code nil nil [756868 756920])
            ("org-defkey" code nil nil [756921 756993])
            ("org-defkey" code nil nil [756994 757049])
            ("org-defkey" code nil nil [757050 757130])
            ("org-defkey" code nil nil [757131 757222])
            ("org-defkey" code nil nil [757223 757278])
            ("org-defkey" code nil nil [757279 757338])
            ("org-defkey" code nil nil [757339 757392])
            ("org-defkey" code nil nil [757393 757458])
            ("org-defkey" code nil nil [757459 757520])
            ("org-defkey" code nil nil [757521 757576])
            ("org-defkey" code nil nil [757577 757633])
            ("org-defkey" code nil nil [757634 757690])
            ("org-defkey" code nil nil [757691 757741])
            ("org-defkey" code nil nil [757765 757817])
            ("org-defkey" code nil nil [757841 757902])
            ("org-defkey" code nil nil [757919 757969])
            ("org-defkey" code nil nil [757995 758056])
            ("org-defkey" code nil nil [758057 758112])
            ("org-defkey" code nil nil [758113 758173])
            ("org-defkey" code nil nil [758174 758242])
            ("org-defkey" code nil nil [758243 758312])
            ("org-defkey" code nil nil [758313 758375])
            ("org-defkey" code nil nil [758376 758429])
            ("org-defkey" code nil nil [758430 758500])
            ("org-defkey" code nil nil [758501 758574])
            ("org-defkey" code nil nil [758575 758629])
            ("org-defkey" code nil nil [758630 758683])
            ("org-defkey" code nil nil [758684 758730])
            ("org-defkey" code nil nil [758731 758786])
            ("org-defkey" code nil nil [758787 758855])
            ("org-defkey" code nil nil [758856 758923])
            ("org-defkey" code nil nil [758924 758982])
            ("org-defkey" code nil nil [758983 759047])
            ("org-defkey" code nil nil [759048 759122])
            ("org-defkey" code nil nil [759123 759199])
            ("org-defkey" code nil nil [759200 759260])
            ("org-defkey" code nil nil [759261 759309])
            ("org-defkey" code nil nil [759310 759365])
            ("org-defkey" code nil nil [759366 759424])
            ("org-defkey" code nil nil [759425 759484])
            ("org-defkey" code nil nil [759485 759536])
            ("org-defkey" code nil nil [759537 759597])
            ("org-defkey" code nil nil [759598 759652])
            ("org-defkey" code nil nil [759653 759711])
            ("org-defkey" code nil nil [759712 759767])
            ("org-defkey" code nil nil [759768 759822])
            ("org-defkey" code nil nil [759823 759900])
            ("org-defkey" code nil nil [759901 759972])
            ("org-defkey" code nil nil [759973 760041])
            ("org-defkey" code nil nil [760042 760090])
            ("org-defkey" code nil nil [760091 760165])
            ("org-defkey" code nil nil [760166 760237])
            ("org-defkey" code nil nil [760238 760295])
            ("org-defkey" code nil nil [760296 760356])
            ("org-defkey" code nil nil [760357 760412])
            ("org-defkey" code nil nil [760413 760474])
            ("org-defkey" code nil nil [760475 760536])
            ("org-defkey" code nil nil [760537 760598])
            ("org-defkey" code nil nil [760599 760650])
            ("org-defkey" code nil nil [760651 760701])
            ("org-defkey" code nil nil [760702 760771])
            ("org-defkey" code nil nil [760855 760912])
            ("org-defkey" code nil nil [760913 760971])
            ("org-defkey" code nil nil [760972 761031])
            ("org-defkey" code nil nil [761033 761105])
            ("org-defkey" code nil nil [761106 761160])
            ("org-defkey" code nil nil [761161 761220])
            ("org-defkey" code nil nil [761221 761281])
            ("org-defkey" code nil nil [761282 761337])
            ("org-defkey" code nil nil [761338 761394])
            ("org-defkey" code nil nil [761395 761453])
            ("org-defkey" code nil nil [761454 761513])
            ("org-defkey" code nil nil [761514 761572])
            ("org-defkey" code nil nil [761573 761632])
            ("org-defkey" code nil nil [761633 761700])
            ("org-defkey" code nil nil [761701 761767])
            ("org-defkey" code nil nil [761768 761840])
            ("org-defkey" code nil nil [761841 761909])
            ("org-defkey" code nil nil [761910 761971])
            ("org-defkey" code nil nil [761972 762030])
            ("org-defkey" code nil nil [762031 762099])
            ("org-defkey" code nil nil [762100 762156])
            ("org-defkey" code nil nil [762157 762213])
            ("org-defkey" code nil nil [762214 762283])
            ("org-defkey" code nil nil [762284 762351])
            ("org-defkey" code nil nil [762352 762430])
            ("org-defkey" code nil nil [762432 762483])
            ("org-defkey" code nil nil [762484 762540])
            ("org-defkey" code nil nil [762541 762598])
            ("org-defkey" code nil nil [762599 762655])
            ("org-defkey" code nil nil [762656 762725])
            ("define-key" code nil nil [762727 762780])
            ("define-key" code nil nil [762782 762831])
            ("define-key" code nil nil [762833 762891])
            ("define-key" code nil nil [762892 762950])
            ("define-key" code nil nil [762952 763010])
            ("org-speed-commands-default" variable
               (:constant-flag t
                :default-value (quote (("Outline Navigation") ("n" org-speed-move-safe (quote org-next-visible-heading)) ("p" org-speed-move-safe (quote org-previous-visible-heading)) ("f" org-speed-move-safe (quote org-forward-heading-same-level)) ("b" org-speed-move-safe (quote org-backward-heading-same-level)) ("F" . org-next-block) ("B" . org-previous-block) ("u" org-speed-move-safe (quote outline-up-heading)) ("j" . org-goto) ("g" org-refile t) ("Outline Visibility") ("c" . org-cycle) ("C" . org-shifttab) (" " . org-display-outline-path) ("s" . org-narrow-to-subtree) ("=" . org-columns) ("Outline Structure Editing") ("U" . org-metaup) ("D" . org-metadown) ("r" . org-metaright) ("l" . org-metaleft) ("R" . org-shiftmetaright) ("L" . org-shiftmetaleft) ("i" progn (forward-char 1) (call-interactively (quote org-insert-heading-respect-content))) ("^" . org-sort) ("w" . org-refile) ("a" . org-archive-subtree-default-with-confirmation) ("@" . org-mark-subtree) ("#" . org-toggle-comment) ("Clock Commands") ("I" . org-clock-in) ("O" . org-clock-out) ("Meta Data Editing") ("t" . org-todo) ("," org-priority) ("0" org-priority 32) ("1" org-priority 65) ("2" org-priority 66) ("3" org-priority 67) (":" . org-set-tags-command) ("e" . org-set-effort) ("E" . org-inc-effort) ("W" lambda (m) (interactive "sMinutes before warning: ") (org-entry-put (point) "APPT_WARNTIME" m)) ("Agenda Views etc") ("v" . org-agenda) ("/" . org-sparse-tree) ("Misc") ("o" . org-open-at-point) ("?" . org-speed-command-help) ("<" org-agenda-set-restriction-lock (quote subtree)) (">" org-agenda-remove-restriction-lock))))
                nil [763013 764892])
            ("org-print-speed-command" function (:arguments ("e")) nil [764894 765210])
            ("org-speed-command-help" function (:user-visible-flag t) nil [765212 765823])
            ("org-speed-move-safe" function
               (:user-visible-flag t
                :arguments ("cmd"))
                nil [765825 766187])
            ("org-self-insert-command-undo-counter" variable nil nil [766189 766236])
            ("org-table-auto-blank-field" variable nil nil [766238 766273])
            ("org-speed-command" variable nil nil [766300 766330])
            ("org-speed-command-activate" function (:arguments ("keys")) nil [766332 766778])
            ("org-babel-speed-command-activate" function (:arguments ("keys")) nil [766780 766994])
            ("org-speed-command-hook" variable (:default-value (quote (org-speed-command-activate org-babel-speed-command-activate))) nil [766996 767716])
            ("org-self-insert-command" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [767718 770108])
            ("org-check-before-invisible-edit" function (:arguments ("kind")) nil [770110 773156])
            ("org-fix-tags-on-the-fly" function nil nil [773158 773481])
            ("org-delete-backward-char" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [773483 774614])
            ("org-delete-char" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [774616 775673])
            ("put" code nil nil [775742 775903])
            ("put" code nil nil [775904 776068])
            ("put" code nil nil [776069 776120])
            ("put" code nil nil [776121 776181])
            ("put" code nil nil [776182 776221])
            ("put" code nil nil [776273 776323])
            ("put" code nil nil [776324 776377])
            ("put" code nil nil [776378 776420])
            ("put" code nil nil [776421 776472])
            ("put" code nil nil [776526 776588])
            ("put" code nil nil [776589 776654])
            ("org-transpose-words" function (:user-visible-flag t) nil [776656 776973])
            ("org-remap" code nil nil [776974 777036])
            ("org-ctrl-c-ctrl-c-hook" variable nil nil [777038 777591])
            ("org-ctrl-c-ctrl-c-final-hook" variable nil nil [777593 778147])
            ("org-tab-first-hook" variable nil nil [778149 778618])
            ("org-tab-after-check-for-table-hook" variable nil nil [778620 779034])
            ("org-tab-after-check-for-cycling-hook" variable nil nil [779036 779396])
            ("org-tab-before-tab-emulation-hook" variable nil nil [779398 779670])
            ("org-metaleft-hook" variable nil nil [779672 779810])
            ("org-metaright-hook" variable nil nil [779811 779951])
            ("org-metaup-hook" variable nil nil [779952 780086])
            ("org-metadown-hook" variable nil nil [780087 780225])
            ("org-shiftmetaleft-hook" variable nil nil [780226 780371])
            ("org-shiftmetaright-hook" variable nil nil [780372 780519])
            ("org-shiftmetaup-hook" variable nil nil [780520 780661])
            ("org-shiftmetadown-hook" variable nil nil [780662 780807])
            ("org-metareturn-hook" variable nil nil [780808 780947])
            ("org-shiftup-hook" variable nil nil [780948 781083])
            ("org-shiftup-final-hook" variable nil nil [781084 781303])
            ("org-shiftdown-hook" variable nil nil [781304 781443])
            ("org-shiftdown-final-hook" variable nil nil [781444 781667])
            ("org-shiftleft-hook" variable nil nil [781668 781807])
            ("org-shiftleft-final-hook" variable nil nil [781808 782031])
            ("org-shiftright-hook" variable nil nil [782032 782173])
            ("org-shiftright-final-hook" variable nil nil [782174 782399])
            ("org-modifier-cursor-error" function nil nil [782401 782604])
            ("org-shiftselect-error" function nil nil [782606 782962])
            ("org-call-for-shift-select" function (:arguments ("cmd")) nil [782964 783081])
            ("org-shifttab" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [783083 783755])
            ("org-shiftmetaleft" function (:user-visible-flag t) nil [783757 784424])
            ("org-shiftmetaright" function (:user-visible-flag t) nil [784426 785090])
            ("org-shiftmetaup" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [785092 785689])
            ("org-shiftmetadown" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [785691 786320])
            ("org-hidden-tree-error" function nil nil [786322 786449])
            ("org-metaleft" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [786451 787697])
            ("org-metaright" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [787699 789161])
            ("org-check-for-hidden" function (:arguments ("what")) nil [789163 790117])
            ("org-metaup" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [790119 790996])
            ("org-metadown" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [790998 791887])
            ("org-shiftup" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [791889 792938])
            ("org-shiftdown" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [792940 793986])
            ("org-shiftright" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [793988 795583])
            ("org-shiftleft" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [795585 797197])
            ("org-shiftcontrolright" function (:user-visible-flag t) nil [797199 797615])
            ("org-shiftcontrolleft" function (:user-visible-flag t) nil [797617 798042])
            ("org-shiftcontrolup" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [798044 798385])
            ("org-shiftcontroldown" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [798387 798734])
            ("org-increase-number-at-point" function
               (:user-visible-flag t
                :arguments ("inc"))
                nil [798736 799426])
            ("org-decrease-number-at-point" function
               (:user-visible-flag t
                :arguments ("inc"))
                nil [799428 799665])
            ("org-ctrl-c-ret" function (:user-visible-flag t) nil [799667 799911])
            ("org-find-visible" function nil nil [799913 800076])
            ("org-find-invisible" function nil nil [800077 800248])
            ("org-copy-visible" function
               (:user-visible-flag t
                :arguments ("beg" "end"))
                nil [800250 800688])
            ("org-copy-special" function (:user-visible-flag t) nil [800690 801000])
            ("org-cut-special" function (:user-visible-flag t) nil [801002 801305])
            ("org-paste-special" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [801307 801650])
            ("org-edit-special" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [801652 804544])
            ("org-table-coordinate-overlays" variable nil nil [804546 804584])
            ("org-ctrl-c-ctrl-c" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [804611 814180])
            ("org-mode-restart" function nil nil [814182 814502])
            ("org-kill-note-or-show-branches" function (:user-visible-flag t) nil [814504 814923])
            ("org-delete-indentation" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [814925 816099])
            ("org-open-line" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [816101 816495])
            ("org-return" function
               (:user-visible-flag t
                :arguments ("indent"))
                nil [816497 819611])
            ("org-return-indent" function (:user-visible-flag t) nil [819613 819855])
            ("org-ctrl-c-star" function (:user-visible-flag t) nil [819857 820210])
            ("org-ctrl-c-minus" function (:user-visible-flag t) nil [820212 820753])
            ("org-toggle-heading" function
               (:user-visible-flag t
                :arguments ("nstars"))
                nil [820755 824430])
            ("org-meta-return" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [824432 824999])
            ("org-in-subtree-not-table-p" function nil nil [825019 825176])
            ("easy-menu-define" code nil nil [825207 828175])
            ("easy-menu-define" code nil nil [828177 836730])
            ("org-info" function
               (:user-visible-flag t
                :arguments ("node"))
                nil [836732 836919])
            ("org-submit-bug-report" function (:user-visible-flag t) nil [836936 839360])
            ("org-install-agenda-files-menu" function nil nil [839363 840089])
            ("org-require-autoloaded-modules" function nil nil [840111 840281])
            ("org-reload" function
               (:user-visible-flag t
                :arguments ("uncompiled"))
                nil [840298 842154])
            ("org-customize" function (:user-visible-flag t) nil [842171 842353])
            ("org-create-customize-menu" function (:user-visible-flag t) nil [842355 843060])
            ("org-get-at-eol" function (:arguments ("property" "n")) nil [843120 843276])
            ("org-find-text-property-in-string" function (:arguments ("prop" "s")) nil [843278 843511])
            ("org-display-warning" function (:arguments ("message")) nil [843513 843636])
            ("org-eval" function (:arguments ("form")) nil [843638 843781])
            ("org-in-clocktable-p" function nil nil [843783 844129])
            ("org-in-verbatim-emphasis" function nil nil [844131 844294])
            ("org-overlay-display" function (:arguments ("ovl" "text" "face" "evap")) nil [844296 844522])
            ("org-overlay-before-string" function (:arguments ("ovl" "text" "face" "evap")) nil [844524 844769])
            ("org-find-overlays" function (:arguments ("prop" "pos" "delete")) nil [844771 845101])
            ("org-goto-marker-or-bmk" function (:arguments ("marker" "bookmark")) nil [845103 845592])
            ("org-quote-csv-field" function (:arguments ("s")) nil [845594 845786])
            ("org-force-self-insert" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [845788 845918])
            ("org-shorten-string" function (:arguments ("s" "maxlength")) nil [845920 846738])
            ("org-get-indentation" function (:arguments ("line")) nil [846740 847114])
            ("org-get-string-indentation" function (:arguments ("s")) nil [847116 847474])
            ("org-remove-tabs" function (:arguments ("s" "width")) nil [847476 847836])
            ("org-fix-indentation" function (:arguments ("line" "ind")) nil [847838 848299])
            ("org-remove-indentation" function (:arguments ("code" "n")) nil [848301 848608])
            ("org-do-remove-indentation" function (:arguments ("n")) nil [848610 849603])
            ("org-fill-template" function (:arguments ("template" "alist")) nil [849605 850016])
            ("org-base-buffer" function (:arguments ("buffer")) nil [850018 850206])
            ("org-wrap" function (:arguments ("string" "width" "lines")) nil [850208 851144])
            ("org-do-wrap" function (:arguments ("words" "width")) nil [851146 851502])
            ("org-quote-vert" function (:arguments ("s")) nil [851504 851644])
            ("org-uuidgen-p" function (:arguments ("s")) nil [851646 851825])
            ("org-in-src-block-p" function (:arguments ("inside")) nil [851827 852255])
            ("org-context" function nil nil [852257 856803])
            ("org-in-regexp" function (:arguments ("regexp" "nlines" "visually")) nil [856805 857688])
            ("org-between-regexps-p" function (:arguments ("start-re" "end-re" "lim-up" "lim-down")) nil [857690 858923])
            ("org-in-block-p" function (:arguments ("names")) nil [858925 859634])
            ("org-occur-in-agenda-files" function
               (:user-visible-flag t
                :arguments ("regexp" "_nlines"))
                nil [859636 860522])
            ("add-hook" code nil nil [860524 860629])
            ("org-occur-link-in-agenda-files" function (:user-visible-flag t) nil [860631 860988])
            ("org-reverse-string" function (:arguments ("string")) nil [860990 861111])
            ("org-uniquify-alist" function (:arguments ("alist")) nil [861172 861665])
            ("org-delete-all" function (:arguments ("elts" "list")) nil [861667 861928])
            ("org-back-over-empty-lines" function nil nil [861930 862332])
            ("org-skip-whitespace" function nil nil [862334 862397])
            ("org-point-in-group" function (:arguments ("point" "group" "context")) nil [862399 862853])
            ("org-switch-to-buffer-other-window" function (:arguments ("args")) nil [862855 863113])
            ("org-combine-plists" function (:arguments ("plists")) nil [863115 863600])
            ("org-replace-escapes" function (:arguments ("string" "table")) nil [863602 864880])
            ("org-find-base-buffer-visiting" function (:arguments ("file")) nil [864882 865153])
            ("org-file-image-p" function (:arguments ("file")) nil [865265 865405])
            ("org-get-cursor-date" function (:arguments ("with-time")) nil [865407 866555])
            ("org-mark-subtree" function
               (:user-visible-flag t
                :arguments ("up"))
                nil [866557 867197])
            ("org-file-newer-than-p" function (:arguments ("file" "time")) nil [867199 867733])
            ("org-compile-file" function (:arguments ("source" "process" "ext" "err-msg" "log-buf" "spec")) nil [867735 870174])
            ("org-element-greater-elements" variable nil nil [870193 870230])
            ("org--get-expected-indentation" function (:arguments ("element" "contentsp")) nil [870231 874415])
            ("org--align-node-property" function nil nil [874417 874779])
            ("org-indent-line" function (:user-visible-flag t) nil [874781 878069])
            ("org-indent-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [878071 882890])
            ("org-indent-drawer" function (:user-visible-flag t) nil [882892 883415])
            ("org-indent-block" function (:user-visible-flag t) nil [883417 884093])
            ("org-setup-filling" function nil nil [884679 885545])
            ("org-fill-line-break-nobreak-p" function nil nil [885547 885787])
            ("org-fill-paragraph-with-timestamp-nobreak-p" function nil nil [885789 885984])
            ("org-fill-n-macro-as-item-nobreak-p" function nil nil [885986 886285])
            ("declare-function" code nil nil [886287 886336])
            ("orgtbl-line-start-regexp" variable nil nil [886337 886370])
            ("org-adaptive-fill-function" function nil nil [886391 888949])
            ("declare-function" code nil nil [888951 889000])
            ("message-cite-prefix-regexp" variable nil nil [889001 889036])
            ("org-fill-element" function (:arguments ("justify")) nil [889056 893690])
            ("org-fill-paragraph" function
               (:user-visible-flag t
                :arguments ("justify" "region"))
                nil [893692 895625])
            ("org-remap" code nil nil [895626 895686])
            ("org-auto-fill-function" function nil nil [895688 896114])
            ("org-comment-line-break-function" function (:arguments ("soft")) nil [896116 896577])
            ("org-toggle-fixed-width" function (:user-visible-flag t) nil [896603 901687])
            ("org-setup-comments-handling" function nil nil [902444 902840])
            ("org-insert-comment" function nil nil [902842 903660])
            ("comment-empty-lines" variable nil nil [903662 903690])
            ("org-comment-or-uncomment-region" function (:arguments ("beg" "end" "_")) nil [903714 906382])
            ("org-comment-dwim" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [906384 906637])
            ("org-timestamp--to-internal-time" function (:arguments ("timestamp" "end")) nil [906772 907204])
            ("org-timestamp-has-time-p" function (:arguments ("timestamp")) nil [907206 907346])
            ("org-timestamp-format" function (:arguments ("timestamp" "format" "end" "utc")) nil [907348 907794])
            ("org-timestamp-split-range" function (:arguments ("timestamp" "end")) nil [907796 908987])
            ("org-timestamp-translate" function (:arguments ("timestamp" "boundary")) nil [908989 909999])
            ("reftex-docstruct-symbol" variable nil nil [910021 910053])
            ("org--rds" variable nil nil [910054 910071])
            ("org-reftex-citation" function (:user-visible-flag t) nil [910073 911061])
            ("org-beginning-of-line" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [911111 913576])
            ("org-end-of-line" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [913578 915556])
            ("define-key" code nil nil [915558 915613])
            ("define-key" code nil nil [915614 915663])
            ("org-backward-sentence" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [915665 916464])
            ("org-forward-sentence" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [916466 917745])
            ("define-key" code nil nil [917747 917802])
            ("define-key" code nil nil [917803 917857])
            ("org-kill-line" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [917859 918618])
            ("define-key" code nil nil [918620 918667])
            ("org-yank" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [918669 919951])
            ("org-yank-generic" function (:arguments ("command" "arg")) nil [919953 921707])
            ("org-yank-folding-would-swallow-text" function (:arguments ("beg" "end")) nil [921709 922226])
            ("define-key" code nil nil [922228 922270])
            ("org-truely-invisible-p" function nil nil [922272 922512])
            ("org-invisible-p2" function nil nil [922514 922821])
            ("org-back-to-heading" function (:arguments ("invisible-ok")) nil [922823 923116])
            ("org-before-first-heading-p" function nil nil [923118 923279])
            ("org-at-heading-p" function (:arguments ("ignored")) nil [923281 923352])
            ("org-in-commented-heading-p" function (:arguments ("no-inheritance")) nil [923354 923936])
            ("org-at-comment-p" function nil nil [923938 924099])
            ("org-at-drawer-p" function nil nil [924101 924248])
            ("org-at-block-p" function nil nil [924250 924394])
            ("org-point-at-end-of-empty-headline" function nil nil [924396 924795])
            ("org-at-heading-or-item-p" function nil nil [924797 924874])
            ("org-at-target-p" function nil nil [924876 924989])
            ("defalias" code nil nil [925040 925084])
            ("org-up-heading-all" function (:arguments ("arg")) nil [925086 925320])
            ("org-up-heading-safe" function nil nil [925322 925978])
            ("org-first-sibling-p" function (:user-visible-flag t) nil [925980 926358])
            ("org-goto-sibling" function (:arguments ("previous")) nil [926360 927090])
            ("org-show-siblings" function nil nil [927092 927329])
            ("org-goto-first-child" function nil nil [927331 927795])
            ("org-show-hidden-entry" function nil nil [927797 927921])
            ("org-flag-heading" function (:arguments ("flag" "entry")) nil [927923 928427])
            ("org-get-next-sibling" function nil nil [928429 928865])
            ("org-get-last-sibling" function nil nil [928867 929322])
            ("org-end-of-subtree" function (:arguments ("invisible-ok" "to-heading")) nil [929324 930779])
            ("org-end-of-meta-data" function (:arguments ("full")) nil [930781 931624])
            ("org-forward-heading-same-level" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok"))
                nil [931626 932792])
            ("org-backward-heading-same-level" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok"))
                nil [932794 933082])
            ("org-next-visible-heading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [933084 933416])
            ("org-previous-visible-heading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [933418 933766])
            ("org-next-block" function
               (:user-visible-flag t
                :arguments ("arg" "backward" "block-regexp"))
                nil [933768 935212])
            ("org-previous-block" function
               (:user-visible-flag t
                :arguments ("arg" "block-regexp"))
                nil [935214 935487])
            ("org-forward-paragraph" function (:user-visible-flag t) nil [935489 939018])
            ("org-backward-paragraph" function (:user-visible-flag t) nil [939020 941908])
            ("org-forward-element" function (:user-visible-flag t) nil [941910 942702])
            ("org-backward-element" function (:user-visible-flag t) nil [942704 943984])
            ("org-up-element" function (:user-visible-flag t) nil [943986 944495])
            ("org-down-element" function (:user-visible-flag t) nil [944497 945116])
            ("org-drag-element-backward" function (:user-visible-flag t) nil [945118 946357])
            ("org-drag-element-forward" function (:user-visible-flag t) nil [946359 947795])
            ("org-drag-line-forward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [947797 948142])
            ("org-drag-line-backward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [948144 948281])
            ("org-mark-element" function (:user-visible-flag t) nil [948283 948991])
            ("org-narrow-to-element" function (:user-visible-flag t) nil [948993 949565])
            ("org-transpose-element" function (:user-visible-flag t) nil [949567 949868])
            ("org-unindent-buffer" function (:user-visible-flag t) nil [949870 950679])
            ("org-show-children" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [950681 952195])
            ("org-show-subtree" function (:user-visible-flag t) nil [952197 952389])
            ("org-show-entry" function (:user-visible-flag t) nil [952391 952874])
            ("org-make-options-regexp" function (:arguments ("kwds" "extra")) nil [952876 953216])
            ("defvar-local" code nil nil [953289 953366])
            ("org-imenu-new-marker" function (:arguments ("pos")) nil [953368 953581])
            ("org-imenu-get-tree" function nil nil [953583 954581])
            ("eval-after-load" code nil nil [954583 954749])
            ("org-link-display-format" function (:arguments ("s")) nil [954751 955103])
            ("org-toggle-link-display" function (:user-visible-flag t) nil [955105 955485])
            ("org-speedbar-restriction-lock-overlay" variable (:default-value (make-overlay 1 1)) nil [955508 955634])
            ("overlay-put" code nil nil [955635 955727])
            ("overlay-put" code nil nil [955728 955842])
            ("delete-overlay" code nil nil [955843 955897])
            ("org-speedbar-set-agenda-restriction" function (:user-visible-flag t) nil [955899 957265])
            ("speedbar-file-key-map" variable nil nil [957267 957297])
            ("declare-function" code nil nil [957298 957372])
            ("eval-after-load" code nil nil [957373 957923])
            ("org--flyspell-object-check-p" function (:arguments ("element")) nil [957979 958823])
            ("org-mode-flyspell-verify" function nil nil [958825 961207])
            ("put" code nil nil [961208 961274])
            ("org-remove-flyspell-overlays-in" function (:arguments ("beg" "end")) nil [961276 961505])
            ("flyspell-delayed-commands" variable nil nil [961507 961541])
            ("eval-after-load" code nil nil [961542 961639])
            ("eval-after-load" code nil nil [961707 962052])
            ("eval-after-load" code nil nil [962113 962283])
            ("eval-after-load" code nil nil [962338 962577])
            ("org-bookmark-jump-unhide" function nil nil [962579 962872])
            ("org-mark-jump-unhide" function nil nil [962874 963083])
            ("eval-after-load" code nil nil [963085 963263])
            ("eval-after-load" code nil nil [963265 963447])
            ("eval-after-load" code nil nil [963449 963623])
            ("session-globals-exclude" variable nil nil [963673 963705])
            ("eval-after-load" code nil nil [963706 963790])
            ("org" package nil nil [963808 963822])
            ("run-hooks" code nil nil [963824 963850]))          
      :file "org.el.gz"
      :pointmax 963873
      :fsize 260793
      :lastmodtime '(23728 55154 0 0)
      :unmatched-syntax '((close-paren 22022 . 22023) (symbol 21800 . 21816) (open-paren 21799 . 21800) (close-paren 3094 . 3095) (symbol 3057 . 3074) (open-paren 3056 . 3057))))
  :file "!usr!share!emacs!26.2!lisp!org!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
