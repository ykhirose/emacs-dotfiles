;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__STM32F4xx_I2C_H" variable (:constant-flag t) nil [1281 1298])
            ("stm32f4xx.h" include nil nil [1422 1444])
            ("I2C_InitTypeDef" type
               (:typedef ("" type
                     (:members 
                        ( ("I2C_ClockSpeed" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1691 1715])
                          ("I2C_Mode" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1864 1882])
                          ("I2C_DutyCycle" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2021 2044])
                          ("I2C_OwnAddress1" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2213 2238])
                          ("I2C_Ack" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2388 2405])
                          ("I2C_AcknowledgedAddress" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2573 2606]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [1672 2790])
            ("IS_I2C_ALL_PERIPH" variable (:constant-flag t) nil [2932 2949])
            ("IS_I2C_DIGITAL_FILTER" variable (:constant-flag t) nil [3151 3172])
            ("I2C_Mode_I2C" variable (:constant-flag t) nil [3271 3283])
            ("I2C_Mode_SMBusDevice" variable (:constant-flag t) nil [3330 3350])
            ("I2C_Mode_SMBusHost" variable (:constant-flag t) nil [3391 3409])
            ("IS_I2C_MODE" variable (:constant-flag t) nil [3450 3461])
            ("I2C_DutyCycle_16_9" variable (:constant-flag t) nil [3704 3722])
            ("I2C_DutyCycle_2" variable (:constant-flag t) nil [3803 3818])
            ("IS_I2C_DUTY_CYCLE" variable (:constant-flag t) nil [3899 3916])
            ("I2C_Ack_Enable" variable (:constant-flag t) nil [4099 4113])
            ("I2C_Ack_Disable" variable (:constant-flag t) nil [4158 4173])
            ("IS_I2C_ACK_STATE" variable (:constant-flag t) nil [4217 4233])
            ("I2C_Direction_Transmitter" variable (:constant-flag t) nil [4415 4440])
            ("I2C_Direction_Receiver" variable (:constant-flag t) nil [4471 4493])
            ("IS_I2C_DIRECTION" variable (:constant-flag t) nil [4526 4542])
            ("I2C_AcknowledgedAddress_7bit" variable (:constant-flag t) nil [4759 4787])
            ("I2C_AcknowledgedAddress_10bit" variable (:constant-flag t) nil [4818 4847])
            ("IS_I2C_ACKNOWLEDGE_ADDRESS" variable (:constant-flag t) nil [4877 4903])
            ("I2C_Register_CR1" variable (:constant-flag t) nil [5122 5138])
            ("I2C_Register_CR2" variable (:constant-flag t) nil [5178 5194])
            ("I2C_Register_OAR1" variable (:constant-flag t) nil [5234 5251])
            ("I2C_Register_OAR2" variable (:constant-flag t) nil [5290 5307])
            ("I2C_Register_DR" variable (:constant-flag t) nil [5346 5361])
            ("I2C_Register_SR1" variable (:constant-flag t) nil [5402 5418])
            ("I2C_Register_SR2" variable (:constant-flag t) nil [5458 5474])
            ("I2C_Register_CCR" variable (:constant-flag t) nil [5514 5530])
            ("I2C_Register_TRISE" variable (:constant-flag t) nil [5570 5588])
            ("IS_I2C_REGISTER" variable (:constant-flag t) nil [5626 5641])
            ("I2C_NACKPosition_Next" variable (:constant-flag t) nil [6345 6366])
            ("I2C_NACKPosition_Current" variable (:constant-flag t) nil [6404 6428])
            ("IS_I2C_NACK_POSITION" variable (:constant-flag t) nil [6463 6483])
            ("I2C_SMBusAlert_Low" variable (:constant-flag t) nil [6702 6720])
            ("I2C_SMBusAlert_High" variable (:constant-flag t) nil [6761 6780])
            ("IS_I2C_SMBUS_ALERT" variable (:constant-flag t) nil [6820 6838])
            ("I2C_PECPosition_Next" variable (:constant-flag t) nil [7023 7043])
            ("I2C_PECPosition_Current" variable (:constant-flag t) nil [7082 7105])
            ("IS_I2C_PEC_POSITION" variable (:constant-flag t) nil [7141 7160])
            ("I2C_IT_BUF" variable (:constant-flag t) nil [7374 7384])
            ("I2C_IT_EVT" variable (:constant-flag t) nil [7433 7443])
            ("I2C_IT_ERR" variable (:constant-flag t) nil [7492 7502])
            ("IS_I2C_CONFIG_IT" variable (:constant-flag t) nil [7551 7567])
            ("I2C_IT_SMBALERT" variable (:constant-flag t) nil [7708 7723])
            ("I2C_IT_TIMEOUT" variable (:constant-flag t) nil [7771 7785])
            ("I2C_IT_PECERR" variable (:constant-flag t) nil [7834 7847])
            ("I2C_IT_OVR" variable (:constant-flag t) nil [7897 7907])
            ("I2C_IT_AF" variable (:constant-flag t) nil [7960 7969])
            ("I2C_IT_ARLO" variable (:constant-flag t) nil [8023 8034])
            ("I2C_IT_BERR" variable (:constant-flag t) nil [8086 8097])
            ("I2C_IT_TXE" variable (:constant-flag t) nil [8149 8159])
            ("I2C_IT_RXNE" variable (:constant-flag t) nil [8212 8223])
            ("I2C_IT_STOPF" variable (:constant-flag t) nil [8275 8287])
            ("I2C_IT_ADD10" variable (:constant-flag t) nil [8338 8350])
            ("I2C_IT_BTF" variable (:constant-flag t) nil [8401 8411])
            ("I2C_IT_ADDR" variable (:constant-flag t) nil [8464 8475])
            ("I2C_IT_SB" variable (:constant-flag t) nil [8527 8536])
            ("IS_I2C_CLEAR_IT" variable (:constant-flag t) nil [8591 8606])
            ("IS_I2C_GET_IT" variable (:constant-flag t) nil [8686 8699])
            ("I2C_FLAG_DUALF" variable (:constant-flag t) nil [9349 9363])
            ("I2C_FLAG_SMBHOST" variable (:constant-flag t) nil [9412 9428])
            ("I2C_FLAG_SMBDEFAULT" variable (:constant-flag t) nil [9475 9494])
            ("I2C_FLAG_GENCALL" variable (:constant-flag t) nil [9538 9554])
            ("I2C_FLAG_TRA" variable (:constant-flag t) nil [9601 9613])
            ("I2C_FLAG_BUSY" variable (:constant-flag t) nil [9664 9677])
            ("I2C_FLAG_MSL" variable (:constant-flag t) nil [9727 9739])
            ("I2C_FLAG_SMBALERT" variable (:constant-flag t) nil [9835 9852])
            ("I2C_FLAG_TIMEOUT" variable (:constant-flag t) nil [9898 9914])
            ("I2C_FLAG_PECERR" variable (:constant-flag t) nil [9961 9976])
            ("I2C_FLAG_OVR" variable (:constant-flag t) nil [10024 10036])
            ("I2C_FLAG_AF" variable (:constant-flag t) nil [10087 10098])
            ("I2C_FLAG_ARLO" variable (:constant-flag t) nil [10150 10163])
            ("I2C_FLAG_BERR" variable (:constant-flag t) nil [10213 10226])
            ("I2C_FLAG_TXE" variable (:constant-flag t) nil [10276 10288])
            ("I2C_FLAG_RXNE" variable (:constant-flag t) nil [10339 10352])
            ("I2C_FLAG_STOPF" variable (:constant-flag t) nil [10402 10416])
            ("I2C_FLAG_ADD10" variable (:constant-flag t) nil [10465 10479])
            ("I2C_FLAG_BTF" variable (:constant-flag t) nil [10528 10540])
            ("I2C_FLAG_ADDR" variable (:constant-flag t) nil [10591 10604])
            ("I2C_FLAG_SB" variable (:constant-flag t) nil [10654 10665])
            ("IS_I2C_CLEAR_FLAG" variable (:constant-flag t) nil [10718 10735])
            ("IS_I2C_GET_FLAG" variable (:constant-flag t) nil [10821 10836])
            ("I2C_EVENT_MASTER_MODE_SELECT" variable (:constant-flag t) nil [12421 12449])
            ("I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED" variable (:constant-flag t) nil [13780 13822])
            ("I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED" variable (:constant-flag t) nil [13904 13943])
            ("I2C_EVENT_MASTER_MODE_ADDRESS10" variable (:constant-flag t) nil [14030 14061])
            ("I2C_EVENT_MASTER_BYTE_RECEIVED" variable (:constant-flag t) nil [15622 15652])
            ("I2C_EVENT_MASTER_BYTE_TRANSMITTING" variable (:constant-flag t) nil [15804 15838])
            ("I2C_EVENT_MASTER_BYTE_TRANSMITTED" variable (:constant-flag t) nil [15933 15966])
            ("I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED" variable (:constant-flag t) nil [17774 17814])
            ("I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED" variable (:constant-flag t) nil [17882 17925])
            ("I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED" variable (:constant-flag t) nil [18052 18098])
            ("I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED" variable (:constant-flag t) nil [18162 18211])
            ("I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED" variable (:constant-flag t) nil [18335 18377])
            ("I2C_EVENT_SLAVE_BYTE_RECEIVED" variable (:constant-flag t) nil [19921 19950])
            ("I2C_EVENT_SLAVE_STOP_DETECTED" variable (:constant-flag t) nil [20043 20072])
            ("I2C_EVENT_SLAVE_BYTE_TRANSMITTED" variable (:constant-flag t) nil [20208 20240])
            ("I2C_EVENT_SLAVE_BYTE_TRANSMITTING" variable (:constant-flag t) nil [20326 20359])
            ("I2C_EVENT_SLAVE_ACK_FAILURE" variable (:constant-flag t) nil [20453 20480])
            ("IS_I2C_EVENT" variable (:constant-flag t) nil [20772 20784])
            ("IS_I2C_OWN_ADDRESS1" variable (:constant-flag t) nil [22566 22585])
            ("IS_I2C_CLOCK_SPEED" variable (:constant-flag t) nil [22687 22705])
            ("I2C_DeInit" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23050 23068]))                  
                :type "void")
                nil [23034 23069])
            ("I2C_Init" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23166 23184])
                    ("I2C_InitStruct" variable
                       (:pointer 1
                        :type ("I2C_InitTypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23185 23217]))                  
                :type "void")
                nil [23152 23218])
            ("I2C_StructInit" function
               (:prototype-flag t
                :arguments 
                  ( ("I2C_InitStruct" variable
                       (:pointer 1
                        :type ("I2C_InitTypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23239 23271]))                  
                :type "void")
                nil [23219 23272])
            ("I2C_Cmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23286 23304])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23305 23330]))                  
                :type "void")
                nil [23273 23331])
            ("I2C_DigitalFilterConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23361 23379])
                    ("I2C_DigitalFilter" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23380 23407]))                  
                :type "void")
                nil [23332 23408])
            ("I2C_AnalogFilterCmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23434 23452])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23453 23478]))                  
                :type "void")
                nil [23409 23479])
            ("I2C_GenerateSTART" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23503 23521])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23522 23547]))                  
                :type "void")
                nil [23480 23548])
            ("I2C_GenerateSTOP" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23571 23589])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23590 23615]))                  
                :type "void")
                nil [23549 23616])
            ("I2C_Send7bitAddress" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23642 23660])
                    ("Address" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23661 23677])
                    ("I2C_Direction" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23678 23700]))                  
                :type "void")
                nil [23617 23701])
            ("I2C_AcknowledgeConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23729 23747])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23748 23773]))                  
                :type "void")
                nil [23702 23774])
            ("I2C_OwnAddress2Config" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23802 23820])
                    ("Address" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23821 23837]))                  
                :type "void")
                nil [23775 23838])
            ("I2C_DualAddressCmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23863 23881])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23882 23907]))                  
                :type "void")
                nil [23839 23908])
            ("I2C_GeneralCallCmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23933 23951])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23952 23977]))                  
                :type "void")
                nil [23909 23978])
            ("I2C_SoftwareResetCmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24005 24023])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24024 24049]))                  
                :type "void")
                nil [23979 24050])
            ("I2C_StretchClockCmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24076 24094])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24095 24120]))                  
                :type "void")
                nil [24051 24121])
            ("I2C_FastModeDutyCycleConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24155 24173])
                    ("I2C_DutyCycle" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24174 24197]))                  
                :type "void")
                nil [24122 24198])
            ("I2C_NACKPositionConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24227 24245])
                    ("I2C_NACKPosition" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24246 24272]))                  
                :type "void")
                nil [24199 24273])
            ("I2C_SMBusAlertConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24300 24318])
                    ("I2C_SMBusAlert" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24319 24343]))                  
                :type "void")
                nil [24274 24344])
            ("I2C_ARPCmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24361 24379])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24380 24405]))                  
                :type "void")
                nil [24345 24406])
            ("I2C_SendData" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24508 24526])
                    ("Data" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24527 24540]))                  
                :type "void")
                nil [24490 24541])
            ("I2C_ReceiveData" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24566 24584]))                  
                :type ("uint8_t" type (:type "class") nil nil))
                nil [24542 24585])
            ("I2C_TransmitPEC" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24690 24708])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24709 24734]))                  
                :type "void")
                nil [24669 24735])
            ("I2C_PECPositionConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24763 24781])
                    ("I2C_PECPosition" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24782 24807]))                  
                :type "void")
                nil [24736 24808])
            ("I2C_CalculatePEC" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24831 24849])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24850 24875]))                  
                :type "void")
                nil [24809 24876])
            ("I2C_GetPEC" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24896 24914]))                  
                :type ("uint8_t" type (:type "class") nil nil))
                nil [24877 24915])
            ("I2C_DMACmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25014 25032])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25033 25058]))                  
                :type "void")
                nil [24998 25059])
            ("I2C_DMALastTransferCmd" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25088 25106])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25107 25132]))                  
                :type "void")
                nil [25060 25133])
            ("I2C_ReadRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25242 25260])
                    ("I2C_Register" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25261 25282]))                  
                :type ("uint16_t" type (:type "class") nil nil))
                nil [25216 25283])
            ("I2C_ITConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25302 25320])
                    ("I2C_IT" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25321 25337])
                    ("NewState" variable (:type ("FunctionalState" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25338 25363]))                  
                :type "void")
                nil [25284 25364])
            ("I2C_CheckEvent" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30261 30279])
                    ("I2C_EVENT" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30280 30299]))                  
                :type ("ErrorStatus" type (:type "class") nil nil))
                nil [30234 30300])
            ("I2C_GetLastEvent" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30551 30569]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [30525 30570])
            ("I2C_GetFlagStatus" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30826 30844])
                    ("I2C_FLAG" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30845 30863]))                  
                :type ("FlagStatus" type (:type "class") nil nil))
                nil [30797 30864])
            ("I2C_ClearFlag" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30886 30904])
                    ("I2C_FLAG" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30905 30923]))                  
                :type "void")
                nil [30867 30924])
            ("I2C_GetITStatus" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30950 30968])
                    ("I2C_IT" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30969 30985]))                  
                :type ("ITStatus" type (:type "class") nil nil))
                nil [30925 30986])
            ("I2C_ClearITPendingBit" function
               (:prototype-flag t
                :arguments 
                  ( ("I2Cx" variable
                       (:pointer 1
                        :type ("I2C_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31014 31032])
                    ("I2C_IT" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31033 31049]))                  
                :type "void")
                nil [30987 31050]))          
      :file "stm32f4xx_i2c.h"
      :pointmax 31229
      :fsize 31937
      :lastmodtime '(23800 38969 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("I2C_Mode_SMBusDevice" . ((semantic-list "((uint16_t)0x0002)" 3362 . 3380)))
          ("IS_I2C_REGISTER" (spp-arg-list ("REGISTER") 5641 . 5651) . ((semantic-list "(((REGISTER) == I2C_Register_CR1) || \\
                                   ((REGISTER) == I2C_Register_CR2) || \\
                                   ((REGISTER) == I2C_Register_OAR1) || \\
                                   ((REGISTER) == I2C_Register_OAR2) || \\
                                   ((REGISTER) == I2C_Register_DR) || \\
                                   ((REGISTER) == I2C_Register_SR1) || \\
                                   ((REGISTER) == I2C_Register_SR2) || \\
                                   ((REGISTER) == I2C_Register_CCR) || \\
                                   ((REGISTER) == I2C_Register_TRISE))" 5652 . 6273)))
          ("I2C_IT_TXE" . ((semantic-list "((uint32_t)0x06000080)" 8181 . 8203)))
          ("I2C_FLAG_BUSY" . ((semantic-list "((uint32_t)0x00020000)" 9696 . 9718)))
          ("I2C_FLAG_MSL" . ((semantic-list "((uint32_t)0x00010000)" 9759 . 9781)))
          ("I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED" . ((semantic-list "((uint32_t)0x00820000)" 18102 . 18124)))
          ("I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED" . ((semantic-list "((uint32_t)0x00860080)" 18212 . 18234)))
          ("I2C_Ack_Disable" . ((semantic-list "((uint16_t)0x0000)" 4190 . 4208)))
          ("I2C_Direction_Receiver" . ((semantic-list "((uint8_t)0x01)" 4502 . 4517)))
          ("IS_I2C_DIRECTION" (spp-arg-list ("DIRECTION") 4542 . 4553) . ((semantic-list "(((DIRECTION) == I2C_Direction_Transmitter) || \\
                                     ((DIRECTION) == I2C_Direction_Receiver))" 4554 . 4680)))
          ("IS_I2C_ACKNOWLEDGE_ADDRESS" (spp-arg-list ("ADDRESS") 4903 . 4912) . ((semantic-list "(((ADDRESS) == I2C_AcknowledgedAddress_7bit) || \\
                                             ((ADDRESS) == I2C_AcknowledgedAddress_10bit))" 4913 . 5053)))
          ("I2C_IT_OVR" . ((semantic-list "((uint32_t)0x01000800)" 7929 . 7951)))
          ("I2C_IT_ARLO" . ((semantic-list "((uint32_t)0x01000200)" 8055 . 8077)))
          ("I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED" . ((semantic-list "((uint32_t)0x00030002)" 13954 . 13976)))
          ("I2C_EVENT_MASTER_BYTE_TRANSMITTING" . ((semantic-list "((uint32_t)0x00070080)" 15855 . 15877)))
          ("IS_I2C_DIGITAL_FILTER" (spp-arg-list ("FILTER") 3172 . 3180) . ((semantic-list "((FILTER) <= 0x0000000F)" 3183 . 3207)))
          ("I2C_Register_CR1" . ((semantic-list "((uint8_t)0x00)" 5154 . 5169)))
          ("I2C_Register_OAR1" . ((semantic-list "((uint8_t)0x08)" 5266 . 5281)))
          ("IS_I2C_SMBUS_ALERT" (spp-arg-list ("ALERT") 6838 . 6845) . ((semantic-list "(((ALERT) == I2C_SMBusAlert_Low) || \\
                                   ((ALERT) == I2C_SMBusAlert_High))" 6846 . 6952)))
          ("I2C_FLAG_PECERR" . ((semantic-list "((uint32_t)0x10001000)" 9993 . 10015)))
          ("I2C_FLAG_BERR" . ((semantic-list "((uint32_t)0x10000100)" 10245 . 10267)))
          ("I2C_FLAG_BTF" . ((semantic-list "((uint32_t)0x10000004)" 10560 . 10582)))
          ("I2C_FLAG_ADDR" . ((semantic-list "((uint32_t)0x10000002)" 10623 . 10645)))
          ("I2C_EVENT_MASTER_MODE_SELECT" . ((semantic-list "((uint32_t)0x00030001)" 12471 . 12493)))
          ("I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED" . ((semantic-list "((uint32_t)0x00070082)" 13830 . 13852)))
          ("I2C_EVENT_SLAVE_BYTE_RECEIVED" . ((semantic-list "((uint32_t)0x00020040)" 19971 . 19993)))
          ("I2C_EVENT_SLAVE_BYTE_TRANSMITTED" . ((semantic-list "((uint32_t)0x00060084)" 20258 . 20280)))
          ("I2C_Register_CR2" . ((semantic-list "((uint8_t)0x04)" 5210 . 5225)))
          ("I2C_Register_OAR2" . ((semantic-list "((uint8_t)0x0C)" 5322 . 5337)))
          ("I2C_Register_DR" . ((semantic-list "((uint8_t)0x10)" 5378 . 5393)))
          ("I2C_Register_SR1" . ((semantic-list "((uint8_t)0x14)" 5434 . 5449)))
          ("I2C_Register_CCR" . ((semantic-list "((uint8_t)0x1C)" 5546 . 5561)))
          ("I2C_IT_ERR" . ((semantic-list "((uint16_t)0x0100)" 7524 . 7542)))
          ("I2C_IT_RXNE" . ((semantic-list "((uint32_t)0x06000040)" 8244 . 8266)))
          ("I2C_IT_STOPF" . ((semantic-list "((uint32_t)0x02000010)" 8307 . 8329)))
          ("I2C_FLAG_SMBHOST" . ((semantic-list "((uint32_t)0x00400000)" 9444 . 9466)))
          ("I2C_FLAG_GENCALL" . ((semantic-list "((uint32_t)0x00100000)" 9570 . 9592)))
          ("IS_I2C_GET_FLAG" (spp-arg-list ("FLAG") 10836 . 10842) . ((semantic-list "(((FLAG) == I2C_FLAG_DUALF) || ((FLAG) == I2C_FLAG_SMBHOST) || \\
                               ((FLAG) == I2C_FLAG_SMBDEFAULT) || ((FLAG) == I2C_FLAG_GENCALL) || \\
                               ((FLAG) == I2C_FLAG_TRA) || ((FLAG) == I2C_FLAG_BUSY) || \\
                               ((FLAG) == I2C_FLAG_MSL) || ((FLAG) == I2C_FLAG_SMBALERT) || \\
                               ((FLAG) == I2C_FLAG_TIMEOUT) || ((FLAG) == I2C_FLAG_PECERR) || \\
                               ((FLAG) == I2C_FLAG_OVR) || ((FLAG) == I2C_FLAG_AF) || \\
                               ((FLAG) == I2C_FLAG_ARLO) || ((FLAG) == I2C_FLAG_BERR) || \\
                               ((FLAG) == I2C_FLAG_TXE) || ((FLAG) == I2C_FLAG_RXNE) || \\
                               ((FLAG) == I2C_FLAG_STOPF) || ((FLAG) == I2C_FLAG_ADD10) || \\
                               ((FLAG) == I2C_FLAG_BTF) || ((FLAG) == I2C_FLAG_ADDR) || \\
                               ((FLAG) == I2C_FLAG_SB))" 10843 . 11795)))
          ("I2C_EVENT_MASTER_BYTE_TRANSMITTED" . ((semantic-list "((uint32_t)0x00070084)" 15983 . 16005)))
          ("I2C_DutyCycle_16_9" . ((semantic-list "((uint16_t)0x4000)" 3736 . 3754)))
          ("I2C_Register_SR2" . ((semantic-list "((uint8_t)0x18)" 5490 . 5505)))
          ("I2C_IT_EVT" . ((semantic-list "((uint16_t)0x0200)" 7465 . 7483)))
          ("I2C_IT_SB" . ((semantic-list "((uint32_t)0x02000001)" 8559 . 8581)))
          ("I2C_FLAG_SMBALERT" . ((semantic-list "((uint32_t)0x10008000)" 9867 . 9889)))
          ("I2C_FLAG_TIMEOUT" . ((semantic-list "((uint32_t)0x10004000)" 9930 . 9952)))
          ("I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED" . ((semantic-list "((uint32_t)0x00020002)" 17824 . 17846)))
          ("I2C_Mode_I2C" . ((semantic-list "((uint16_t)0x0000)" 3303 . 3321)))
          ("I2C_AcknowledgedAddress_7bit" . ((semantic-list "((uint16_t)0x4000)" 4791 . 4809)))
          ("I2C_NACKPosition_Next" . ((semantic-list "((uint16_t)0x0800)" 6377 . 6395)))
          ("IS_I2C_NACK_POSITION" (spp-arg-list ("POSITION") 6483 . 6493) . ((semantic-list "(((POSITION) == I2C_NACKPosition_Next) || \\
                                         ((POSITION) == I2C_NACKPosition_Current))" 6495 . 6621)))
          ("I2C_IT_ADD10" . ((semantic-list "((uint32_t)0x02000008)" 8370 . 8392)))
          ("I2C_FLAG_DUALF" . ((semantic-list "((uint32_t)0x00800000)" 9381 . 9403)))
          ("I2C_FLAG_STOPF" . ((semantic-list "((uint32_t)0x10000010)" 10434 . 10456)))
          ("I2C_EVENT_MASTER_MODE_ADDRESS10" . ((semantic-list "((uint32_t)0x00030008)" 14080 . 14102)))
          ("I2C_EVENT_SLAVE_STOP_DETECTED" . ((semantic-list "((uint32_t)0x00000010)" 20093 . 20115)))
          ("I2C_EVENT_SLAVE_BYTE_TRANSMITTING" . ((semantic-list "((uint32_t)0x00060080)" 20376 . 20398)))
          ("I2C_EVENT_SLAVE_ACK_FAILURE" . ((semantic-list "((uint32_t)0x00000400)" 20503 . 20525)))
          ("I2C_IT_AF" . ((semantic-list "((uint32_t)0x01000400)" 7992 . 8014)))
          ("IS_I2C_CLEAR_IT" (spp-arg-list ("IT") 8606 . 8610) . ((semantic-list "((((IT) & (uint16_t)0x20FF) == 0x00) && ((IT) != (uint16_t)0x00))" 8611 . 8676)))
          ("I2C_FLAG_ARLO" . ((semantic-list "((uint32_t)0x10000200)" 10182 . 10204)))
          ("I2C_FLAG_TXE" . ((semantic-list "((uint32_t)0x10000080)" 10308 . 10330)))
          ("I2C_FLAG_SB" . ((semantic-list "((uint32_t)0x10000001)" 10686 . 10708)))
          ("I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED" . ((semantic-list "((uint32_t)0x00120000)" 18385 . 18407)))
          ("I2C_Direction_Transmitter" . ((semantic-list "((uint8_t)0x00)" 4446 . 4461)))
          ("I2C_SMBusAlert_High" . ((semantic-list "((uint16_t)0xDFFF)" 6793 . 6811)))
          ("I2C_IT_TIMEOUT" . ((semantic-list "((uint32_t)0x01004000)" 7803 . 7825)))
          ("I2C_FLAG_OVR" . ((semantic-list "((uint32_t)0x10000800)" 10056 . 10078)))
          ("I2C_FLAG_ADD10" . ((semantic-list "((uint32_t)0x10000008)" 10497 . 10519)))
          ("I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED" . ((semantic-list "((uint32_t)0x00060082)" 17932 . 17954)))
          ("IS_I2C_ALL_PERIPH" (spp-arg-list ("PERIPH") 2949 . 2957) . ((semantic-list "(((PERIPH) == I2C1) || \\
                                   ((PERIPH) == I2C2) || \\
                                   ((PERIPH) == I2C3))" 2958 . 3096)))
          ("IS_I2C_MODE" (spp-arg-list ("MODE") 3461 . 3467) . ((semantic-list "(((MODE) == I2C_Mode_I2C) || \\
                           ((MODE) == I2C_Mode_SMBusDevice) || \\
                           ((MODE) == I2C_Mode_SMBusHost))" 3468 . 3622)))
          ("IS_I2C_DUTY_CYCLE" (spp-arg-list ("CYCLE") 3916 . 3923) . ((semantic-list "(((CYCLE) == I2C_DutyCycle_16_9) || \\
                                  ((CYCLE) == I2C_DutyCycle_2))" 3924 . 4025)))
          ("IS_I2C_GET_IT" (spp-arg-list ("IT") 8699 . 8703) . ((semantic-list "(((IT) == I2C_IT_SMBALERT) || ((IT) == I2C_IT_TIMEOUT) || \\
                           ((IT) == I2C_IT_PECERR) || ((IT) == I2C_IT_OVR) || \\
                           ((IT) == I2C_IT_AF) || ((IT) == I2C_IT_ARLO) || \\
                           ((IT) == I2C_IT_BERR) || ((IT) == I2C_IT_TXE) || \\
                           ((IT) == I2C_IT_RXNE) || ((IT) == I2C_IT_STOPF) || \\
                           ((IT) == I2C_IT_ADD10) || ((IT) == I2C_IT_BTF) || \\
                           ((IT) == I2C_IT_ADDR) || ((IT) == I2C_IT_SB))" 8704 . 9230)))
          ("I2C_FLAG_SMBDEFAULT" . ((semantic-list "((uint32_t)0x00200000)" 9507 . 9529)))
          ("I2C_FLAG_AF" . ((semantic-list "((uint32_t)0x10000400)" 10119 . 10141)))
          ("I2C_FLAG_RXNE" . ((semantic-list "((uint32_t)0x10000040)" 10371 . 10393)))
          ("I2C_DutyCycle_2" . ((semantic-list "((uint16_t)0xBFFF)" 3835 . 3853)))
          ("I2C_Ack_Enable" . ((semantic-list "((uint16_t)0x0400)" 4131 . 4149)))
          ("IS_I2C_ACK_STATE" (spp-arg-list ("STATE") 4233 . 4240) . ((semantic-list "(((STATE) == I2C_Ack_Enable) || \\
                                 ((STATE) == I2C_Ack_Disable))" 4241 . 4337)))
          ("I2C_NACKPosition_Current" . ((semantic-list "((uint16_t)0xF7FF)" 6436 . 6454)))
          ("I2C_SMBusAlert_Low" . ((semantic-list "((uint16_t)0x2000)" 6734 . 6752)))
          ("IS_I2C_PEC_POSITION" (spp-arg-list ("POSITION") 7160 . 7170) . ((semantic-list "(((POSITION) == I2C_PECPosition_Next) || \\
                                       ((POSITION) == I2C_PECPosition_Current))" 7171 . 7293)))
          ("I2C_IT_PECERR" . ((semantic-list "((uint32_t)0x01001000)" 7866 . 7888)))
          ("I2C_IT_BTF" . ((semantic-list "((uint32_t)0x02000004)" 8433 . 8455)))
          ("I2C_IT_BERR" . ((semantic-list "((uint32_t)0x01000100)" 8118 . 8140)))
          ("I2C_IT_ADDR" . ((semantic-list "((uint32_t)0x02000002)" 8496 . 8518)))
          ("I2C_FLAG_TRA" . ((semantic-list "((uint32_t)0x00040000)" 9633 . 9655)))
          ("I2C_EVENT_MASTER_BYTE_RECEIVED" . ((semantic-list "((uint32_t)0x00030040)" 15672 . 15694)))
          ("IS_I2C_EVENT" (spp-arg-list ("EVENT") 20784 . 20791) . ((semantic-list "(((EVENT) == I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_BYTE_RECEIVED) || \\
                             ((EVENT) == (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF)) || \\
                             ((EVENT) == (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL)) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_BYTE_TRANSMITTED) || \\
                             ((EVENT) == (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF)) || \\
                             ((EVENT) == (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL)) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_STOP_DETECTED) || \\
                             ((EVENT) == I2C_EVENT_MASTER_MODE_SELECT) || \\
                             ((EVENT) == I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED) || \\
                             ((EVENT) == I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED) || \\
                             ((EVENT) == I2C_EVENT_MASTER_BYTE_RECEIVED) || \\
                             ((EVENT) == I2C_EVENT_MASTER_BYTE_TRANSMITTED) || \\
                             ((EVENT) == I2C_EVENT_MASTER_BYTE_TRANSMITTING) || \\
                             ((EVENT) == I2C_EVENT_MASTER_MODE_ADDRESS10) || \\
                             ((EVENT) == I2C_EVENT_SLAVE_ACK_FAILURE))" 20792 . 22495)))
          ("I2C_Mode_SMBusHost" . ((semantic-list "((uint16_t)0x000A)" 3423 . 3441)))
          ("IS_I2C_CONFIG_IT" (spp-arg-list ("IT") 7567 . 7571) . ((semantic-list "((((IT) & (uint16_t)0xF8FF) == 0x00) && ((IT) != 0x00))" 7572 . 7627)))
          ("I2C_IT_SMBALERT" . ((semantic-list "((uint32_t)0x01008000)" 7740 . 7762)))
          ("IS_I2C_CLEAR_FLAG" (spp-arg-list ("FLAG") 10735 . 10741) . ((semantic-list "((((FLAG) & (uint16_t)0x20FF) == 0x00) && ((FLAG) != (uint16_t)0x00))" 10742 . 10811)))
          ("IS_I2C_OWN_ADDRESS1" (spp-arg-list ("ADDRESS1") 22585 . 22595) . ((semantic-list "((ADDRESS1) <= 0x3FF)" 22596 . 22617)))
          ("IS_I2C_CLOCK_SPEED" (spp-arg-list ("SPEED") 22705 . 22712) . ((semantic-list "(((SPEED) >= 0x1) && ((SPEED) <= 400000))" 22713 . 22754)))
          ("__STM32F4xx_I2C_H")
          ("I2C_AcknowledgedAddress_10bit" . ((semantic-list "((uint16_t)0xC000)" 4850 . 4868)))
          ("I2C_Register_TRISE" . ((semantic-list "((uint8_t)0x20)" 5602 . 5617)))
          ("I2C_PECPosition_Next" . ((semantic-list "((uint16_t)0x0800)" 7055 . 7073)))
          ("I2C_PECPosition_Current" . ((semantic-list "((uint16_t)0xF7FF)" 7114 . 7132)))
          ("I2C_IT_BUF" . ((semantic-list "((uint16_t)0x0400)" 7406 . 7424)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__STM32F4xx_GPIO_H" variable (:constant-flag t) nil [1282 1300])
            ("stm32f4xx.h" include nil nil [1424 1446])
            ("IS_GPIO_ALL_PERIPH" variable (:constant-flag t) nil [1629 1647])
            ("GPIOMode_TypeDef" type
               (:typedef ("" type
                     (:members 
                        ( ("GPIO_Mode_IN" variable
                             (:constant-flag t
                              :default-value (2386 2390)
                              :type "int")
                              (reparse-symbol enumsubparts) [2369 2390])
                          ("GPIO_Mode_OUT" variable
                             (:constant-flag t
                              :default-value (2435 2439)
                              :type "int")
                              (reparse-symbol enumsubparts) [2418 2439])
                          ("GPIO_Mode_AF" variable
                             (:constant-flag t
                              :default-value (2485 2489)
                              :type "int")
                              (reparse-symbol enumsubparts) [2468 2489])
                          ("GPIO_Mode_AN" variable
                             (:constant-flag t
                              :default-value (2547 2551)
                              :type "int")
                              (reparse-symbol enumsubparts) [2530 2551]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [2351 2596])
            ("IS_GPIO_MODE" variable (:constant-flag t) nil [2605 2617])
            ("GPIOOType_TypeDef" type
               (:typedef ("" type
                     (:members 
                        ( ("GPIO_OType_PP" variable
                             (:constant-flag t
                              :default-value (2855 2859)
                              :type "int")
                              (reparse-symbol enumsubparts) [2839 2859])
                          ("GPIO_OType_OD" variable
                             (:constant-flag t
                              :default-value (2879 2883)
                              :type "int")
                              (reparse-symbol enumsubparts) [2863 2883]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [2821 2903])
            ("IS_GPIO_OTYPE" variable (:constant-flag t) nil [2912 2925])
            ("GPIOSpeed_TypeDef" type
               (:typedef ("" type
                     (:members 
                        ( ("GPIO_Low_Speed" variable
                             (:constant-flag t
                              :default-value (3100 3104)
                              :type "int")
                              (reparse-symbol enumsubparts) [3079 3104])
                          ("GPIO_Medium_Speed" variable
                             (:constant-flag t
                              :default-value (3150 3154)
                              :type "int")
                              (reparse-symbol enumsubparts) [3129 3154])
                          ("GPIO_Fast_Speed" variable
                             (:constant-flag t
                              :default-value (3200 3204)
                              :type "int")
                              (reparse-symbol enumsubparts) [3179 3204])
                          ("GPIO_High_Speed" variable
                             (:constant-flag t
                              :default-value (3250 3254)
                              :type "int")
                              (reparse-symbol enumsubparts) [3229 3254]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [3061 3296])
            ("GPIO_Speed_2MHz" variable (:constant-flag t) nil [3335 3350])
            ("GPIO_Speed_25MHz" variable (:constant-flag t) nil [3382 3398])
            ("GPIO_Speed_50MHz" variable (:constant-flag t) nil [3429 3445])
            ("GPIO_Speed_100MHz" variable (:constant-flag t) nil [3474 3491])
            ("IS_GPIO_SPEED" variable (:constant-flag t) nil [3522 3535])
            ("GPIOPuPd_TypeDef" type
               (:typedef ("" type
                     (:members 
                        ( ("GPIO_PuPd_NOPULL" variable
                             (:constant-flag t
                              :default-value (3813 3817)
                              :type "int")
                              (reparse-symbol enumsubparts) [3794 3817])
                          ("GPIO_PuPd_UP" variable
                             (:constant-flag t
                              :default-value (3840 3844)
                              :type "int")
                              (reparse-symbol enumsubparts) [3821 3844])
                          ("GPIO_PuPd_DOWN" variable
                             (:constant-flag t
                              :default-value (3867 3871)
                              :type "int")
                              (reparse-symbol enumsubparts) [3848 3871]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [3776 3890])
            ("IS_GPIO_PUPD" variable (:constant-flag t) nil [3899 3911])
            ("BitAction" type
               (:typedef ("" type
                     (:members 
                        ( ("Bit_RESET" variable
                             (:constant-flag t
                              :default-value (4131 4132)
                              :type "int")
                              (reparse-symbol enumsubparts) [4119 4132])
                          ("Bit_SET" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4136 4145]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4101 4155])
            ("IS_GPIO_BIT_ACTION" variable (:constant-flag t) nil [4164 4182])
            ("GPIO_InitTypeDef" type
               (:typedef ("" type
                     (:members 
                        ( ("GPIO_Pin" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4320 4338])
                          ("GPIO_Mode" variable (:type ("GPIOMode_TypeDef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4501 4528])
                          ("GPIO_Speed" variable (:type ("GPIOSpeed_TypeDef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4690 4719])
                          ("GPIO_OType" variable (:type ("GPIOOType_TypeDef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4871 4900])
                          ("GPIO_PuPd" variable (:type ("GPIOPuPd_TypeDef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5068 5095]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4301 5285])
            ("GPIO_Pin_0" variable (:constant-flag t) nil [5474 5484])
            ("GPIO_Pin_1" variable (:constant-flag t) nil [5550 5560])
            ("GPIO_Pin_2" variable (:constant-flag t) nil [5626 5636])
            ("GPIO_Pin_3" variable (:constant-flag t) nil [5702 5712])
            ("GPIO_Pin_4" variable (:constant-flag t) nil [5778 5788])
            ("GPIO_Pin_5" variable (:constant-flag t) nil [5854 5864])
            ("GPIO_Pin_6" variable (:constant-flag t) nil [5930 5940])
            ("GPIO_Pin_7" variable (:constant-flag t) nil [6006 6016])
            ("GPIO_Pin_8" variable (:constant-flag t) nil [6082 6092])
            ("GPIO_Pin_9" variable (:constant-flag t) nil [6158 6168])
            ("GPIO_Pin_10" variable (:constant-flag t) nil [6234 6245])
            ("GPIO_Pin_11" variable (:constant-flag t) nil [6311 6322])
            ("GPIO_Pin_12" variable (:constant-flag t) nil [6388 6399])
            ("GPIO_Pin_13" variable (:constant-flag t) nil [6465 6476])
            ("GPIO_Pin_14" variable (:constant-flag t) nil [6542 6553])
            ("GPIO_Pin_15" variable (:constant-flag t) nil [6619 6630])
            ("GPIO_Pin_All" variable (:constant-flag t) nil [6696 6708])
            ("GPIO_PIN_MASK" variable (:constant-flag t) nil [6776 6789])
            ("IS_GPIO_PIN" variable (:constant-flag t) nil [6865 6876])
            ("IS_GET_GPIO_PIN" variable (:constant-flag t) nil [6945 6960])
            ("GPIO_PinSource0" variable (:constant-flag t) nil [7923 7938])
            ("GPIO_PinSource1" variable (:constant-flag t) nil [7974 7989])
            ("GPIO_PinSource2" variable (:constant-flag t) nil [8025 8040])
            ("GPIO_PinSource3" variable (:constant-flag t) nil [8076 8091])
            ("GPIO_PinSource4" variable (:constant-flag t) nil [8127 8142])
            ("GPIO_PinSource5" variable (:constant-flag t) nil [8178 8193])
            ("GPIO_PinSource6" variable (:constant-flag t) nil [8229 8244])
            ("GPIO_PinSource7" variable (:constant-flag t) nil [8280 8295])
            ("GPIO_PinSource8" variable (:constant-flag t) nil [8331 8346])
            ("GPIO_PinSource9" variable (:constant-flag t) nil [8382 8397])
            ("GPIO_PinSource10" variable (:constant-flag t) nil [8433 8449])
            ("GPIO_PinSource11" variable (:constant-flag t) nil [8484 8500])
            ("GPIO_PinSource12" variable (:constant-flag t) nil [8535 8551])
            ("GPIO_PinSource13" variable (:constant-flag t) nil [8586 8602])
            ("GPIO_PinSource14" variable (:constant-flag t) nil [8637 8653])
            ("GPIO_PinSource15" variable (:constant-flag t) nil [8688 8704])
            ("IS_GPIO_PIN_SOURCE" variable (:constant-flag t) nil [8740 8758])
            ("GPIO_AF_RTC_50Hz" variable (:constant-flag t) nil [10101 10117])
            ("GPIO_AF_MCO" variable (:constant-flag t) nil [10190 10201])
            ("GPIO_AF_TAMPER" variable (:constant-flag t) nil [10290 10304])
            ("GPIO_AF_SWJ" variable (:constant-flag t) nil [10401 10412])
            ("GPIO_AF_TRACE" variable (:constant-flag t) nil [10500 10513])
            ("GPIO_AF_TIM1" variable (:constant-flag t) nil [10763 10775])
            ("GPIO_AF_TIM2" variable (:constant-flag t) nil [10848 10860])
            ("GPIO_AF_TIM3" variable (:constant-flag t) nil [11157 11169])
            ("GPIO_AF_TIM4" variable (:constant-flag t) nil [11242 11254])
            ("GPIO_AF_TIM5" variable (:constant-flag t) nil [11327 11339])
            ("GPIO_AF_TIM8" variable (:constant-flag t) nil [11454 11466])
            ("GPIO_AF_TIM9" variable (:constant-flag t) nil [11539 11551])
            ("GPIO_AF_TIM10" variable (:constant-flag t) nil [11624 11637])
            ("GPIO_AF_TIM11" variable (:constant-flag t) nil [11710 11723])
            ("GPIO_AF_I2C1" variable (:constant-flag t) nil [12116 12128])
            ("GPIO_AF_I2C2" variable (:constant-flag t) nil [12201 12213])
            ("GPIO_AF_I2C3" variable (:constant-flag t) nil [12286 12298])
            ("GPIO_AF_SPI1" variable (:constant-flag t) nil [12775 12787])
            ("GPIO_AF_SPI2" variable (:constant-flag t) nil [12865 12877])
            ("GPIO_AF5_SPI3" variable (:constant-flag t) nil [12955 12968])
            ("GPIO_AF_SPI4" variable (:constant-flag t) nil [13096 13108])
            ("GPIO_AF_SPI5" variable (:constant-flag t) nil [13186 13198])
            ("GPIO_AF_SPI6" variable (:constant-flag t) nil [13276 13288])
            ("GPIO_AF_SPI3" variable (:constant-flag t) nil [13408 13420])
            ("GPIO_AF6_SPI1" variable (:constant-flag t) nil [13498 13511])
            ("GPIO_AF6_SPI2" variable (:constant-flag t) nil [13614 13627])
            ("GPIO_AF6_SPI4" variable (:constant-flag t) nil [13742 13755])
            ("GPIO_AF6_SPI5" variable (:constant-flag t) nil [13858 13871])
            ("GPIO_AF_SAI1" variable (:constant-flag t) nil [13986 13998])
            ("GPIO_AF_I2S2ext" variable (:constant-flag t) nil [14076 14091])
            ("GPIO_AF_USART1" variable (:constant-flag t) nil [14589 14603])
            ("GPIO_AF_USART2" variable (:constant-flag t) nil [14678 14692])
            ("GPIO_AF_USART3" variable (:constant-flag t) nil [14767 14781])
            ("GPIO_AF7_SPI3" variable (:constant-flag t) nil [14856 14869])
            ("GPIO_AF_I2S3ext" variable (:constant-flag t) nil [15240 15255])
            ("GPIO_AF_UART4" variable (:constant-flag t) nil [15322 15335])
            ("GPIO_AF_UART5" variable (:constant-flag t) nil [15409 15422])
            ("GPIO_AF_USART6" variable (:constant-flag t) nil [15496 15510])
            ("GPIO_AF_UART7" variable (:constant-flag t) nil [15583 15596])
            ("GPIO_AF_UART8" variable (:constant-flag t) nil [15670 15683])
            ("GPIO_AF_CAN1" variable (:constant-flag t) nil [16382 16394])
            ("GPIO_AF_CAN2" variable (:constant-flag t) nil [16468 16480])
            ("GPIO_AF_TIM12" variable (:constant-flag t) nil [16554 16567])
            ("GPIO_AF_TIM13" variable (:constant-flag t) nil [16640 16653])
            ("GPIO_AF_TIM14" variable (:constant-flag t) nil [16726 16739])
            ("GPIO_AF9_I2C2" variable (:constant-flag t) nil [16812 16825])
            ("GPIO_AF9_I2C3" variable (:constant-flag t) nil [16980 16993])
            ("GPIO_AF9_LTDC" variable (:constant-flag t) nil [17275 17288])
            ("GPIO_AF_OTG_FS" variable (:constant-flag t) nil [17928 17942])
            ("GPIO_AF_OTG_HS" variable (:constant-flag t) nil [18015 18029])
            ("GPIO_AF_ETH" variable (:constant-flag t) nil [19061 19072])
            ("GPIO_AF_OTG_HS_FS" variable (:constant-flag t) nil [20247 20264])
            ("GPIO_AF_SDIO" variable (:constant-flag t) nil [20354 20366])
            ("GPIO_AF_DCMI" variable (:constant-flag t) nil [20504 20516])
            ("GPIO_AF_LTDC" variable (:constant-flag t) nil [20772 20784])
            ("GPIO_AF_EVENTOUT" variable (:constant-flag t) nil [21046 21062])
            ("GPIO_Mode_AIN" variable (:constant-flag t) nil [26913 26926])
            ("GPIO_AF_OTG1_FS" variable (:constant-flag t) nil [26959 26974])
            ("GPIO_AF_OTG2_HS" variable (:constant-flag t) nil [27006 27021])
            ("GPIO_AF_OTG2_FS" variable (:constant-flag t) nil [27053 27068])
            ("GPIO_DeInit" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27391 27411]))                  
                :type "void")
                nil [27374 27412])
            ("GPIO_Init" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27510 27530])
                    ("GPIO_InitStruct" variable
                       (:pointer 1
                        :type ("GPIO_InitTypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27531 27565]))                  
                :type "void")
                nil [27495 27566])
            ("GPIO_StructInit" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIO_InitStruct" variable
                       (:pointer 1
                        :type ("GPIO_InitTypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27588 27622]))                  
                :type "void")
                nil [27567 27623])
            ("GPIO_PinLockConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27648 27668])
                    ("GPIO_Pin" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27669 27687]))                  
                :type "void")
                nil [27624 27688])
            ("GPIO_ReadInputDataBit" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27801 27821])
                    ("GPIO_Pin" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27822 27840]))                  
                :type ("uint8_t" type (:type "class") nil nil))
                nil [27771 27841])
            ("GPIO_ReadInputData" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27870 27890]))                  
                :type ("uint16_t" type (:type "class") nil nil))
                nil [27842 27891])
            ("GPIO_ReadOutputDataBit" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27923 27943])
                    ("GPIO_Pin" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27944 27962]))                  
                :type ("uint8_t" type (:type "class") nil nil))
                nil [27892 27963])
            ("GPIO_ReadOutputData" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27993 28013]))                  
                :type ("uint16_t" type (:type "class") nil nil))
                nil [27964 28014])
            ("GPIO_SetBits" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28033 28053])
                    ("GPIO_Pin" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28054 28072]))                  
                :type "void")
                nil [28015 28073])
            ("GPIO_ResetBits" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28094 28114])
                    ("GPIO_Pin" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28115 28133]))                  
                :type "void")
                nil [28074 28134])
            ("GPIO_WriteBit" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28154 28174])
                    ("GPIO_Pin" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28175 28193])
                    ("BitVal" variable (:type ("BitAction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28194 28211]))                  
                :type "void")
                nil [28135 28212])
            ("GPIO_Write" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28229 28249])
                    ("PortVal" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28250 28267]))                  
                :type "void")
                nil [28213 28268])
            ("GPIO_ToggleBits" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28290 28310])
                    ("GPIO_Pin" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28311 28329]))                  
                :type "void")
                nil [28269 28330])
            ("GPIO_PinAFConfig" function
               (:prototype-flag t
                :arguments 
                  ( ("GPIOx" variable
                       (:pointer 1
                        :type ("GPIO_TypeDef" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28435 28455])
                    ("GPIO_PinSource" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28456 28480])
                    ("GPIO_AF" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28481 28497]))                  
                :type "void")
                nil [28413 28498]))          
      :file "stm32f4xx_gpio.h"
      :pointmax 28678
      :fsize 29269
      :lastmodtime '(23800 38969 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("GPIO_Pin_2" . ((semantic-list "((uint16_t)0x0004)" 5653 . 5671)))
          ("GPIO_PinSource5" . ((semantic-list "((uint8_t)0x05)" 8205 . 8220)))
          ("GPIO_AF_TIM4" . ((semantic-list "((uint8_t)0x02)" 11264 . 11279)))
          ("GPIO_AF_TIM10" . ((semantic-list "((uint8_t)0x03)" 11646 . 11661)))
          ("GPIO_AF_SPI6" . ((semantic-list "((uint8_t)0x05)" 13298 . 13313)))
          ("GPIO_AF_I2S2ext" . ((semantic-list "((uint8_t)0x06)" 14098 . 14113)))
          ("GPIO_AF_USART1" . ((semantic-list "((uint8_t)0x07)" 14612 . 14627)))
          ("GPIO_AF_OTG_HS_FS" . ((semantic-list "((uint8_t)0xC)" 20272 . 20286)))
          ("GPIO_AF_OTG2_FS" . ((symbol "GPIO_AF_OTG_HS_FS" 27077 . 27094)))
          ("IS_GPIO_ALL_PERIPH" (spp-arg-list ("PERIPH") 1647 . 1655) . ((semantic-list "(((PERIPH) == GPIOA) || \\
                                    ((PERIPH) == GPIOB) || \\
                                    ((PERIPH) == GPIOC) || \\
                                    ((PERIPH) == GPIOD) || \\
                                    ((PERIPH) == GPIOE) || \\
                                    ((PERIPH) == GPIOF) || \\
                                    ((PERIPH) == GPIOG) || \\
                                    ((PERIPH) == GPIOH) || \\
                                    ((PERIPH) == GPIOI) || \\
                                    ((PERIPH) == GPIOJ) || \\
                                    ((PERIPH) == GPIOK))" 1656 . 2287)))
          ("GPIO_Pin_3" . ((semantic-list "((uint16_t)0x0008)" 5729 . 5747)))
          ("GPIO_PinSource6" . ((semantic-list "((uint8_t)0x06)" 8256 . 8271)))
          ("GPIO_AF_RTC_50Hz" . ((semantic-list "((uint8_t)0x00)" 10123 . 10138)))
          ("GPIO_AF_TIM5" . ((semantic-list "((uint8_t)0x02)" 11349 . 11364)))
          ("GPIO_AF_TIM11" . ((semantic-list "((uint8_t)0x03)" 11732 . 11747)))
          ("GPIO_AF5_SPI3" . ((semantic-list "((uint8_t)0x05)" 12977 . 12992)))
          ("GPIO_AF_USART2" . ((semantic-list "((uint8_t)0x07)" 14701 . 14716)))
          ("GPIO_AF_I2S3ext" . ((symbol "GPIO_AF7_SPI3" 15258 . 15271)))
          ("GPIO_AF_LTDC" . ((semantic-list "((uint8_t)0x0E)" 20794 . 20809)))
          ("GPIO_Speed_2MHz" . ((symbol "GPIO_Low_Speed" 3354 . 3368)))
          ("GPIO_Pin_4" . ((semantic-list "((uint16_t)0x0010)" 5805 . 5823)))
          ("IS_GET_GPIO_PIN" (spp-arg-list ("PIN") 6960 . 6965) . ((semantic-list "(((PIN) == GPIO_Pin_0) || \\
                              ((PIN) == GPIO_Pin_1) || \\
                              ((PIN) == GPIO_Pin_2) || \\
                              ((PIN) == GPIO_Pin_3) || \\
                              ((PIN) == GPIO_Pin_4) || \\
                              ((PIN) == GPIO_Pin_5) || \\
                              ((PIN) == GPIO_Pin_6) || \\
                              ((PIN) == GPIO_Pin_7) || \\
                              ((PIN) == GPIO_Pin_8) || \\
                              ((PIN) == GPIO_Pin_9) || \\
                              ((PIN) == GPIO_Pin_10) || \\
                              ((PIN) == GPIO_Pin_11) || \\
                              ((PIN) == GPIO_Pin_12) || \\
                              ((PIN) == GPIO_Pin_13) || \\
                              ((PIN) == GPIO_Pin_14) || \\
                              ((PIN) == GPIO_Pin_15))" 6966 . 7850)))
          ("GPIO_PinSource7" . ((semantic-list "((uint8_t)0x07)" 8307 . 8322)))
          ("GPIO_PinSource10" . ((semantic-list "((uint8_t)0x0A)" 8460 . 8475)))
          ("GPIO_AF_TRACE" . ((semantic-list "((uint8_t)0x00)" 10522 . 10537)))
          ("GPIO_AF_USART3" . ((semantic-list "((uint8_t)0x07)" 14790 . 14805)))
          ("GPIO_AF_CAN1" . ((semantic-list "((uint8_t)0x09)" 16404 . 16419)))
          ("GPIO_AF_TIM12" . ((semantic-list "((uint8_t)0x09)" 16576 . 16591)))
          ("GPIO_AF9_LTDC" . ((semantic-list "((uint8_t)0x09)" 17297 . 17312)))
          ("GPIO_Pin_5" . ((semantic-list "((uint16_t)0x0020)" 5881 . 5899)))
          ("GPIO_PinSource8" . ((semantic-list "((uint8_t)0x08)" 8358 . 8373)))
          ("GPIO_PinSource11" . ((semantic-list "((uint8_t)0x0B)" 8511 . 8526)))
          ("IS_GPIO_PIN_SOURCE" (spp-arg-list ("PINSOURCE") 8758 . 8769) . ((semantic-list "(((PINSOURCE) == GPIO_PinSource0) || \\
                                       ((PINSOURCE) == GPIO_PinSource1) || \\
                                       ((PINSOURCE) == GPIO_PinSource2) || \\
                                       ((PINSOURCE) == GPIO_PinSource3) || \\
                                       ((PINSOURCE) == GPIO_PinSource4) || \\
                                       ((PINSOURCE) == GPIO_PinSource5) || \\
                                       ((PINSOURCE) == GPIO_PinSource6) || \\
                                       ((PINSOURCE) == GPIO_PinSource7) || \\
                                       ((PINSOURCE) == GPIO_PinSource8) || \\
                                       ((PINSOURCE) == GPIO_PinSource9) || \\
                                       ((PINSOURCE) == GPIO_PinSource10) || \\
                                       ((PINSOURCE) == GPIO_PinSource11) || \\
                                       ((PINSOURCE) == GPIO_PinSource12) || \\
                                       ((PINSOURCE) == GPIO_PinSource13) || \\
                                       ((PINSOURCE) == GPIO_PinSource14) || \\
                                       ((PINSOURCE) == GPIO_PinSource15))" 8770 . 9965)))
          ("GPIO_AF_SAI1" . ((semantic-list "((uint8_t)0x06)" 14008 . 14023)))
          ("GPIO_AF_CAN2" . ((semantic-list "((uint8_t)0x09)" 16490 . 16505)))
          ("GPIO_AF_TIM13" . ((semantic-list "((uint8_t)0x09)" 16662 . 16677)))
          ("GPIO_AF_DCMI" . ((semantic-list "((uint8_t)0x0D)" 20526 . 20541)))
          ("GPIO_Speed_25MHz" . ((symbol "GPIO_Medium_Speed" 3401 . 3418)))
          ("GPIO_Speed_100MHz" . ((symbol "GPIO_High_Speed" 3493 . 3508)))
          ("GPIO_Pin_6" . ((semantic-list "((uint16_t)0x0040)" 5957 . 5975)))
          ("GPIO_PinSource9" . ((semantic-list "((uint8_t)0x09)" 8409 . 8424)))
          ("GPIO_PinSource12" . ((semantic-list "((uint8_t)0x0C)" 8562 . 8577)))
          ("GPIO_AF_SWJ" . ((semantic-list "((uint8_t)0x00)" 10423 . 10438)))
          ("GPIO_AF_TIM8" . ((semantic-list "((uint8_t)0x03)" 11476 . 11491)))
          ("GPIO_AF_TIM14" . ((semantic-list "((uint8_t)0x09)" 16748 . 16763)))
          ("GPIO_Pin_7" . ((semantic-list "((uint16_t)0x0080)" 6033 . 6051)))
          ("GPIO_PIN_MASK" . ((semantic-list "((uint32_t)0x0000FFFF)" 6803 . 6825)))
          ("GPIO_PinSource13" . ((semantic-list "((uint8_t)0x0D)" 8613 . 8628)))
          ("GPIO_AF_TIM9" . ((semantic-list "((uint8_t)0x03)" 11561 . 11576)))
          ("GPIO_AF_USART6" . ((semantic-list "((uint8_t)0x08)" 15518 . 15533)))
          ("GPIO_AF_OTG_HS" . ((semantic-list "((uint8_t)0xA)" 18038 . 18052)))
          ("IS_GPIO_MODE" (spp-arg-list ("MODE") 2617 . 2623) . ((semantic-list "(((MODE) == GPIO_Mode_IN)  || ((MODE) == GPIO_Mode_OUT) || \\
                            ((MODE) == GPIO_Mode_AF)|| ((MODE) == GPIO_Mode_AN))" 2624 . 2765)))
          ("IS_GPIO_BIT_ACTION" (spp-arg-list ("ACTION") 4182 . 4190) . ((semantic-list "(((ACTION) == Bit_RESET) || ((ACTION) == Bit_SET))" 4191 . 4241)))
          ("GPIO_Pin_8" . ((semantic-list "((uint16_t)0x0100)" 6109 . 6127)))
          ("GPIO_Pin_10" . ((semantic-list "((uint16_t)0x0400)" 6261 . 6279)))
          ("GPIO_PinSource14" . ((semantic-list "((uint8_t)0x0E)" 8664 . 8679)))
          ("GPIO_AF7_SPI3" . ((semantic-list "((uint8_t)0x07)" 14879 . 14894)))
          ("GPIO_AF_UART4" . ((semantic-list "((uint8_t)0x08)" 15344 . 15359)))
          ("GPIO_AF_OTG2_HS" . ((symbol "GPIO_AF_OTG_HS" 27030 . 27044)))
          ("IS_GPIO_PUPD" (spp-arg-list ("PUPD") 3911 . 3917) . ((semantic-list "(((PUPD) == GPIO_PuPd_NOPULL) || ((PUPD) == GPIO_PuPd_UP) || \\
                            ((PUPD) == GPIO_PuPd_DOWN))" 3918 . 4036)))
          ("GPIO_Pin_9" . ((semantic-list "((uint16_t)0x0200)" 6185 . 6203)))
          ("GPIO_Pin_11" . ((semantic-list "((uint16_t)0x0800)" 6338 . 6356)))
          ("GPIO_PinSource15" . ((semantic-list "((uint8_t)0x0F)" 8715 . 8730)))
          ("GPIO_AF_UART5" . ((semantic-list "((uint8_t)0x08)" 15431 . 15446)))
          ("GPIO_Mode_AIN" . ((symbol "GPIO_Mode_AN" 26937 . 26949)))
          ("IS_GPIO_OTYPE" (spp-arg-list ("OTYPE") 2925 . 2932) . ((semantic-list "(((OTYPE) == GPIO_OType_PP) || ((OTYPE) == GPIO_OType_OD))" 2933 . 2991)))
          ("GPIO_Speed_50MHz" . ((symbol "GPIO_Fast_Speed" 3448 . 3463)))
          ("GPIO_Pin_12" . ((semantic-list "((uint16_t)0x1000)" 6415 . 6433)))
          ("GPIO_Pin_All" . ((semantic-list "((uint16_t)0xFFFF)" 6723 . 6741)))
          ("GPIO_PinSource0" . ((semantic-list "((uint8_t)0x00)" 7950 . 7965)))
          ("GPIO_AF_SPI1" . ((semantic-list "((uint8_t)0x05)" 12797 . 12812)))
          ("GPIO_AF6_SPI1" . ((semantic-list "((uint8_t)0x06)" 13520 . 13535)))
          ("GPIO_AF_SDIO" . ((semantic-list "((uint8_t)0xC)" 20379 . 20393)))
          ("GPIO_AF_EVENTOUT" . ((semantic-list "((uint8_t)0x0F)" 21068 . 21083)))
          ("GPIO_Pin_13" . ((semantic-list "((uint16_t)0x2000)" 6492 . 6510)))
          ("GPIO_PinSource1" . ((semantic-list "((uint8_t)0x01)" 8001 . 8016)))
          ("GPIO_AF_I2C1" . ((semantic-list "((uint8_t)0x04)" 12138 . 12153)))
          ("GPIO_AF_SPI2" . ((semantic-list "((uint8_t)0x05)" 12887 . 12902)))
          ("GPIO_AF6_SPI2" . ((semantic-list "((uint8_t)0x06)" 13636 . 13651)))
          ("GPIO_AF_UART7" . ((semantic-list "((uint8_t)0x08)" 15605 . 15620)))
          ("IS_GPIO_SPEED" (spp-arg-list ("SPEED") 3535 . 3542) . ((semantic-list "(((SPEED) == GPIO_Low_Speed) || ((SPEED) == GPIO_Medium_Speed) || \\
                              ((SPEED) == GPIO_Fast_Speed)||  ((SPEED) == GPIO_High_Speed))" 3543 . 3702)))
          ("GPIO_Pin_14" . ((semantic-list "((uint16_t)0x4000)" 6569 . 6587)))
          ("GPIO_PinSource2" . ((semantic-list "((uint8_t)0x02)" 8052 . 8067)))
          ("GPIO_AF_TAMPER" . ((semantic-list "((uint8_t)0x00)" 10312 . 10327)))
          ("GPIO_AF_TIM1" . ((semantic-list "((uint8_t)0x01)" 10785 . 10800)))
          ("GPIO_AF_I2C2" . ((semantic-list "((uint8_t)0x04)" 12223 . 12238)))
          ("GPIO_AF_SPI3" . ((semantic-list "((uint8_t)0x06)" 13430 . 13445)))
          ("GPIO_AF_UART8" . ((semantic-list "((uint8_t)0x08)" 15692 . 15707)))
          ("GPIO_AF_ETH" . ((semantic-list "((uint8_t)0x0B)" 19085 . 19100)))
          ("GPIO_Pin_0" . ((semantic-list "((uint16_t)0x0001)" 5501 . 5519)))
          ("GPIO_Pin_15" . ((semantic-list "((uint16_t)0x8000)" 6646 . 6664)))
          ("IS_GPIO_PIN" (spp-arg-list ("PIN") 6876 . 6881) . ((semantic-list "(((PIN) & GPIO_PIN_MASK ) != (uint32_t)0x00)" 6892 . 6936)))
          ("GPIO_PinSource3" . ((semantic-list "((uint8_t)0x03)" 8103 . 8118)))
          ("GPIO_AF_TIM2" . ((semantic-list "((uint8_t)0x01)" 10870 . 10885)))
          ("GPIO_AF_I2C3" . ((semantic-list "((uint8_t)0x04)" 12308 . 12323)))
          ("GPIO_AF_SPI4" . ((semantic-list "((uint8_t)0x05)" 13118 . 13133)))
          ("GPIO_AF6_SPI4" . ((semantic-list "((uint8_t)0x06)" 13764 . 13779)))
          ("GPIO_AF9_I2C2" . ((semantic-list "((uint8_t)0x09)" 16834 . 16849)))
          ("__STM32F4xx_GPIO_H")
          ("GPIO_Pin_1" . ((semantic-list "((uint16_t)0x0002)" 5577 . 5595)))
          ("GPIO_PinSource4" . ((semantic-list "((uint8_t)0x04)" 8154 . 8169)))
          ("GPIO_AF_MCO" . ((semantic-list "((uint8_t)0x00)" 10212 . 10227)))
          ("GPIO_AF_TIM3" . ((semantic-list "((uint8_t)0x02)" 11179 . 11194)))
          ("GPIO_AF_SPI5" . ((semantic-list "((uint8_t)0x05)" 13208 . 13223)))
          ("GPIO_AF6_SPI5" . ((semantic-list "((uint8_t)0x06)" 13880 . 13895)))
          ("GPIO_AF9_I2C3" . ((semantic-list "((uint8_t)0x09)" 17002 . 17017)))
          ("GPIO_AF_OTG_FS" . ((semantic-list "((uint8_t)0xA)" 17951 . 17965)))
          ("GPIO_AF_OTG1_FS" . ((symbol "GPIO_AF_OTG_FS" 26983 . 26997)))
          )
))
  :file "!drive_c!Users!hiros!AppData!Local!Packages!CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc!LocalState!rootfs!home!yhrs!leomo!projects!lpsensor-source!lib!platform!st!STM32F4xx_StdPeriph_Driver!inc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
